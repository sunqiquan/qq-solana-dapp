(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/@solana-program/token-2022/dist/src/index.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR": ()=>AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR,
    "APPLY_CONFIDENTIAL_PENDING_BALANCE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>APPLY_CONFIDENTIAL_PENDING_BALANCE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "APPLY_CONFIDENTIAL_PENDING_BALANCE_DISCRIMINATOR": ()=>APPLY_CONFIDENTIAL_PENDING_BALANCE_DISCRIMINATOR,
    "APPROVE_CHECKED_DISCRIMINATOR": ()=>APPROVE_CHECKED_DISCRIMINATOR,
    "APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR": ()=>APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR,
    "APPROVE_DISCRIMINATOR": ()=>APPROVE_DISCRIMINATOR,
    "ASSOCIATED_TOKEN_ERROR__INVALID_OWNER": ()=>ASSOCIATED_TOKEN_ERROR__INVALID_OWNER,
    "ASSOCIATED_TOKEN_PROGRAM_ADDRESS": ()=>ASSOCIATED_TOKEN_PROGRAM_ADDRESS,
    "AccountState": ()=>AccountState,
    "AssociatedTokenInstruction": ()=>AssociatedTokenInstruction,
    "AuthorityType": ()=>AuthorityType,
    "BURN_CHECKED_DISCRIMINATOR": ()=>BURN_CHECKED_DISCRIMINATOR,
    "BURN_DISCRIMINATOR": ()=>BURN_DISCRIMINATOR,
    "CLOSE_ACCOUNT_DISCRIMINATOR": ()=>CLOSE_ACCOUNT_DISCRIMINATOR,
    "CONFIDENTIAL_DEPOSIT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>CONFIDENTIAL_DEPOSIT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "CONFIDENTIAL_DEPOSIT_DISCRIMINATOR": ()=>CONFIDENTIAL_DEPOSIT_DISCRIMINATOR,
    "CONFIDENTIAL_TRANSFER_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>CONFIDENTIAL_TRANSFER_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "CONFIDENTIAL_TRANSFER_WITH_FEE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>CONFIDENTIAL_TRANSFER_WITH_FEE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "CONFIDENTIAL_TRANSFER_WITH_FEE_DISCRIMINATOR": ()=>CONFIDENTIAL_TRANSFER_WITH_FEE_DISCRIMINATOR,
    "CONFIDENTIAL_WITHDRAW_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>CONFIDENTIAL_WITHDRAW_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "CONFIDENTIAL_WITHDRAW_DISCRIMINATOR": ()=>CONFIDENTIAL_WITHDRAW_DISCRIMINATOR,
    "CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR": ()=>CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR,
    "CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR": ()=>CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR,
    "CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR": ()=>CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR,
    "CREATE_NATIVE_MINT_DISCRIMINATOR": ()=>CREATE_NATIVE_MINT_DISCRIMINATOR,
    "DISABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>DISABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "DISABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR": ()=>DISABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
    "DISABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR": ()=>DISABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR,
    "DISABLE_CPI_GUARD_DISCRIMINATOR": ()=>DISABLE_CPI_GUARD_DISCRIMINATOR,
    "DISABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>DISABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "DISABLE_HARVEST_TO_MINT_DISCRIMINATOR": ()=>DISABLE_HARVEST_TO_MINT_DISCRIMINATOR,
    "DISABLE_MEMO_TRANSFERS_DISCRIMINATOR": ()=>DISABLE_MEMO_TRANSFERS_DISCRIMINATOR,
    "DISABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR": ()=>DISABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR,
    "DISABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>DISABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "DISABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR": ()=>DISABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
    "EMIT_TOKEN_METADATA_DISCRIMINATOR": ()=>EMIT_TOKEN_METADATA_DISCRIMINATOR,
    "EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR": ()=>EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR,
    "ENABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>ENABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "ENABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR": ()=>ENABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
    "ENABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR": ()=>ENABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR,
    "ENABLE_CPI_GUARD_DISCRIMINATOR": ()=>ENABLE_CPI_GUARD_DISCRIMINATOR,
    "ENABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>ENABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "ENABLE_HARVEST_TO_MINT_DISCRIMINATOR": ()=>ENABLE_HARVEST_TO_MINT_DISCRIMINATOR,
    "ENABLE_MEMO_TRANSFERS_DISCRIMINATOR": ()=>ENABLE_MEMO_TRANSFERS_DISCRIMINATOR,
    "ENABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR": ()=>ENABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR,
    "ENABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>ENABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "ENABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR": ()=>ENABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
    "ExtensionType": ()=>ExtensionType,
    "FREEZE_ACCOUNT_DISCRIMINATOR": ()=>FREEZE_ACCOUNT_DISCRIMINATOR,
    "GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR": ()=>GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR,
    "HARVEST_WITHHELD_TOKENS_TO_MINT_DISCRIMINATOR": ()=>HARVEST_WITHHELD_TOKENS_TO_MINT_DISCRIMINATOR,
    "HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "HARVEST_WITHHELD_TOKENS_TO_MINT_TRANSFER_FEE_DISCRIMINATOR": ()=>HARVEST_WITHHELD_TOKENS_TO_MINT_TRANSFER_FEE_DISCRIMINATOR,
    "INITIALIZE_ACCOUNT2_DISCRIMINATOR": ()=>INITIALIZE_ACCOUNT2_DISCRIMINATOR,
    "INITIALIZE_ACCOUNT3_DISCRIMINATOR": ()=>INITIALIZE_ACCOUNT3_DISCRIMINATOR,
    "INITIALIZE_ACCOUNT_DISCRIMINATOR": ()=>INITIALIZE_ACCOUNT_DISCRIMINATOR,
    "INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR": ()=>INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR,
    "INITIALIZE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR": ()=>INITIALIZE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR,
    "INITIALIZE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR": ()=>INITIALIZE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR,
    "INITIALIZE_GROUP_MEMBER_POINTER_DISCRIMINATOR": ()=>INITIALIZE_GROUP_MEMBER_POINTER_DISCRIMINATOR,
    "INITIALIZE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR": ()=>INITIALIZE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR,
    "INITIALIZE_GROUP_POINTER_DISCRIMINATOR": ()=>INITIALIZE_GROUP_POINTER_DISCRIMINATOR,
    "INITIALIZE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR": ()=>INITIALIZE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR,
    "INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR": ()=>INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR,
    "INITIALIZE_INTEREST_BEARING_MINT_DISCRIMINATOR": ()=>INITIALIZE_INTEREST_BEARING_MINT_DISCRIMINATOR,
    "INITIALIZE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR": ()=>INITIALIZE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR,
    "INITIALIZE_METADATA_POINTER_DISCRIMINATOR": ()=>INITIALIZE_METADATA_POINTER_DISCRIMINATOR,
    "INITIALIZE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR": ()=>INITIALIZE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR,
    "INITIALIZE_MINT2_DISCRIMINATOR": ()=>INITIALIZE_MINT2_DISCRIMINATOR,
    "INITIALIZE_MINT_CLOSE_AUTHORITY_DISCRIMINATOR": ()=>INITIALIZE_MINT_CLOSE_AUTHORITY_DISCRIMINATOR,
    "INITIALIZE_MINT_DISCRIMINATOR": ()=>INITIALIZE_MINT_DISCRIMINATOR,
    "INITIALIZE_MULTISIG2_DISCRIMINATOR": ()=>INITIALIZE_MULTISIG2_DISCRIMINATOR,
    "INITIALIZE_MULTISIG_DISCRIMINATOR": ()=>INITIALIZE_MULTISIG_DISCRIMINATOR,
    "INITIALIZE_NON_TRANSFERABLE_MINT_DISCRIMINATOR": ()=>INITIALIZE_NON_TRANSFERABLE_MINT_DISCRIMINATOR,
    "INITIALIZE_PAUSABLE_CONFIG_DISCRIMINATOR": ()=>INITIALIZE_PAUSABLE_CONFIG_DISCRIMINATOR,
    "INITIALIZE_PAUSABLE_CONFIG_PAUSABLE_DISCRIMINATOR": ()=>INITIALIZE_PAUSABLE_CONFIG_PAUSABLE_DISCRIMINATOR,
    "INITIALIZE_PERMANENT_DELEGATE_DISCRIMINATOR": ()=>INITIALIZE_PERMANENT_DELEGATE_DISCRIMINATOR,
    "INITIALIZE_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR": ()=>INITIALIZE_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR,
    "INITIALIZE_SCALED_UI_AMOUNT_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR": ()=>INITIALIZE_SCALED_UI_AMOUNT_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR,
    "INITIALIZE_TOKEN_GROUP_DISCRIMINATOR": ()=>INITIALIZE_TOKEN_GROUP_DISCRIMINATOR,
    "INITIALIZE_TOKEN_GROUP_MEMBER_DISCRIMINATOR": ()=>INITIALIZE_TOKEN_GROUP_MEMBER_DISCRIMINATOR,
    "INITIALIZE_TOKEN_METADATA_DISCRIMINATOR": ()=>INITIALIZE_TOKEN_METADATA_DISCRIMINATOR,
    "INITIALIZE_TRANSFER_FEE_CONFIG_DISCRIMINATOR": ()=>INITIALIZE_TRANSFER_FEE_CONFIG_DISCRIMINATOR,
    "INITIALIZE_TRANSFER_FEE_CONFIG_TRANSFER_FEE_DISCRIMINATOR": ()=>INITIALIZE_TRANSFER_FEE_CONFIG_TRANSFER_FEE_DISCRIMINATOR,
    "INITIALIZE_TRANSFER_HOOK_DISCRIMINATOR": ()=>INITIALIZE_TRANSFER_HOOK_DISCRIMINATOR,
    "INITIALIZE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR": ()=>INITIALIZE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR,
    "MINT_TO_CHECKED_DISCRIMINATOR": ()=>MINT_TO_CHECKED_DISCRIMINATOR,
    "MINT_TO_DISCRIMINATOR": ()=>MINT_TO_DISCRIMINATOR,
    "PAUSE_DISCRIMINATOR": ()=>PAUSE_DISCRIMINATOR,
    "PAUSE_PAUSABLE_DISCRIMINATOR": ()=>PAUSE_PAUSABLE_DISCRIMINATOR,
    "REALLOCATE_DISCRIMINATOR": ()=>REALLOCATE_DISCRIMINATOR,
    "RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR": ()=>RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR,
    "REMOVE_TOKEN_METADATA_KEY_DISCRIMINATOR": ()=>REMOVE_TOKEN_METADATA_KEY_DISCRIMINATOR,
    "RESUME_DISCRIMINATOR": ()=>RESUME_DISCRIMINATOR,
    "RESUME_PAUSABLE_DISCRIMINATOR": ()=>RESUME_PAUSABLE_DISCRIMINATOR,
    "REVOKE_DISCRIMINATOR": ()=>REVOKE_DISCRIMINATOR,
    "SET_AUTHORITY_DISCRIMINATOR": ()=>SET_AUTHORITY_DISCRIMINATOR,
    "SET_TRANSFER_FEE_DISCRIMINATOR": ()=>SET_TRANSFER_FEE_DISCRIMINATOR,
    "SET_TRANSFER_FEE_TRANSFER_FEE_DISCRIMINATOR": ()=>SET_TRANSFER_FEE_TRANSFER_FEE_DISCRIMINATOR,
    "SYNC_NATIVE_DISCRIMINATOR": ()=>SYNC_NATIVE_DISCRIMINATOR,
    "THAW_ACCOUNT_DISCRIMINATOR": ()=>THAW_ACCOUNT_DISCRIMINATOR,
    "TOKEN_2022_ERROR__ACCOUNT_FROZEN": ()=>TOKEN_2022_ERROR__ACCOUNT_FROZEN,
    "TOKEN_2022_ERROR__ALREADY_IN_USE": ()=>TOKEN_2022_ERROR__ALREADY_IN_USE,
    "TOKEN_2022_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED": ()=>TOKEN_2022_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED,
    "TOKEN_2022_ERROR__FIXED_SUPPLY": ()=>TOKEN_2022_ERROR__FIXED_SUPPLY,
    "TOKEN_2022_ERROR__INSUFFICIENT_FUNDS": ()=>TOKEN_2022_ERROR__INSUFFICIENT_FUNDS,
    "TOKEN_2022_ERROR__INVALID_INSTRUCTION": ()=>TOKEN_2022_ERROR__INVALID_INSTRUCTION,
    "TOKEN_2022_ERROR__INVALID_MINT": ()=>TOKEN_2022_ERROR__INVALID_MINT,
    "TOKEN_2022_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS": ()=>TOKEN_2022_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS,
    "TOKEN_2022_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS": ()=>TOKEN_2022_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS,
    "TOKEN_2022_ERROR__INVALID_STATE": ()=>TOKEN_2022_ERROR__INVALID_STATE,
    "TOKEN_2022_ERROR__MINT_CANNOT_FREEZE": ()=>TOKEN_2022_ERROR__MINT_CANNOT_FREEZE,
    "TOKEN_2022_ERROR__MINT_DECIMALS_MISMATCH": ()=>TOKEN_2022_ERROR__MINT_DECIMALS_MISMATCH,
    "TOKEN_2022_ERROR__MINT_MISMATCH": ()=>TOKEN_2022_ERROR__MINT_MISMATCH,
    "TOKEN_2022_ERROR__NATIVE_NOT_SUPPORTED": ()=>TOKEN_2022_ERROR__NATIVE_NOT_SUPPORTED,
    "TOKEN_2022_ERROR__NON_NATIVE_HAS_BALANCE": ()=>TOKEN_2022_ERROR__NON_NATIVE_HAS_BALANCE,
    "TOKEN_2022_ERROR__NON_NATIVE_NOT_SUPPORTED": ()=>TOKEN_2022_ERROR__NON_NATIVE_NOT_SUPPORTED,
    "TOKEN_2022_ERROR__NOT_RENT_EXEMPT": ()=>TOKEN_2022_ERROR__NOT_RENT_EXEMPT,
    "TOKEN_2022_ERROR__OVERFLOW": ()=>TOKEN_2022_ERROR__OVERFLOW,
    "TOKEN_2022_ERROR__OWNER_MISMATCH": ()=>TOKEN_2022_ERROR__OWNER_MISMATCH,
    "TOKEN_2022_ERROR__UNINITIALIZED_STATE": ()=>TOKEN_2022_ERROR__UNINITIALIZED_STATE,
    "TOKEN_2022_PROGRAM_ADDRESS": ()=>TOKEN_2022_PROGRAM_ADDRESS,
    "TRANSFER_CHECKED_DISCRIMINATOR": ()=>TRANSFER_CHECKED_DISCRIMINATOR,
    "TRANSFER_CHECKED_WITH_FEE_DISCRIMINATOR": ()=>TRANSFER_CHECKED_WITH_FEE_DISCRIMINATOR,
    "TRANSFER_CHECKED_WITH_FEE_TRANSFER_FEE_DISCRIMINATOR": ()=>TRANSFER_CHECKED_WITH_FEE_TRANSFER_FEE_DISCRIMINATOR,
    "TRANSFER_DISCRIMINATOR": ()=>TRANSFER_DISCRIMINATOR,
    "Token2022Account": ()=>Token2022Account,
    "Token2022Instruction": ()=>Token2022Instruction,
    "UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR": ()=>UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR,
    "UPDATE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR": ()=>UPDATE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
    "UPDATE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR": ()=>UPDATE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR,
    "UPDATE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR": ()=>UPDATE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR,
    "UPDATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR": ()=>UPDATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR,
    "UPDATE_GROUP_MEMBER_POINTER_DISCRIMINATOR": ()=>UPDATE_GROUP_MEMBER_POINTER_DISCRIMINATOR,
    "UPDATE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR": ()=>UPDATE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR,
    "UPDATE_GROUP_POINTER_DISCRIMINATOR": ()=>UPDATE_GROUP_POINTER_DISCRIMINATOR,
    "UPDATE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR": ()=>UPDATE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR,
    "UPDATE_METADATA_POINTER_DISCRIMINATOR": ()=>UPDATE_METADATA_POINTER_DISCRIMINATOR,
    "UPDATE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR": ()=>UPDATE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR,
    "UPDATE_MULTIPLIER_SCALED_UI_MINT_DISCRIMINATOR": ()=>UPDATE_MULTIPLIER_SCALED_UI_MINT_DISCRIMINATOR,
    "UPDATE_MULTIPLIER_SCALED_UI_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR": ()=>UPDATE_MULTIPLIER_SCALED_UI_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR,
    "UPDATE_RATE_INTEREST_BEARING_MINT_DISCRIMINATOR": ()=>UPDATE_RATE_INTEREST_BEARING_MINT_DISCRIMINATOR,
    "UPDATE_RATE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR": ()=>UPDATE_RATE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR,
    "UPDATE_TOKEN_GROUP_MAX_SIZE_DISCRIMINATOR": ()=>UPDATE_TOKEN_GROUP_MAX_SIZE_DISCRIMINATOR,
    "UPDATE_TOKEN_GROUP_UPDATE_AUTHORITY_DISCRIMINATOR": ()=>UPDATE_TOKEN_GROUP_UPDATE_AUTHORITY_DISCRIMINATOR,
    "UPDATE_TOKEN_METADATA_FIELD_DISCRIMINATOR": ()=>UPDATE_TOKEN_METADATA_FIELD_DISCRIMINATOR,
    "UPDATE_TOKEN_METADATA_UPDATE_AUTHORITY_DISCRIMINATOR": ()=>UPDATE_TOKEN_METADATA_UPDATE_AUTHORITY_DISCRIMINATOR,
    "UPDATE_TRANSFER_HOOK_DISCRIMINATOR": ()=>UPDATE_TRANSFER_HOOK_DISCRIMINATOR,
    "UPDATE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR": ()=>UPDATE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR,
    "WITHDRAW_EXCESS_LAMPORTS_DISCRIMINATOR": ()=>WITHDRAW_EXCESS_LAMPORTS_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_TRANSFER_FEE_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_TRANSFER_FEE_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_MINT_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_MINT_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
    "WITHDRAW_WITHHELD_TOKENS_FROM_MINT_TRANSFER_FEE_DISCRIMINATOR": ()=>WITHDRAW_WITHHELD_TOKENS_FROM_MINT_TRANSFER_FEE_DISCRIMINATOR,
    "amountToUiAmountForInterestBearingMintWithoutSimulation": ()=>amountToUiAmountForInterestBearingMintWithoutSimulation,
    "amountToUiAmountForMintWithoutSimulation": ()=>amountToUiAmountForMintWithoutSimulation,
    "amountToUiAmountForScaledUiAmountMintWithoutSimulation": ()=>amountToUiAmountForScaledUiAmountMintWithoutSimulation,
    "decodeMint": ()=>decodeMint,
    "decodeMultisig": ()=>decodeMultisig,
    "decodeToken": ()=>decodeToken,
    "extension": ()=>extension,
    "fetchAllMaybeMint": ()=>fetchAllMaybeMint,
    "fetchAllMaybeMultisig": ()=>fetchAllMaybeMultisig,
    "fetchAllMaybeToken": ()=>fetchAllMaybeToken,
    "fetchAllMint": ()=>fetchAllMint,
    "fetchAllMultisig": ()=>fetchAllMultisig,
    "fetchAllToken": ()=>fetchAllToken,
    "fetchMaybeMint": ()=>fetchMaybeMint,
    "fetchMaybeMultisig": ()=>fetchMaybeMultisig,
    "fetchMaybeToken": ()=>fetchMaybeToken,
    "fetchMint": ()=>fetchMint,
    "fetchMultisig": ()=>fetchMultisig,
    "fetchToken": ()=>fetchToken,
    "findAssociatedTokenPda": ()=>findAssociatedTokenPda,
    "getAccountStateCodec": ()=>getAccountStateCodec,
    "getAccountStateDecoder": ()=>getAccountStateDecoder,
    "getAccountStateEncoder": ()=>getAccountStateEncoder,
    "getAmountToUiAmountDiscriminatorBytes": ()=>getAmountToUiAmountDiscriminatorBytes,
    "getAmountToUiAmountInstruction": ()=>getAmountToUiAmountInstruction,
    "getAmountToUiAmountInstructionDataCodec": ()=>getAmountToUiAmountInstructionDataCodec,
    "getAmountToUiAmountInstructionDataDecoder": ()=>getAmountToUiAmountInstructionDataDecoder,
    "getAmountToUiAmountInstructionDataEncoder": ()=>getAmountToUiAmountInstructionDataEncoder,
    "getApplyConfidentialPendingBalanceConfidentialTransferDiscriminatorBytes": ()=>getApplyConfidentialPendingBalanceConfidentialTransferDiscriminatorBytes,
    "getApplyConfidentialPendingBalanceDiscriminatorBytes": ()=>getApplyConfidentialPendingBalanceDiscriminatorBytes,
    "getApplyConfidentialPendingBalanceInstruction": ()=>getApplyConfidentialPendingBalanceInstruction,
    "getApplyConfidentialPendingBalanceInstructionDataCodec": ()=>getApplyConfidentialPendingBalanceInstructionDataCodec,
    "getApplyConfidentialPendingBalanceInstructionDataDecoder": ()=>getApplyConfidentialPendingBalanceInstructionDataDecoder,
    "getApplyConfidentialPendingBalanceInstructionDataEncoder": ()=>getApplyConfidentialPendingBalanceInstructionDataEncoder,
    "getApproveCheckedDiscriminatorBytes": ()=>getApproveCheckedDiscriminatorBytes,
    "getApproveCheckedInstruction": ()=>getApproveCheckedInstruction,
    "getApproveCheckedInstructionDataCodec": ()=>getApproveCheckedInstructionDataCodec,
    "getApproveCheckedInstructionDataDecoder": ()=>getApproveCheckedInstructionDataDecoder,
    "getApproveCheckedInstructionDataEncoder": ()=>getApproveCheckedInstructionDataEncoder,
    "getApproveConfidentialTransferAccountConfidentialTransferDiscriminatorBytes": ()=>getApproveConfidentialTransferAccountConfidentialTransferDiscriminatorBytes,
    "getApproveConfidentialTransferAccountDiscriminatorBytes": ()=>getApproveConfidentialTransferAccountDiscriminatorBytes,
    "getApproveConfidentialTransferAccountInstruction": ()=>getApproveConfidentialTransferAccountInstruction,
    "getApproveConfidentialTransferAccountInstructionDataCodec": ()=>getApproveConfidentialTransferAccountInstructionDataCodec,
    "getApproveConfidentialTransferAccountInstructionDataDecoder": ()=>getApproveConfidentialTransferAccountInstructionDataDecoder,
    "getApproveConfidentialTransferAccountInstructionDataEncoder": ()=>getApproveConfidentialTransferAccountInstructionDataEncoder,
    "getApproveDiscriminatorBytes": ()=>getApproveDiscriminatorBytes,
    "getApproveInstruction": ()=>getApproveInstruction,
    "getApproveInstructionDataCodec": ()=>getApproveInstructionDataCodec,
    "getApproveInstructionDataDecoder": ()=>getApproveInstructionDataDecoder,
    "getApproveInstructionDataEncoder": ()=>getApproveInstructionDataEncoder,
    "getAssociatedTokenErrorMessage": ()=>getAssociatedTokenErrorMessage,
    "getAuthorityTypeCodec": ()=>getAuthorityTypeCodec,
    "getAuthorityTypeDecoder": ()=>getAuthorityTypeDecoder,
    "getAuthorityTypeEncoder": ()=>getAuthorityTypeEncoder,
    "getBurnCheckedDiscriminatorBytes": ()=>getBurnCheckedDiscriminatorBytes,
    "getBurnCheckedInstruction": ()=>getBurnCheckedInstruction,
    "getBurnCheckedInstructionDataCodec": ()=>getBurnCheckedInstructionDataCodec,
    "getBurnCheckedInstructionDataDecoder": ()=>getBurnCheckedInstructionDataDecoder,
    "getBurnCheckedInstructionDataEncoder": ()=>getBurnCheckedInstructionDataEncoder,
    "getBurnDiscriminatorBytes": ()=>getBurnDiscriminatorBytes,
    "getBurnInstruction": ()=>getBurnInstruction,
    "getBurnInstructionDataCodec": ()=>getBurnInstructionDataCodec,
    "getBurnInstructionDataDecoder": ()=>getBurnInstructionDataDecoder,
    "getBurnInstructionDataEncoder": ()=>getBurnInstructionDataEncoder,
    "getCloseAccountDiscriminatorBytes": ()=>getCloseAccountDiscriminatorBytes,
    "getCloseAccountInstruction": ()=>getCloseAccountInstruction,
    "getCloseAccountInstructionDataCodec": ()=>getCloseAccountInstructionDataCodec,
    "getCloseAccountInstructionDataDecoder": ()=>getCloseAccountInstructionDataDecoder,
    "getCloseAccountInstructionDataEncoder": ()=>getCloseAccountInstructionDataEncoder,
    "getConfidentialDepositConfidentialTransferDiscriminatorBytes": ()=>getConfidentialDepositConfidentialTransferDiscriminatorBytes,
    "getConfidentialDepositDiscriminatorBytes": ()=>getConfidentialDepositDiscriminatorBytes,
    "getConfidentialDepositInstruction": ()=>getConfidentialDepositInstruction,
    "getConfidentialDepositInstructionDataCodec": ()=>getConfidentialDepositInstructionDataCodec,
    "getConfidentialDepositInstructionDataDecoder": ()=>getConfidentialDepositInstructionDataDecoder,
    "getConfidentialDepositInstructionDataEncoder": ()=>getConfidentialDepositInstructionDataEncoder,
    "getConfidentialTransferConfidentialTransferDiscriminatorBytes": ()=>getConfidentialTransferConfidentialTransferDiscriminatorBytes,
    "getConfidentialTransferDiscriminatorBytes": ()=>getConfidentialTransferDiscriminatorBytes,
    "getConfidentialTransferInstruction": ()=>getConfidentialTransferInstruction,
    "getConfidentialTransferInstructionDataCodec": ()=>getConfidentialTransferInstructionDataCodec,
    "getConfidentialTransferInstructionDataDecoder": ()=>getConfidentialTransferInstructionDataDecoder,
    "getConfidentialTransferInstructionDataEncoder": ()=>getConfidentialTransferInstructionDataEncoder,
    "getConfidentialTransferWithFeeConfidentialTransferDiscriminatorBytes": ()=>getConfidentialTransferWithFeeConfidentialTransferDiscriminatorBytes,
    "getConfidentialTransferWithFeeDiscriminatorBytes": ()=>getConfidentialTransferWithFeeDiscriminatorBytes,
    "getConfidentialTransferWithFeeInstruction": ()=>getConfidentialTransferWithFeeInstruction,
    "getConfidentialTransferWithFeeInstructionDataCodec": ()=>getConfidentialTransferWithFeeInstructionDataCodec,
    "getConfidentialTransferWithFeeInstructionDataDecoder": ()=>getConfidentialTransferWithFeeInstructionDataDecoder,
    "getConfidentialTransferWithFeeInstructionDataEncoder": ()=>getConfidentialTransferWithFeeInstructionDataEncoder,
    "getConfidentialWithdrawConfidentialTransferDiscriminatorBytes": ()=>getConfidentialWithdrawConfidentialTransferDiscriminatorBytes,
    "getConfidentialWithdrawDiscriminatorBytes": ()=>getConfidentialWithdrawDiscriminatorBytes,
    "getConfidentialWithdrawInstruction": ()=>getConfidentialWithdrawInstruction,
    "getConfidentialWithdrawInstructionDataCodec": ()=>getConfidentialWithdrawInstructionDataCodec,
    "getConfidentialWithdrawInstructionDataDecoder": ()=>getConfidentialWithdrawInstructionDataDecoder,
    "getConfidentialWithdrawInstructionDataEncoder": ()=>getConfidentialWithdrawInstructionDataEncoder,
    "getConfigureConfidentialTransferAccountConfidentialTransferDiscriminatorBytes": ()=>getConfigureConfidentialTransferAccountConfidentialTransferDiscriminatorBytes,
    "getConfigureConfidentialTransferAccountDiscriminatorBytes": ()=>getConfigureConfidentialTransferAccountDiscriminatorBytes,
    "getConfigureConfidentialTransferAccountInstruction": ()=>getConfigureConfidentialTransferAccountInstruction,
    "getConfigureConfidentialTransferAccountInstructionDataCodec": ()=>getConfigureConfidentialTransferAccountInstructionDataCodec,
    "getConfigureConfidentialTransferAccountInstructionDataDecoder": ()=>getConfigureConfidentialTransferAccountInstructionDataDecoder,
    "getConfigureConfidentialTransferAccountInstructionDataEncoder": ()=>getConfigureConfidentialTransferAccountInstructionDataEncoder,
    "getCreateAssociatedTokenDiscriminatorBytes": ()=>getCreateAssociatedTokenDiscriminatorBytes,
    "getCreateAssociatedTokenIdempotentDiscriminatorBytes": ()=>getCreateAssociatedTokenIdempotentDiscriminatorBytes,
    "getCreateAssociatedTokenIdempotentInstruction": ()=>getCreateAssociatedTokenIdempotentInstruction,
    "getCreateAssociatedTokenIdempotentInstructionAsync": ()=>getCreateAssociatedTokenIdempotentInstructionAsync,
    "getCreateAssociatedTokenIdempotentInstructionDataCodec": ()=>getCreateAssociatedTokenIdempotentInstructionDataCodec,
    "getCreateAssociatedTokenIdempotentInstructionDataDecoder": ()=>getCreateAssociatedTokenIdempotentInstructionDataDecoder,
    "getCreateAssociatedTokenIdempotentInstructionDataEncoder": ()=>getCreateAssociatedTokenIdempotentInstructionDataEncoder,
    "getCreateAssociatedTokenInstruction": ()=>getCreateAssociatedTokenInstruction,
    "getCreateAssociatedTokenInstructionAsync": ()=>getCreateAssociatedTokenInstructionAsync,
    "getCreateAssociatedTokenInstructionDataCodec": ()=>getCreateAssociatedTokenInstructionDataCodec,
    "getCreateAssociatedTokenInstructionDataDecoder": ()=>getCreateAssociatedTokenInstructionDataDecoder,
    "getCreateAssociatedTokenInstructionDataEncoder": ()=>getCreateAssociatedTokenInstructionDataEncoder,
    "getCreateNativeMintDiscriminatorBytes": ()=>getCreateNativeMintDiscriminatorBytes,
    "getCreateNativeMintInstruction": ()=>getCreateNativeMintInstruction,
    "getCreateNativeMintInstructionDataCodec": ()=>getCreateNativeMintInstructionDataCodec,
    "getCreateNativeMintInstructionDataDecoder": ()=>getCreateNativeMintInstructionDataDecoder,
    "getCreateNativeMintInstructionDataEncoder": ()=>getCreateNativeMintInstructionDataEncoder,
    "getDecryptableBalanceCodec": ()=>getDecryptableBalanceCodec,
    "getDecryptableBalanceDecoder": ()=>getDecryptableBalanceDecoder,
    "getDecryptableBalanceEncoder": ()=>getDecryptableBalanceEncoder,
    "getDisableConfidentialCreditsConfidentialTransferDiscriminatorBytes": ()=>getDisableConfidentialCreditsConfidentialTransferDiscriminatorBytes,
    "getDisableConfidentialCreditsDiscriminatorBytes": ()=>getDisableConfidentialCreditsDiscriminatorBytes,
    "getDisableConfidentialCreditsInstruction": ()=>getDisableConfidentialCreditsInstruction,
    "getDisableConfidentialCreditsInstructionDataCodec": ()=>getDisableConfidentialCreditsInstructionDataCodec,
    "getDisableConfidentialCreditsInstructionDataDecoder": ()=>getDisableConfidentialCreditsInstructionDataDecoder,
    "getDisableConfidentialCreditsInstructionDataEncoder": ()=>getDisableConfidentialCreditsInstructionDataEncoder,
    "getDisableCpiGuardCpiGuardDiscriminatorBytes": ()=>getDisableCpiGuardCpiGuardDiscriminatorBytes,
    "getDisableCpiGuardDiscriminatorBytes": ()=>getDisableCpiGuardDiscriminatorBytes,
    "getDisableCpiGuardInstruction": ()=>getDisableCpiGuardInstruction,
    "getDisableCpiGuardInstructionDataCodec": ()=>getDisableCpiGuardInstructionDataCodec,
    "getDisableCpiGuardInstructionDataDecoder": ()=>getDisableCpiGuardInstructionDataDecoder,
    "getDisableCpiGuardInstructionDataEncoder": ()=>getDisableCpiGuardInstructionDataEncoder,
    "getDisableHarvestToMintConfidentialTransferFeeDiscriminatorBytes": ()=>getDisableHarvestToMintConfidentialTransferFeeDiscriminatorBytes,
    "getDisableHarvestToMintDiscriminatorBytes": ()=>getDisableHarvestToMintDiscriminatorBytes,
    "getDisableHarvestToMintInstruction": ()=>getDisableHarvestToMintInstruction,
    "getDisableHarvestToMintInstructionDataCodec": ()=>getDisableHarvestToMintInstructionDataCodec,
    "getDisableHarvestToMintInstructionDataDecoder": ()=>getDisableHarvestToMintInstructionDataDecoder,
    "getDisableHarvestToMintInstructionDataEncoder": ()=>getDisableHarvestToMintInstructionDataEncoder,
    "getDisableMemoTransfersDiscriminatorBytes": ()=>getDisableMemoTransfersDiscriminatorBytes,
    "getDisableMemoTransfersInstruction": ()=>getDisableMemoTransfersInstruction,
    "getDisableMemoTransfersInstructionDataCodec": ()=>getDisableMemoTransfersInstructionDataCodec,
    "getDisableMemoTransfersInstructionDataDecoder": ()=>getDisableMemoTransfersInstructionDataDecoder,
    "getDisableMemoTransfersInstructionDataEncoder": ()=>getDisableMemoTransfersInstructionDataEncoder,
    "getDisableMemoTransfersMemoTransfersDiscriminatorBytes": ()=>getDisableMemoTransfersMemoTransfersDiscriminatorBytes,
    "getDisableNonConfidentialCreditsConfidentialTransferDiscriminatorBytes": ()=>getDisableNonConfidentialCreditsConfidentialTransferDiscriminatorBytes,
    "getDisableNonConfidentialCreditsDiscriminatorBytes": ()=>getDisableNonConfidentialCreditsDiscriminatorBytes,
    "getDisableNonConfidentialCreditsInstruction": ()=>getDisableNonConfidentialCreditsInstruction,
    "getDisableNonConfidentialCreditsInstructionDataCodec": ()=>getDisableNonConfidentialCreditsInstructionDataCodec,
    "getDisableNonConfidentialCreditsInstructionDataDecoder": ()=>getDisableNonConfidentialCreditsInstructionDataDecoder,
    "getDisableNonConfidentialCreditsInstructionDataEncoder": ()=>getDisableNonConfidentialCreditsInstructionDataEncoder,
    "getEmitTokenMetadataDiscriminatorBytes": ()=>getEmitTokenMetadataDiscriminatorBytes,
    "getEmitTokenMetadataInstruction": ()=>getEmitTokenMetadataInstruction,
    "getEmitTokenMetadataInstructionDataCodec": ()=>getEmitTokenMetadataInstructionDataCodec,
    "getEmitTokenMetadataInstructionDataDecoder": ()=>getEmitTokenMetadataInstructionDataDecoder,
    "getEmitTokenMetadataInstructionDataEncoder": ()=>getEmitTokenMetadataInstructionDataEncoder,
    "getEmptyConfidentialTransferAccountConfidentialTransferDiscriminatorBytes": ()=>getEmptyConfidentialTransferAccountConfidentialTransferDiscriminatorBytes,
    "getEmptyConfidentialTransferAccountDiscriminatorBytes": ()=>getEmptyConfidentialTransferAccountDiscriminatorBytes,
    "getEmptyConfidentialTransferAccountInstruction": ()=>getEmptyConfidentialTransferAccountInstruction,
    "getEmptyConfidentialTransferAccountInstructionDataCodec": ()=>getEmptyConfidentialTransferAccountInstructionDataCodec,
    "getEmptyConfidentialTransferAccountInstructionDataDecoder": ()=>getEmptyConfidentialTransferAccountInstructionDataDecoder,
    "getEmptyConfidentialTransferAccountInstructionDataEncoder": ()=>getEmptyConfidentialTransferAccountInstructionDataEncoder,
    "getEnableConfidentialCreditsConfidentialTransferDiscriminatorBytes": ()=>getEnableConfidentialCreditsConfidentialTransferDiscriminatorBytes,
    "getEnableConfidentialCreditsDiscriminatorBytes": ()=>getEnableConfidentialCreditsDiscriminatorBytes,
    "getEnableConfidentialCreditsInstruction": ()=>getEnableConfidentialCreditsInstruction,
    "getEnableConfidentialCreditsInstructionDataCodec": ()=>getEnableConfidentialCreditsInstructionDataCodec,
    "getEnableConfidentialCreditsInstructionDataDecoder": ()=>getEnableConfidentialCreditsInstructionDataDecoder,
    "getEnableConfidentialCreditsInstructionDataEncoder": ()=>getEnableConfidentialCreditsInstructionDataEncoder,
    "getEnableCpiGuardCpiGuardDiscriminatorBytes": ()=>getEnableCpiGuardCpiGuardDiscriminatorBytes,
    "getEnableCpiGuardDiscriminatorBytes": ()=>getEnableCpiGuardDiscriminatorBytes,
    "getEnableCpiGuardInstruction": ()=>getEnableCpiGuardInstruction,
    "getEnableCpiGuardInstructionDataCodec": ()=>getEnableCpiGuardInstructionDataCodec,
    "getEnableCpiGuardInstructionDataDecoder": ()=>getEnableCpiGuardInstructionDataDecoder,
    "getEnableCpiGuardInstructionDataEncoder": ()=>getEnableCpiGuardInstructionDataEncoder,
    "getEnableHarvestToMintConfidentialTransferFeeDiscriminatorBytes": ()=>getEnableHarvestToMintConfidentialTransferFeeDiscriminatorBytes,
    "getEnableHarvestToMintDiscriminatorBytes": ()=>getEnableHarvestToMintDiscriminatorBytes,
    "getEnableHarvestToMintInstruction": ()=>getEnableHarvestToMintInstruction,
    "getEnableHarvestToMintInstructionDataCodec": ()=>getEnableHarvestToMintInstructionDataCodec,
    "getEnableHarvestToMintInstructionDataDecoder": ()=>getEnableHarvestToMintInstructionDataDecoder,
    "getEnableHarvestToMintInstructionDataEncoder": ()=>getEnableHarvestToMintInstructionDataEncoder,
    "getEnableMemoTransfersDiscriminatorBytes": ()=>getEnableMemoTransfersDiscriminatorBytes,
    "getEnableMemoTransfersInstruction": ()=>getEnableMemoTransfersInstruction,
    "getEnableMemoTransfersInstructionDataCodec": ()=>getEnableMemoTransfersInstructionDataCodec,
    "getEnableMemoTransfersInstructionDataDecoder": ()=>getEnableMemoTransfersInstructionDataDecoder,
    "getEnableMemoTransfersInstructionDataEncoder": ()=>getEnableMemoTransfersInstructionDataEncoder,
    "getEnableMemoTransfersMemoTransfersDiscriminatorBytes": ()=>getEnableMemoTransfersMemoTransfersDiscriminatorBytes,
    "getEnableNonConfidentialCreditsConfidentialTransferDiscriminatorBytes": ()=>getEnableNonConfidentialCreditsConfidentialTransferDiscriminatorBytes,
    "getEnableNonConfidentialCreditsDiscriminatorBytes": ()=>getEnableNonConfidentialCreditsDiscriminatorBytes,
    "getEnableNonConfidentialCreditsInstruction": ()=>getEnableNonConfidentialCreditsInstruction,
    "getEnableNonConfidentialCreditsInstructionDataCodec": ()=>getEnableNonConfidentialCreditsInstructionDataCodec,
    "getEnableNonConfidentialCreditsInstructionDataDecoder": ()=>getEnableNonConfidentialCreditsInstructionDataDecoder,
    "getEnableNonConfidentialCreditsInstructionDataEncoder": ()=>getEnableNonConfidentialCreditsInstructionDataEncoder,
    "getEncryptedBalanceCodec": ()=>getEncryptedBalanceCodec,
    "getEncryptedBalanceDecoder": ()=>getEncryptedBalanceDecoder,
    "getEncryptedBalanceEncoder": ()=>getEncryptedBalanceEncoder,
    "getExtensionCodec": ()=>getExtensionCodec,
    "getExtensionDecoder": ()=>getExtensionDecoder,
    "getExtensionEncoder": ()=>getExtensionEncoder,
    "getExtensionTypeCodec": ()=>getExtensionTypeCodec,
    "getExtensionTypeDecoder": ()=>getExtensionTypeDecoder,
    "getExtensionTypeEncoder": ()=>getExtensionTypeEncoder,
    "getFreezeAccountDiscriminatorBytes": ()=>getFreezeAccountDiscriminatorBytes,
    "getFreezeAccountInstruction": ()=>getFreezeAccountInstruction,
    "getFreezeAccountInstructionDataCodec": ()=>getFreezeAccountInstructionDataCodec,
    "getFreezeAccountInstructionDataDecoder": ()=>getFreezeAccountInstructionDataDecoder,
    "getFreezeAccountInstructionDataEncoder": ()=>getFreezeAccountInstructionDataEncoder,
    "getGetAccountDataSizeDiscriminatorBytes": ()=>getGetAccountDataSizeDiscriminatorBytes,
    "getGetAccountDataSizeInstruction": ()=>getGetAccountDataSizeInstruction,
    "getGetAccountDataSizeInstructionDataCodec": ()=>getGetAccountDataSizeInstructionDataCodec,
    "getGetAccountDataSizeInstructionDataDecoder": ()=>getGetAccountDataSizeInstructionDataDecoder,
    "getGetAccountDataSizeInstructionDataEncoder": ()=>getGetAccountDataSizeInstructionDataEncoder,
    "getHarvestWithheldTokensToMintDiscriminatorBytes": ()=>getHarvestWithheldTokensToMintDiscriminatorBytes,
    "getHarvestWithheldTokensToMintForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes": ()=>getHarvestWithheldTokensToMintForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes,
    "getHarvestWithheldTokensToMintForConfidentialTransferFeeDiscriminatorBytes": ()=>getHarvestWithheldTokensToMintForConfidentialTransferFeeDiscriminatorBytes,
    "getHarvestWithheldTokensToMintForConfidentialTransferFeeInstruction": ()=>getHarvestWithheldTokensToMintForConfidentialTransferFeeInstruction,
    "getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataCodec": ()=>getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataCodec,
    "getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataDecoder": ()=>getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataDecoder,
    "getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataEncoder": ()=>getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataEncoder,
    "getHarvestWithheldTokensToMintInstruction": ()=>getHarvestWithheldTokensToMintInstruction,
    "getHarvestWithheldTokensToMintInstructionDataCodec": ()=>getHarvestWithheldTokensToMintInstructionDataCodec,
    "getHarvestWithheldTokensToMintInstructionDataDecoder": ()=>getHarvestWithheldTokensToMintInstructionDataDecoder,
    "getHarvestWithheldTokensToMintInstructionDataEncoder": ()=>getHarvestWithheldTokensToMintInstructionDataEncoder,
    "getHarvestWithheldTokensToMintTransferFeeDiscriminatorBytes": ()=>getHarvestWithheldTokensToMintTransferFeeDiscriminatorBytes,
    "getInitializeAccount2DiscriminatorBytes": ()=>getInitializeAccount2DiscriminatorBytes,
    "getInitializeAccount2Instruction": ()=>getInitializeAccount2Instruction,
    "getInitializeAccount2InstructionDataCodec": ()=>getInitializeAccount2InstructionDataCodec,
    "getInitializeAccount2InstructionDataDecoder": ()=>getInitializeAccount2InstructionDataDecoder,
    "getInitializeAccount2InstructionDataEncoder": ()=>getInitializeAccount2InstructionDataEncoder,
    "getInitializeAccount3DiscriminatorBytes": ()=>getInitializeAccount3DiscriminatorBytes,
    "getInitializeAccount3Instruction": ()=>getInitializeAccount3Instruction,
    "getInitializeAccount3InstructionDataCodec": ()=>getInitializeAccount3InstructionDataCodec,
    "getInitializeAccount3InstructionDataDecoder": ()=>getInitializeAccount3InstructionDataDecoder,
    "getInitializeAccount3InstructionDataEncoder": ()=>getInitializeAccount3InstructionDataEncoder,
    "getInitializeAccountDiscriminatorBytes": ()=>getInitializeAccountDiscriminatorBytes,
    "getInitializeAccountInstruction": ()=>getInitializeAccountInstruction,
    "getInitializeAccountInstructionDataCodec": ()=>getInitializeAccountInstructionDataCodec,
    "getInitializeAccountInstructionDataDecoder": ()=>getInitializeAccountInstructionDataDecoder,
    "getInitializeAccountInstructionDataEncoder": ()=>getInitializeAccountInstructionDataEncoder,
    "getInitializeConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes": ()=>getInitializeConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes,
    "getInitializeConfidentialTransferFeeDiscriminatorBytes": ()=>getInitializeConfidentialTransferFeeDiscriminatorBytes,
    "getInitializeConfidentialTransferFeeInstruction": ()=>getInitializeConfidentialTransferFeeInstruction,
    "getInitializeConfidentialTransferFeeInstructionDataCodec": ()=>getInitializeConfidentialTransferFeeInstructionDataCodec,
    "getInitializeConfidentialTransferFeeInstructionDataDecoder": ()=>getInitializeConfidentialTransferFeeInstructionDataDecoder,
    "getInitializeConfidentialTransferFeeInstructionDataEncoder": ()=>getInitializeConfidentialTransferFeeInstructionDataEncoder,
    "getInitializeConfidentialTransferMintConfidentialTransferDiscriminatorBytes": ()=>getInitializeConfidentialTransferMintConfidentialTransferDiscriminatorBytes,
    "getInitializeConfidentialTransferMintDiscriminatorBytes": ()=>getInitializeConfidentialTransferMintDiscriminatorBytes,
    "getInitializeConfidentialTransferMintInstruction": ()=>getInitializeConfidentialTransferMintInstruction,
    "getInitializeConfidentialTransferMintInstructionDataCodec": ()=>getInitializeConfidentialTransferMintInstructionDataCodec,
    "getInitializeConfidentialTransferMintInstructionDataDecoder": ()=>getInitializeConfidentialTransferMintInstructionDataDecoder,
    "getInitializeConfidentialTransferMintInstructionDataEncoder": ()=>getInitializeConfidentialTransferMintInstructionDataEncoder,
    "getInitializeDefaultAccountStateDefaultAccountStateDiscriminatorBytes": ()=>getInitializeDefaultAccountStateDefaultAccountStateDiscriminatorBytes,
    "getInitializeDefaultAccountStateDiscriminatorBytes": ()=>getInitializeDefaultAccountStateDiscriminatorBytes,
    "getInitializeDefaultAccountStateInstruction": ()=>getInitializeDefaultAccountStateInstruction,
    "getInitializeDefaultAccountStateInstructionDataCodec": ()=>getInitializeDefaultAccountStateInstructionDataCodec,
    "getInitializeDefaultAccountStateInstructionDataDecoder": ()=>getInitializeDefaultAccountStateInstructionDataDecoder,
    "getInitializeDefaultAccountStateInstructionDataEncoder": ()=>getInitializeDefaultAccountStateInstructionDataEncoder,
    "getInitializeGroupMemberPointerDiscriminatorBytes": ()=>getInitializeGroupMemberPointerDiscriminatorBytes,
    "getInitializeGroupMemberPointerGroupMemberPointerDiscriminatorBytes": ()=>getInitializeGroupMemberPointerGroupMemberPointerDiscriminatorBytes,
    "getInitializeGroupMemberPointerInstruction": ()=>getInitializeGroupMemberPointerInstruction,
    "getInitializeGroupMemberPointerInstructionDataCodec": ()=>getInitializeGroupMemberPointerInstructionDataCodec,
    "getInitializeGroupMemberPointerInstructionDataDecoder": ()=>getInitializeGroupMemberPointerInstructionDataDecoder,
    "getInitializeGroupMemberPointerInstructionDataEncoder": ()=>getInitializeGroupMemberPointerInstructionDataEncoder,
    "getInitializeGroupPointerDiscriminatorBytes": ()=>getInitializeGroupPointerDiscriminatorBytes,
    "getInitializeGroupPointerGroupPointerDiscriminatorBytes": ()=>getInitializeGroupPointerGroupPointerDiscriminatorBytes,
    "getInitializeGroupPointerInstruction": ()=>getInitializeGroupPointerInstruction,
    "getInitializeGroupPointerInstructionDataCodec": ()=>getInitializeGroupPointerInstructionDataCodec,
    "getInitializeGroupPointerInstructionDataDecoder": ()=>getInitializeGroupPointerInstructionDataDecoder,
    "getInitializeGroupPointerInstructionDataEncoder": ()=>getInitializeGroupPointerInstructionDataEncoder,
    "getInitializeImmutableOwnerDiscriminatorBytes": ()=>getInitializeImmutableOwnerDiscriminatorBytes,
    "getInitializeImmutableOwnerInstruction": ()=>getInitializeImmutableOwnerInstruction,
    "getInitializeImmutableOwnerInstructionDataCodec": ()=>getInitializeImmutableOwnerInstructionDataCodec,
    "getInitializeImmutableOwnerInstructionDataDecoder": ()=>getInitializeImmutableOwnerInstructionDataDecoder,
    "getInitializeImmutableOwnerInstructionDataEncoder": ()=>getInitializeImmutableOwnerInstructionDataEncoder,
    "getInitializeInterestBearingMintDiscriminatorBytes": ()=>getInitializeInterestBearingMintDiscriminatorBytes,
    "getInitializeInterestBearingMintInstruction": ()=>getInitializeInterestBearingMintInstruction,
    "getInitializeInterestBearingMintInstructionDataCodec": ()=>getInitializeInterestBearingMintInstructionDataCodec,
    "getInitializeInterestBearingMintInstructionDataDecoder": ()=>getInitializeInterestBearingMintInstructionDataDecoder,
    "getInitializeInterestBearingMintInstructionDataEncoder": ()=>getInitializeInterestBearingMintInstructionDataEncoder,
    "getInitializeInterestBearingMintInterestBearingMintDiscriminatorBytes": ()=>getInitializeInterestBearingMintInterestBearingMintDiscriminatorBytes,
    "getInitializeMetadataPointerDiscriminatorBytes": ()=>getInitializeMetadataPointerDiscriminatorBytes,
    "getInitializeMetadataPointerInstruction": ()=>getInitializeMetadataPointerInstruction,
    "getInitializeMetadataPointerInstructionDataCodec": ()=>getInitializeMetadataPointerInstructionDataCodec,
    "getInitializeMetadataPointerInstructionDataDecoder": ()=>getInitializeMetadataPointerInstructionDataDecoder,
    "getInitializeMetadataPointerInstructionDataEncoder": ()=>getInitializeMetadataPointerInstructionDataEncoder,
    "getInitializeMetadataPointerMetadataPointerDiscriminatorBytes": ()=>getInitializeMetadataPointerMetadataPointerDiscriminatorBytes,
    "getInitializeMint2DiscriminatorBytes": ()=>getInitializeMint2DiscriminatorBytes,
    "getInitializeMint2Instruction": ()=>getInitializeMint2Instruction,
    "getInitializeMint2InstructionDataCodec": ()=>getInitializeMint2InstructionDataCodec,
    "getInitializeMint2InstructionDataDecoder": ()=>getInitializeMint2InstructionDataDecoder,
    "getInitializeMint2InstructionDataEncoder": ()=>getInitializeMint2InstructionDataEncoder,
    "getInitializeMintCloseAuthorityDiscriminatorBytes": ()=>getInitializeMintCloseAuthorityDiscriminatorBytes,
    "getInitializeMintCloseAuthorityInstruction": ()=>getInitializeMintCloseAuthorityInstruction,
    "getInitializeMintCloseAuthorityInstructionDataCodec": ()=>getInitializeMintCloseAuthorityInstructionDataCodec,
    "getInitializeMintCloseAuthorityInstructionDataDecoder": ()=>getInitializeMintCloseAuthorityInstructionDataDecoder,
    "getInitializeMintCloseAuthorityInstructionDataEncoder": ()=>getInitializeMintCloseAuthorityInstructionDataEncoder,
    "getInitializeMintDiscriminatorBytes": ()=>getInitializeMintDiscriminatorBytes,
    "getInitializeMintInstruction": ()=>getInitializeMintInstruction,
    "getInitializeMintInstructionDataCodec": ()=>getInitializeMintInstructionDataCodec,
    "getInitializeMintInstructionDataDecoder": ()=>getInitializeMintInstructionDataDecoder,
    "getInitializeMintInstructionDataEncoder": ()=>getInitializeMintInstructionDataEncoder,
    "getInitializeMultisig2DiscriminatorBytes": ()=>getInitializeMultisig2DiscriminatorBytes,
    "getInitializeMultisig2Instruction": ()=>getInitializeMultisig2Instruction,
    "getInitializeMultisig2InstructionDataCodec": ()=>getInitializeMultisig2InstructionDataCodec,
    "getInitializeMultisig2InstructionDataDecoder": ()=>getInitializeMultisig2InstructionDataDecoder,
    "getInitializeMultisig2InstructionDataEncoder": ()=>getInitializeMultisig2InstructionDataEncoder,
    "getInitializeMultisigDiscriminatorBytes": ()=>getInitializeMultisigDiscriminatorBytes,
    "getInitializeMultisigInstruction": ()=>getInitializeMultisigInstruction,
    "getInitializeMultisigInstructionDataCodec": ()=>getInitializeMultisigInstructionDataCodec,
    "getInitializeMultisigInstructionDataDecoder": ()=>getInitializeMultisigInstructionDataDecoder,
    "getInitializeMultisigInstructionDataEncoder": ()=>getInitializeMultisigInstructionDataEncoder,
    "getInitializeNonTransferableMintDiscriminatorBytes": ()=>getInitializeNonTransferableMintDiscriminatorBytes,
    "getInitializeNonTransferableMintInstruction": ()=>getInitializeNonTransferableMintInstruction,
    "getInitializeNonTransferableMintInstructionDataCodec": ()=>getInitializeNonTransferableMintInstructionDataCodec,
    "getInitializeNonTransferableMintInstructionDataDecoder": ()=>getInitializeNonTransferableMintInstructionDataDecoder,
    "getInitializeNonTransferableMintInstructionDataEncoder": ()=>getInitializeNonTransferableMintInstructionDataEncoder,
    "getInitializePausableConfigDiscriminatorBytes": ()=>getInitializePausableConfigDiscriminatorBytes,
    "getInitializePausableConfigInstruction": ()=>getInitializePausableConfigInstruction,
    "getInitializePausableConfigInstructionDataCodec": ()=>getInitializePausableConfigInstructionDataCodec,
    "getInitializePausableConfigInstructionDataDecoder": ()=>getInitializePausableConfigInstructionDataDecoder,
    "getInitializePausableConfigInstructionDataEncoder": ()=>getInitializePausableConfigInstructionDataEncoder,
    "getInitializePausableConfigPausableDiscriminatorBytes": ()=>getInitializePausableConfigPausableDiscriminatorBytes,
    "getInitializePermanentDelegateDiscriminatorBytes": ()=>getInitializePermanentDelegateDiscriminatorBytes,
    "getInitializePermanentDelegateInstruction": ()=>getInitializePermanentDelegateInstruction,
    "getInitializePermanentDelegateInstructionDataCodec": ()=>getInitializePermanentDelegateInstructionDataCodec,
    "getInitializePermanentDelegateInstructionDataDecoder": ()=>getInitializePermanentDelegateInstructionDataDecoder,
    "getInitializePermanentDelegateInstructionDataEncoder": ()=>getInitializePermanentDelegateInstructionDataEncoder,
    "getInitializeScaledUiAmountMintDiscriminatorBytes": ()=>getInitializeScaledUiAmountMintDiscriminatorBytes,
    "getInitializeScaledUiAmountMintInstruction": ()=>getInitializeScaledUiAmountMintInstruction,
    "getInitializeScaledUiAmountMintInstructionDataCodec": ()=>getInitializeScaledUiAmountMintInstructionDataCodec,
    "getInitializeScaledUiAmountMintInstructionDataDecoder": ()=>getInitializeScaledUiAmountMintInstructionDataDecoder,
    "getInitializeScaledUiAmountMintInstructionDataEncoder": ()=>getInitializeScaledUiAmountMintInstructionDataEncoder,
    "getInitializeScaledUiAmountMintScaledUiAmountMintDiscriminatorBytes": ()=>getInitializeScaledUiAmountMintScaledUiAmountMintDiscriminatorBytes,
    "getInitializeTokenGroupDiscriminatorBytes": ()=>getInitializeTokenGroupDiscriminatorBytes,
    "getInitializeTokenGroupInstruction": ()=>getInitializeTokenGroupInstruction,
    "getInitializeTokenGroupInstructionDataCodec": ()=>getInitializeTokenGroupInstructionDataCodec,
    "getInitializeTokenGroupInstructionDataDecoder": ()=>getInitializeTokenGroupInstructionDataDecoder,
    "getInitializeTokenGroupInstructionDataEncoder": ()=>getInitializeTokenGroupInstructionDataEncoder,
    "getInitializeTokenGroupMemberDiscriminatorBytes": ()=>getInitializeTokenGroupMemberDiscriminatorBytes,
    "getInitializeTokenGroupMemberInstruction": ()=>getInitializeTokenGroupMemberInstruction,
    "getInitializeTokenGroupMemberInstructionDataCodec": ()=>getInitializeTokenGroupMemberInstructionDataCodec,
    "getInitializeTokenGroupMemberInstructionDataDecoder": ()=>getInitializeTokenGroupMemberInstructionDataDecoder,
    "getInitializeTokenGroupMemberInstructionDataEncoder": ()=>getInitializeTokenGroupMemberInstructionDataEncoder,
    "getInitializeTokenMetadataDiscriminatorBytes": ()=>getInitializeTokenMetadataDiscriminatorBytes,
    "getInitializeTokenMetadataInstruction": ()=>getInitializeTokenMetadataInstruction,
    "getInitializeTokenMetadataInstructionDataCodec": ()=>getInitializeTokenMetadataInstructionDataCodec,
    "getInitializeTokenMetadataInstructionDataDecoder": ()=>getInitializeTokenMetadataInstructionDataDecoder,
    "getInitializeTokenMetadataInstructionDataEncoder": ()=>getInitializeTokenMetadataInstructionDataEncoder,
    "getInitializeTransferFeeConfigDiscriminatorBytes": ()=>getInitializeTransferFeeConfigDiscriminatorBytes,
    "getInitializeTransferFeeConfigInstruction": ()=>getInitializeTransferFeeConfigInstruction,
    "getInitializeTransferFeeConfigInstructionDataCodec": ()=>getInitializeTransferFeeConfigInstructionDataCodec,
    "getInitializeTransferFeeConfigInstructionDataDecoder": ()=>getInitializeTransferFeeConfigInstructionDataDecoder,
    "getInitializeTransferFeeConfigInstructionDataEncoder": ()=>getInitializeTransferFeeConfigInstructionDataEncoder,
    "getInitializeTransferFeeConfigTransferFeeDiscriminatorBytes": ()=>getInitializeTransferFeeConfigTransferFeeDiscriminatorBytes,
    "getInitializeTransferHookDiscriminatorBytes": ()=>getInitializeTransferHookDiscriminatorBytes,
    "getInitializeTransferHookInstruction": ()=>getInitializeTransferHookInstruction,
    "getInitializeTransferHookInstructionDataCodec": ()=>getInitializeTransferHookInstructionDataCodec,
    "getInitializeTransferHookInstructionDataDecoder": ()=>getInitializeTransferHookInstructionDataDecoder,
    "getInitializeTransferHookInstructionDataEncoder": ()=>getInitializeTransferHookInstructionDataEncoder,
    "getInitializeTransferHookTransferHookDiscriminatorBytes": ()=>getInitializeTransferHookTransferHookDiscriminatorBytes,
    "getMintCodec": ()=>getMintCodec,
    "getMintDecoder": ()=>getMintDecoder,
    "getMintEncoder": ()=>getMintEncoder,
    "getMintSize": ()=>getMintSize,
    "getMintToCheckedDiscriminatorBytes": ()=>getMintToCheckedDiscriminatorBytes,
    "getMintToCheckedInstruction": ()=>getMintToCheckedInstruction,
    "getMintToCheckedInstructionDataCodec": ()=>getMintToCheckedInstructionDataCodec,
    "getMintToCheckedInstructionDataDecoder": ()=>getMintToCheckedInstructionDataDecoder,
    "getMintToCheckedInstructionDataEncoder": ()=>getMintToCheckedInstructionDataEncoder,
    "getMintToDiscriminatorBytes": ()=>getMintToDiscriminatorBytes,
    "getMintToInstruction": ()=>getMintToInstruction,
    "getMintToInstructionDataCodec": ()=>getMintToInstructionDataCodec,
    "getMintToInstructionDataDecoder": ()=>getMintToInstructionDataDecoder,
    "getMintToInstructionDataEncoder": ()=>getMintToInstructionDataEncoder,
    "getMultisigCodec": ()=>getMultisigCodec,
    "getMultisigDecoder": ()=>getMultisigDecoder,
    "getMultisigEncoder": ()=>getMultisigEncoder,
    "getMultisigSize": ()=>getMultisigSize,
    "getPauseDiscriminatorBytes": ()=>getPauseDiscriminatorBytes,
    "getPauseInstruction": ()=>getPauseInstruction,
    "getPauseInstructionDataCodec": ()=>getPauseInstructionDataCodec,
    "getPauseInstructionDataDecoder": ()=>getPauseInstructionDataDecoder,
    "getPauseInstructionDataEncoder": ()=>getPauseInstructionDataEncoder,
    "getPausePausableDiscriminatorBytes": ()=>getPausePausableDiscriminatorBytes,
    "getPostInitializeInstructionsForMintExtensions": ()=>getPostInitializeInstructionsForMintExtensions,
    "getPostInitializeInstructionsForTokenExtensions": ()=>getPostInitializeInstructionsForTokenExtensions,
    "getPreInitializeInstructionsForMintExtensions": ()=>getPreInitializeInstructionsForMintExtensions,
    "getReallocateDiscriminatorBytes": ()=>getReallocateDiscriminatorBytes,
    "getReallocateInstruction": ()=>getReallocateInstruction,
    "getReallocateInstructionDataCodec": ()=>getReallocateInstructionDataCodec,
    "getReallocateInstructionDataDecoder": ()=>getReallocateInstructionDataDecoder,
    "getReallocateInstructionDataEncoder": ()=>getReallocateInstructionDataEncoder,
    "getRecoverNestedAssociatedTokenDiscriminatorBytes": ()=>getRecoverNestedAssociatedTokenDiscriminatorBytes,
    "getRecoverNestedAssociatedTokenInstruction": ()=>getRecoverNestedAssociatedTokenInstruction,
    "getRecoverNestedAssociatedTokenInstructionAsync": ()=>getRecoverNestedAssociatedTokenInstructionAsync,
    "getRecoverNestedAssociatedTokenInstructionDataCodec": ()=>getRecoverNestedAssociatedTokenInstructionDataCodec,
    "getRecoverNestedAssociatedTokenInstructionDataDecoder": ()=>getRecoverNestedAssociatedTokenInstructionDataDecoder,
    "getRecoverNestedAssociatedTokenInstructionDataEncoder": ()=>getRecoverNestedAssociatedTokenInstructionDataEncoder,
    "getRemoveTokenMetadataKeyDiscriminatorBytes": ()=>getRemoveTokenMetadataKeyDiscriminatorBytes,
    "getRemoveTokenMetadataKeyInstruction": ()=>getRemoveTokenMetadataKeyInstruction,
    "getRemoveTokenMetadataKeyInstructionDataCodec": ()=>getRemoveTokenMetadataKeyInstructionDataCodec,
    "getRemoveTokenMetadataKeyInstructionDataDecoder": ()=>getRemoveTokenMetadataKeyInstructionDataDecoder,
    "getRemoveTokenMetadataKeyInstructionDataEncoder": ()=>getRemoveTokenMetadataKeyInstructionDataEncoder,
    "getResumeDiscriminatorBytes": ()=>getResumeDiscriminatorBytes,
    "getResumeInstruction": ()=>getResumeInstruction,
    "getResumeInstructionDataCodec": ()=>getResumeInstructionDataCodec,
    "getResumeInstructionDataDecoder": ()=>getResumeInstructionDataDecoder,
    "getResumeInstructionDataEncoder": ()=>getResumeInstructionDataEncoder,
    "getResumePausableDiscriminatorBytes": ()=>getResumePausableDiscriminatorBytes,
    "getRevokeDiscriminatorBytes": ()=>getRevokeDiscriminatorBytes,
    "getRevokeInstruction": ()=>getRevokeInstruction,
    "getRevokeInstructionDataCodec": ()=>getRevokeInstructionDataCodec,
    "getRevokeInstructionDataDecoder": ()=>getRevokeInstructionDataDecoder,
    "getRevokeInstructionDataEncoder": ()=>getRevokeInstructionDataEncoder,
    "getSetAuthorityDiscriminatorBytes": ()=>getSetAuthorityDiscriminatorBytes,
    "getSetAuthorityInstruction": ()=>getSetAuthorityInstruction,
    "getSetAuthorityInstructionDataCodec": ()=>getSetAuthorityInstructionDataCodec,
    "getSetAuthorityInstructionDataDecoder": ()=>getSetAuthorityInstructionDataDecoder,
    "getSetAuthorityInstructionDataEncoder": ()=>getSetAuthorityInstructionDataEncoder,
    "getSetTransferFeeDiscriminatorBytes": ()=>getSetTransferFeeDiscriminatorBytes,
    "getSetTransferFeeInstruction": ()=>getSetTransferFeeInstruction,
    "getSetTransferFeeInstructionDataCodec": ()=>getSetTransferFeeInstructionDataCodec,
    "getSetTransferFeeInstructionDataDecoder": ()=>getSetTransferFeeInstructionDataDecoder,
    "getSetTransferFeeInstructionDataEncoder": ()=>getSetTransferFeeInstructionDataEncoder,
    "getSetTransferFeeTransferFeeDiscriminatorBytes": ()=>getSetTransferFeeTransferFeeDiscriminatorBytes,
    "getSyncNativeDiscriminatorBytes": ()=>getSyncNativeDiscriminatorBytes,
    "getSyncNativeInstruction": ()=>getSyncNativeInstruction,
    "getSyncNativeInstructionDataCodec": ()=>getSyncNativeInstructionDataCodec,
    "getSyncNativeInstructionDataDecoder": ()=>getSyncNativeInstructionDataDecoder,
    "getSyncNativeInstructionDataEncoder": ()=>getSyncNativeInstructionDataEncoder,
    "getThawAccountDiscriminatorBytes": ()=>getThawAccountDiscriminatorBytes,
    "getThawAccountInstruction": ()=>getThawAccountInstruction,
    "getThawAccountInstructionDataCodec": ()=>getThawAccountInstructionDataCodec,
    "getThawAccountInstructionDataDecoder": ()=>getThawAccountInstructionDataDecoder,
    "getThawAccountInstructionDataEncoder": ()=>getThawAccountInstructionDataEncoder,
    "getToken2022ErrorMessage": ()=>getToken2022ErrorMessage,
    "getTokenCodec": ()=>getTokenCodec,
    "getTokenDecoder": ()=>getTokenDecoder,
    "getTokenEncoder": ()=>getTokenEncoder,
    "getTokenMetadataFieldCodec": ()=>getTokenMetadataFieldCodec,
    "getTokenMetadataFieldDecoder": ()=>getTokenMetadataFieldDecoder,
    "getTokenMetadataFieldEncoder": ()=>getTokenMetadataFieldEncoder,
    "getTokenSize": ()=>getTokenSize,
    "getTransferCheckedDiscriminatorBytes": ()=>getTransferCheckedDiscriminatorBytes,
    "getTransferCheckedInstruction": ()=>getTransferCheckedInstruction,
    "getTransferCheckedInstructionDataCodec": ()=>getTransferCheckedInstructionDataCodec,
    "getTransferCheckedInstructionDataDecoder": ()=>getTransferCheckedInstructionDataDecoder,
    "getTransferCheckedInstructionDataEncoder": ()=>getTransferCheckedInstructionDataEncoder,
    "getTransferCheckedWithFeeDiscriminatorBytes": ()=>getTransferCheckedWithFeeDiscriminatorBytes,
    "getTransferCheckedWithFeeInstruction": ()=>getTransferCheckedWithFeeInstruction,
    "getTransferCheckedWithFeeInstructionDataCodec": ()=>getTransferCheckedWithFeeInstructionDataCodec,
    "getTransferCheckedWithFeeInstructionDataDecoder": ()=>getTransferCheckedWithFeeInstructionDataDecoder,
    "getTransferCheckedWithFeeInstructionDataEncoder": ()=>getTransferCheckedWithFeeInstructionDataEncoder,
    "getTransferCheckedWithFeeTransferFeeDiscriminatorBytes": ()=>getTransferCheckedWithFeeTransferFeeDiscriminatorBytes,
    "getTransferDiscriminatorBytes": ()=>getTransferDiscriminatorBytes,
    "getTransferFeeCodec": ()=>getTransferFeeCodec,
    "getTransferFeeDecoder": ()=>getTransferFeeDecoder,
    "getTransferFeeEncoder": ()=>getTransferFeeEncoder,
    "getTransferInstruction": ()=>getTransferInstruction,
    "getTransferInstructionDataCodec": ()=>getTransferInstructionDataCodec,
    "getTransferInstructionDataDecoder": ()=>getTransferInstructionDataDecoder,
    "getTransferInstructionDataEncoder": ()=>getTransferInstructionDataEncoder,
    "getUiAmountToAmountDiscriminatorBytes": ()=>getUiAmountToAmountDiscriminatorBytes,
    "getUiAmountToAmountInstruction": ()=>getUiAmountToAmountInstruction,
    "getUiAmountToAmountInstructionDataCodec": ()=>getUiAmountToAmountInstructionDataCodec,
    "getUiAmountToAmountInstructionDataDecoder": ()=>getUiAmountToAmountInstructionDataDecoder,
    "getUiAmountToAmountInstructionDataEncoder": ()=>getUiAmountToAmountInstructionDataEncoder,
    "getUpdateConfidentialTransferMintConfidentialTransferDiscriminatorBytes": ()=>getUpdateConfidentialTransferMintConfidentialTransferDiscriminatorBytes,
    "getUpdateConfidentialTransferMintDiscriminatorBytes": ()=>getUpdateConfidentialTransferMintDiscriminatorBytes,
    "getUpdateConfidentialTransferMintInstruction": ()=>getUpdateConfidentialTransferMintInstruction,
    "getUpdateConfidentialTransferMintInstructionDataCodec": ()=>getUpdateConfidentialTransferMintInstructionDataCodec,
    "getUpdateConfidentialTransferMintInstructionDataDecoder": ()=>getUpdateConfidentialTransferMintInstructionDataDecoder,
    "getUpdateConfidentialTransferMintInstructionDataEncoder": ()=>getUpdateConfidentialTransferMintInstructionDataEncoder,
    "getUpdateDefaultAccountStateDefaultAccountStateDiscriminatorBytes": ()=>getUpdateDefaultAccountStateDefaultAccountStateDiscriminatorBytes,
    "getUpdateDefaultAccountStateDiscriminatorBytes": ()=>getUpdateDefaultAccountStateDiscriminatorBytes,
    "getUpdateDefaultAccountStateInstruction": ()=>getUpdateDefaultAccountStateInstruction,
    "getUpdateDefaultAccountStateInstructionDataCodec": ()=>getUpdateDefaultAccountStateInstructionDataCodec,
    "getUpdateDefaultAccountStateInstructionDataDecoder": ()=>getUpdateDefaultAccountStateInstructionDataDecoder,
    "getUpdateDefaultAccountStateInstructionDataEncoder": ()=>getUpdateDefaultAccountStateInstructionDataEncoder,
    "getUpdateGroupMemberPointerDiscriminatorBytes": ()=>getUpdateGroupMemberPointerDiscriminatorBytes,
    "getUpdateGroupMemberPointerGroupMemberPointerDiscriminatorBytes": ()=>getUpdateGroupMemberPointerGroupMemberPointerDiscriminatorBytes,
    "getUpdateGroupMemberPointerInstruction": ()=>getUpdateGroupMemberPointerInstruction,
    "getUpdateGroupMemberPointerInstructionDataCodec": ()=>getUpdateGroupMemberPointerInstructionDataCodec,
    "getUpdateGroupMemberPointerInstructionDataDecoder": ()=>getUpdateGroupMemberPointerInstructionDataDecoder,
    "getUpdateGroupMemberPointerInstructionDataEncoder": ()=>getUpdateGroupMemberPointerInstructionDataEncoder,
    "getUpdateGroupPointerDiscriminatorBytes": ()=>getUpdateGroupPointerDiscriminatorBytes,
    "getUpdateGroupPointerGroupPointerDiscriminatorBytes": ()=>getUpdateGroupPointerGroupPointerDiscriminatorBytes,
    "getUpdateGroupPointerInstruction": ()=>getUpdateGroupPointerInstruction,
    "getUpdateGroupPointerInstructionDataCodec": ()=>getUpdateGroupPointerInstructionDataCodec,
    "getUpdateGroupPointerInstructionDataDecoder": ()=>getUpdateGroupPointerInstructionDataDecoder,
    "getUpdateGroupPointerInstructionDataEncoder": ()=>getUpdateGroupPointerInstructionDataEncoder,
    "getUpdateMetadataPointerDiscriminatorBytes": ()=>getUpdateMetadataPointerDiscriminatorBytes,
    "getUpdateMetadataPointerInstruction": ()=>getUpdateMetadataPointerInstruction,
    "getUpdateMetadataPointerInstructionDataCodec": ()=>getUpdateMetadataPointerInstructionDataCodec,
    "getUpdateMetadataPointerInstructionDataDecoder": ()=>getUpdateMetadataPointerInstructionDataDecoder,
    "getUpdateMetadataPointerInstructionDataEncoder": ()=>getUpdateMetadataPointerInstructionDataEncoder,
    "getUpdateMetadataPointerMetadataPointerDiscriminatorBytes": ()=>getUpdateMetadataPointerMetadataPointerDiscriminatorBytes,
    "getUpdateMultiplierScaledUiMintDiscriminatorBytes": ()=>getUpdateMultiplierScaledUiMintDiscriminatorBytes,
    "getUpdateMultiplierScaledUiMintInstruction": ()=>getUpdateMultiplierScaledUiMintInstruction,
    "getUpdateMultiplierScaledUiMintInstructionDataCodec": ()=>getUpdateMultiplierScaledUiMintInstructionDataCodec,
    "getUpdateMultiplierScaledUiMintInstructionDataDecoder": ()=>getUpdateMultiplierScaledUiMintInstructionDataDecoder,
    "getUpdateMultiplierScaledUiMintInstructionDataEncoder": ()=>getUpdateMultiplierScaledUiMintInstructionDataEncoder,
    "getUpdateMultiplierScaledUiMintScaledUiAmountMintDiscriminatorBytes": ()=>getUpdateMultiplierScaledUiMintScaledUiAmountMintDiscriminatorBytes,
    "getUpdateRateInterestBearingMintDiscriminatorBytes": ()=>getUpdateRateInterestBearingMintDiscriminatorBytes,
    "getUpdateRateInterestBearingMintInstruction": ()=>getUpdateRateInterestBearingMintInstruction,
    "getUpdateRateInterestBearingMintInstructionDataCodec": ()=>getUpdateRateInterestBearingMintInstructionDataCodec,
    "getUpdateRateInterestBearingMintInstructionDataDecoder": ()=>getUpdateRateInterestBearingMintInstructionDataDecoder,
    "getUpdateRateInterestBearingMintInstructionDataEncoder": ()=>getUpdateRateInterestBearingMintInstructionDataEncoder,
    "getUpdateRateInterestBearingMintInterestBearingMintDiscriminatorBytes": ()=>getUpdateRateInterestBearingMintInterestBearingMintDiscriminatorBytes,
    "getUpdateTokenGroupMaxSizeDiscriminatorBytes": ()=>getUpdateTokenGroupMaxSizeDiscriminatorBytes,
    "getUpdateTokenGroupMaxSizeInstruction": ()=>getUpdateTokenGroupMaxSizeInstruction,
    "getUpdateTokenGroupMaxSizeInstructionDataCodec": ()=>getUpdateTokenGroupMaxSizeInstructionDataCodec,
    "getUpdateTokenGroupMaxSizeInstructionDataDecoder": ()=>getUpdateTokenGroupMaxSizeInstructionDataDecoder,
    "getUpdateTokenGroupMaxSizeInstructionDataEncoder": ()=>getUpdateTokenGroupMaxSizeInstructionDataEncoder,
    "getUpdateTokenGroupUpdateAuthorityDiscriminatorBytes": ()=>getUpdateTokenGroupUpdateAuthorityDiscriminatorBytes,
    "getUpdateTokenGroupUpdateAuthorityInstruction": ()=>getUpdateTokenGroupUpdateAuthorityInstruction,
    "getUpdateTokenGroupUpdateAuthorityInstructionDataCodec": ()=>getUpdateTokenGroupUpdateAuthorityInstructionDataCodec,
    "getUpdateTokenGroupUpdateAuthorityInstructionDataDecoder": ()=>getUpdateTokenGroupUpdateAuthorityInstructionDataDecoder,
    "getUpdateTokenGroupUpdateAuthorityInstructionDataEncoder": ()=>getUpdateTokenGroupUpdateAuthorityInstructionDataEncoder,
    "getUpdateTokenMetadataFieldDiscriminatorBytes": ()=>getUpdateTokenMetadataFieldDiscriminatorBytes,
    "getUpdateTokenMetadataFieldInstruction": ()=>getUpdateTokenMetadataFieldInstruction,
    "getUpdateTokenMetadataFieldInstructionDataCodec": ()=>getUpdateTokenMetadataFieldInstructionDataCodec,
    "getUpdateTokenMetadataFieldInstructionDataDecoder": ()=>getUpdateTokenMetadataFieldInstructionDataDecoder,
    "getUpdateTokenMetadataFieldInstructionDataEncoder": ()=>getUpdateTokenMetadataFieldInstructionDataEncoder,
    "getUpdateTokenMetadataUpdateAuthorityDiscriminatorBytes": ()=>getUpdateTokenMetadataUpdateAuthorityDiscriminatorBytes,
    "getUpdateTokenMetadataUpdateAuthorityInstruction": ()=>getUpdateTokenMetadataUpdateAuthorityInstruction,
    "getUpdateTokenMetadataUpdateAuthorityInstructionDataCodec": ()=>getUpdateTokenMetadataUpdateAuthorityInstructionDataCodec,
    "getUpdateTokenMetadataUpdateAuthorityInstructionDataDecoder": ()=>getUpdateTokenMetadataUpdateAuthorityInstructionDataDecoder,
    "getUpdateTokenMetadataUpdateAuthorityInstructionDataEncoder": ()=>getUpdateTokenMetadataUpdateAuthorityInstructionDataEncoder,
    "getUpdateTransferHookDiscriminatorBytes": ()=>getUpdateTransferHookDiscriminatorBytes,
    "getUpdateTransferHookInstruction": ()=>getUpdateTransferHookInstruction,
    "getUpdateTransferHookInstructionDataCodec": ()=>getUpdateTransferHookInstructionDataCodec,
    "getUpdateTransferHookInstructionDataDecoder": ()=>getUpdateTransferHookInstructionDataDecoder,
    "getUpdateTransferHookInstructionDataEncoder": ()=>getUpdateTransferHookInstructionDataEncoder,
    "getUpdateTransferHookTransferHookDiscriminatorBytes": ()=>getUpdateTransferHookTransferHookDiscriminatorBytes,
    "getWithdrawExcessLamportsDiscriminatorBytes": ()=>getWithdrawExcessLamportsDiscriminatorBytes,
    "getWithdrawExcessLamportsInstruction": ()=>getWithdrawExcessLamportsInstruction,
    "getWithdrawExcessLamportsInstructionDataCodec": ()=>getWithdrawExcessLamportsInstructionDataCodec,
    "getWithdrawExcessLamportsInstructionDataDecoder": ()=>getWithdrawExcessLamportsInstructionDataDecoder,
    "getWithdrawExcessLamportsInstructionDataEncoder": ()=>getWithdrawExcessLamportsInstructionDataEncoder,
    "getWithdrawWithheldTokensFromAccountsDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromAccountsDiscriminatorBytes,
    "getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes,
    "getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeDiscriminatorBytes,
    "getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstruction": ()=>getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstruction,
    "getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataCodec": ()=>getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataCodec,
    "getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataDecoder": ()=>getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataDecoder,
    "getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataEncoder": ()=>getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataEncoder,
    "getWithdrawWithheldTokensFromAccountsInstruction": ()=>getWithdrawWithheldTokensFromAccountsInstruction,
    "getWithdrawWithheldTokensFromAccountsInstructionDataCodec": ()=>getWithdrawWithheldTokensFromAccountsInstructionDataCodec,
    "getWithdrawWithheldTokensFromAccountsInstructionDataDecoder": ()=>getWithdrawWithheldTokensFromAccountsInstructionDataDecoder,
    "getWithdrawWithheldTokensFromAccountsInstructionDataEncoder": ()=>getWithdrawWithheldTokensFromAccountsInstructionDataEncoder,
    "getWithdrawWithheldTokensFromAccountsTransferFeeDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromAccountsTransferFeeDiscriminatorBytes,
    "getWithdrawWithheldTokensFromMintDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromMintDiscriminatorBytes,
    "getWithdrawWithheldTokensFromMintForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromMintForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes,
    "getWithdrawWithheldTokensFromMintForConfidentialTransferFeeDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromMintForConfidentialTransferFeeDiscriminatorBytes,
    "getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstruction": ()=>getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstruction,
    "getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataCodec": ()=>getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataCodec,
    "getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataDecoder": ()=>getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataDecoder,
    "getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataEncoder": ()=>getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataEncoder,
    "getWithdrawWithheldTokensFromMintInstruction": ()=>getWithdrawWithheldTokensFromMintInstruction,
    "getWithdrawWithheldTokensFromMintInstructionDataCodec": ()=>getWithdrawWithheldTokensFromMintInstructionDataCodec,
    "getWithdrawWithheldTokensFromMintInstructionDataDecoder": ()=>getWithdrawWithheldTokensFromMintInstructionDataDecoder,
    "getWithdrawWithheldTokensFromMintInstructionDataEncoder": ()=>getWithdrawWithheldTokensFromMintInstructionDataEncoder,
    "getWithdrawWithheldTokensFromMintTransferFeeDiscriminatorBytes": ()=>getWithdrawWithheldTokensFromMintTransferFeeDiscriminatorBytes,
    "identifyAssociatedTokenInstruction": ()=>identifyAssociatedTokenInstruction,
    "identifyToken2022Account": ()=>identifyToken2022Account,
    "identifyToken2022Instruction": ()=>identifyToken2022Instruction,
    "isAssociatedTokenError": ()=>isAssociatedTokenError,
    "isExtension": ()=>isExtension,
    "isToken2022Error": ()=>isToken2022Error,
    "isTokenMetadataField": ()=>isTokenMetadataField,
    "parseAmountToUiAmountInstruction": ()=>parseAmountToUiAmountInstruction,
    "parseApplyConfidentialPendingBalanceInstruction": ()=>parseApplyConfidentialPendingBalanceInstruction,
    "parseApproveCheckedInstruction": ()=>parseApproveCheckedInstruction,
    "parseApproveConfidentialTransferAccountInstruction": ()=>parseApproveConfidentialTransferAccountInstruction,
    "parseApproveInstruction": ()=>parseApproveInstruction,
    "parseBurnCheckedInstruction": ()=>parseBurnCheckedInstruction,
    "parseBurnInstruction": ()=>parseBurnInstruction,
    "parseCloseAccountInstruction": ()=>parseCloseAccountInstruction,
    "parseConfidentialDepositInstruction": ()=>parseConfidentialDepositInstruction,
    "parseConfidentialTransferInstruction": ()=>parseConfidentialTransferInstruction,
    "parseConfidentialTransferWithFeeInstruction": ()=>parseConfidentialTransferWithFeeInstruction,
    "parseConfidentialWithdrawInstruction": ()=>parseConfidentialWithdrawInstruction,
    "parseConfigureConfidentialTransferAccountInstruction": ()=>parseConfigureConfidentialTransferAccountInstruction,
    "parseCreateAssociatedTokenIdempotentInstruction": ()=>parseCreateAssociatedTokenIdempotentInstruction,
    "parseCreateAssociatedTokenInstruction": ()=>parseCreateAssociatedTokenInstruction,
    "parseCreateNativeMintInstruction": ()=>parseCreateNativeMintInstruction,
    "parseDisableConfidentialCreditsInstruction": ()=>parseDisableConfidentialCreditsInstruction,
    "parseDisableCpiGuardInstruction": ()=>parseDisableCpiGuardInstruction,
    "parseDisableHarvestToMintInstruction": ()=>parseDisableHarvestToMintInstruction,
    "parseDisableMemoTransfersInstruction": ()=>parseDisableMemoTransfersInstruction,
    "parseDisableNonConfidentialCreditsInstruction": ()=>parseDisableNonConfidentialCreditsInstruction,
    "parseEmitTokenMetadataInstruction": ()=>parseEmitTokenMetadataInstruction,
    "parseEmptyConfidentialTransferAccountInstruction": ()=>parseEmptyConfidentialTransferAccountInstruction,
    "parseEnableConfidentialCreditsInstruction": ()=>parseEnableConfidentialCreditsInstruction,
    "parseEnableCpiGuardInstruction": ()=>parseEnableCpiGuardInstruction,
    "parseEnableHarvestToMintInstruction": ()=>parseEnableHarvestToMintInstruction,
    "parseEnableMemoTransfersInstruction": ()=>parseEnableMemoTransfersInstruction,
    "parseEnableNonConfidentialCreditsInstruction": ()=>parseEnableNonConfidentialCreditsInstruction,
    "parseFreezeAccountInstruction": ()=>parseFreezeAccountInstruction,
    "parseGetAccountDataSizeInstruction": ()=>parseGetAccountDataSizeInstruction,
    "parseHarvestWithheldTokensToMintForConfidentialTransferFeeInstruction": ()=>parseHarvestWithheldTokensToMintForConfidentialTransferFeeInstruction,
    "parseHarvestWithheldTokensToMintInstruction": ()=>parseHarvestWithheldTokensToMintInstruction,
    "parseInitializeAccount2Instruction": ()=>parseInitializeAccount2Instruction,
    "parseInitializeAccount3Instruction": ()=>parseInitializeAccount3Instruction,
    "parseInitializeAccountInstruction": ()=>parseInitializeAccountInstruction,
    "parseInitializeConfidentialTransferFeeInstruction": ()=>parseInitializeConfidentialTransferFeeInstruction,
    "parseInitializeConfidentialTransferMintInstruction": ()=>parseInitializeConfidentialTransferMintInstruction,
    "parseInitializeDefaultAccountStateInstruction": ()=>parseInitializeDefaultAccountStateInstruction,
    "parseInitializeGroupMemberPointerInstruction": ()=>parseInitializeGroupMemberPointerInstruction,
    "parseInitializeGroupPointerInstruction": ()=>parseInitializeGroupPointerInstruction,
    "parseInitializeImmutableOwnerInstruction": ()=>parseInitializeImmutableOwnerInstruction,
    "parseInitializeInterestBearingMintInstruction": ()=>parseInitializeInterestBearingMintInstruction,
    "parseInitializeMetadataPointerInstruction": ()=>parseInitializeMetadataPointerInstruction,
    "parseInitializeMint2Instruction": ()=>parseInitializeMint2Instruction,
    "parseInitializeMintCloseAuthorityInstruction": ()=>parseInitializeMintCloseAuthorityInstruction,
    "parseInitializeMintInstruction": ()=>parseInitializeMintInstruction,
    "parseInitializeMultisig2Instruction": ()=>parseInitializeMultisig2Instruction,
    "parseInitializeMultisigInstruction": ()=>parseInitializeMultisigInstruction,
    "parseInitializeNonTransferableMintInstruction": ()=>parseInitializeNonTransferableMintInstruction,
    "parseInitializePausableConfigInstruction": ()=>parseInitializePausableConfigInstruction,
    "parseInitializePermanentDelegateInstruction": ()=>parseInitializePermanentDelegateInstruction,
    "parseInitializeScaledUiAmountMintInstruction": ()=>parseInitializeScaledUiAmountMintInstruction,
    "parseInitializeTokenGroupInstruction": ()=>parseInitializeTokenGroupInstruction,
    "parseInitializeTokenGroupMemberInstruction": ()=>parseInitializeTokenGroupMemberInstruction,
    "parseInitializeTokenMetadataInstruction": ()=>parseInitializeTokenMetadataInstruction,
    "parseInitializeTransferFeeConfigInstruction": ()=>parseInitializeTransferFeeConfigInstruction,
    "parseInitializeTransferHookInstruction": ()=>parseInitializeTransferHookInstruction,
    "parseMintToCheckedInstruction": ()=>parseMintToCheckedInstruction,
    "parseMintToInstruction": ()=>parseMintToInstruction,
    "parsePauseInstruction": ()=>parsePauseInstruction,
    "parseReallocateInstruction": ()=>parseReallocateInstruction,
    "parseRecoverNestedAssociatedTokenInstruction": ()=>parseRecoverNestedAssociatedTokenInstruction,
    "parseRemoveTokenMetadataKeyInstruction": ()=>parseRemoveTokenMetadataKeyInstruction,
    "parseResumeInstruction": ()=>parseResumeInstruction,
    "parseRevokeInstruction": ()=>parseRevokeInstruction,
    "parseSetAuthorityInstruction": ()=>parseSetAuthorityInstruction,
    "parseSetTransferFeeInstruction": ()=>parseSetTransferFeeInstruction,
    "parseSyncNativeInstruction": ()=>parseSyncNativeInstruction,
    "parseThawAccountInstruction": ()=>parseThawAccountInstruction,
    "parseTransferCheckedInstruction": ()=>parseTransferCheckedInstruction,
    "parseTransferCheckedWithFeeInstruction": ()=>parseTransferCheckedWithFeeInstruction,
    "parseTransferInstruction": ()=>parseTransferInstruction,
    "parseUiAmountToAmountInstruction": ()=>parseUiAmountToAmountInstruction,
    "parseUpdateConfidentialTransferMintInstruction": ()=>parseUpdateConfidentialTransferMintInstruction,
    "parseUpdateDefaultAccountStateInstruction": ()=>parseUpdateDefaultAccountStateInstruction,
    "parseUpdateGroupMemberPointerInstruction": ()=>parseUpdateGroupMemberPointerInstruction,
    "parseUpdateGroupPointerInstruction": ()=>parseUpdateGroupPointerInstruction,
    "parseUpdateMetadataPointerInstruction": ()=>parseUpdateMetadataPointerInstruction,
    "parseUpdateMultiplierScaledUiMintInstruction": ()=>parseUpdateMultiplierScaledUiMintInstruction,
    "parseUpdateRateInterestBearingMintInstruction": ()=>parseUpdateRateInterestBearingMintInstruction,
    "parseUpdateTokenGroupMaxSizeInstruction": ()=>parseUpdateTokenGroupMaxSizeInstruction,
    "parseUpdateTokenGroupUpdateAuthorityInstruction": ()=>parseUpdateTokenGroupUpdateAuthorityInstruction,
    "parseUpdateTokenMetadataFieldInstruction": ()=>parseUpdateTokenMetadataFieldInstruction,
    "parseUpdateTokenMetadataUpdateAuthorityInstruction": ()=>parseUpdateTokenMetadataUpdateAuthorityInstruction,
    "parseUpdateTransferHookInstruction": ()=>parseUpdateTransferHookInstruction,
    "parseWithdrawExcessLamportsInstruction": ()=>parseWithdrawExcessLamportsInstruction,
    "parseWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstruction": ()=>parseWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstruction,
    "parseWithdrawWithheldTokensFromAccountsInstruction": ()=>parseWithdrawWithheldTokensFromAccountsInstruction,
    "parseWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstruction": ()=>parseWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstruction,
    "parseWithdrawWithheldTokensFromMintInstruction": ()=>parseWithdrawWithheldTokensFromMintInstruction,
    "tokenMetadataField": ()=>tokenMetadataField,
    "uiAmountToAmountForInterestBearingMintWithoutSimulation": ()=>uiAmountToAmountForInterestBearingMintWithoutSimulation,
    "uiAmountToAmountForMintWithoutSimulation": ()=>uiAmountToAmountForMintWithoutSimulation,
    "uiAmountToAmountForScaledUiAmountMintWithoutSimulation": ()=>uiAmountToAmountForScaledUiAmountMintWithoutSimulation
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/codecs/node_modules/@solana/codecs-data-structures/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/codecs/node_modules/@solana/codecs-core/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/kit/node_modules/@solana/addresses/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/codecs/node_modules/@solana/codecs-numbers/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/options/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/codecs/node_modules/@solana/codecs-strings/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/accounts/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$programs$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/programs/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/kit/node_modules/@solana/instructions/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$signers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/kit/node_modules/@solana/signers/dist/index.browser.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$sysvars$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@solana/sysvars/dist/index.browser.mjs [app-client] (ecmascript)");
;
;
// src/generated/accounts/mint.ts
var AccountState = /* @__PURE__ */ ((AccountState2)=>{
    AccountState2[AccountState2["Uninitialized"] = 0] = "Uninitialized";
    AccountState2[AccountState2["Initialized"] = 1] = "Initialized";
    AccountState2[AccountState2["Frozen"] = 2] = "Frozen";
    return AccountState2;
})(AccountState || {});
function getAccountStateEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEnumEncoder"])(AccountState);
}
function getAccountStateDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEnumDecoder"])(AccountState);
}
function getAccountStateCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getAccountStateEncoder(), getAccountStateDecoder());
}
var AuthorityType = /* @__PURE__ */ ((AuthorityType2)=>{
    AuthorityType2[AuthorityType2["MintTokens"] = 0] = "MintTokens";
    AuthorityType2[AuthorityType2["FreezeAccount"] = 1] = "FreezeAccount";
    AuthorityType2[AuthorityType2["AccountOwner"] = 2] = "AccountOwner";
    AuthorityType2[AuthorityType2["CloseAccount"] = 3] = "CloseAccount";
    AuthorityType2[AuthorityType2["TransferFeeConfig"] = 4] = "TransferFeeConfig";
    AuthorityType2[AuthorityType2["WithheldWithdraw"] = 5] = "WithheldWithdraw";
    AuthorityType2[AuthorityType2["CloseMint"] = 6] = "CloseMint";
    AuthorityType2[AuthorityType2["InterestRate"] = 7] = "InterestRate";
    AuthorityType2[AuthorityType2["PermanentDelegate"] = 8] = "PermanentDelegate";
    AuthorityType2[AuthorityType2["ConfidentialTransferMint"] = 9] = "ConfidentialTransferMint";
    AuthorityType2[AuthorityType2["TransferHookProgramId"] = 10] = "TransferHookProgramId";
    AuthorityType2[AuthorityType2["ConfidentialTransferFeeConfig"] = 11] = "ConfidentialTransferFeeConfig";
    AuthorityType2[AuthorityType2["MetadataPointer"] = 12] = "MetadataPointer";
    AuthorityType2[AuthorityType2["GroupPointer"] = 13] = "GroupPointer";
    AuthorityType2[AuthorityType2["GroupMemberPointer"] = 14] = "GroupMemberPointer";
    AuthorityType2[AuthorityType2["ScaledUiAmount"] = 15] = "ScaledUiAmount";
    AuthorityType2[AuthorityType2["Pause"] = 16] = "Pause";
    return AuthorityType2;
})(AuthorityType || {});
function getAuthorityTypeEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEnumEncoder"])(AuthorityType);
}
function getAuthorityTypeDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEnumDecoder"])(AuthorityType);
}
function getAuthorityTypeCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getAuthorityTypeEncoder(), getAuthorityTypeDecoder());
}
function getDecryptableBalanceEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fixEncoderSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])(), 36);
}
function getDecryptableBalanceDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fixDecoderSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])(), 36);
}
function getDecryptableBalanceCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getDecryptableBalanceEncoder(), getDecryptableBalanceDecoder());
}
function getEncryptedBalanceEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fixEncoderSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])(), 64);
}
function getEncryptedBalanceDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fixDecoderSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])(), 64);
}
function getEncryptedBalanceCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEncryptedBalanceEncoder(), getEncryptedBalanceDecoder());
}
function getExtensionEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDiscriminatedUnionEncoder"])([
        [
            "Uninitialized",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitEncoder"])()
        ],
        [
            "TransferFeeConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "transferFeeConfigAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "withdrawWithheldAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "withheldAmount",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "olderTransferFee",
                    getTransferFeeEncoder()
                ],
                [
                    "newerTransferFee",
                    getTransferFeeEncoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "TransferFeeAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "withheldAmount",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "MintCloseAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "closeAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "ConfidentialTransferMint",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "autoApproveNewAccounts",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ],
                [
                    "auditorElgamalPubkey",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "ConfidentialTransferAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "approved",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ],
                [
                    "elgamalPubkey",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "pendingBalanceLow",
                    getEncryptedBalanceEncoder()
                ],
                [
                    "pendingBalanceHigh",
                    getEncryptedBalanceEncoder()
                ],
                [
                    "availableBalance",
                    getEncryptedBalanceEncoder()
                ],
                [
                    "decryptableAvailableBalance",
                    getDecryptableBalanceEncoder()
                ],
                [
                    "allowConfidentialCredits",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ],
                [
                    "allowNonConfidentialCredits",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ],
                [
                    "pendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "maximumPendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "expectedPendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "actualPendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "DefaultAccountState",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "state",
                    getAccountStateEncoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "ImmutableOwner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "MemoTransfer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "requireIncomingTransferMemos",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "NonTransferable",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "InterestBearingConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "rateAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "initializationTimestamp",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "preUpdateAverageRate",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Encoder"])()
                ],
                [
                    "lastUpdateTimestamp",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "currentRate",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Encoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "CpiGuard",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "lockCpi",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "PermanentDelegate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "delegate",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "NonTransferableAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "TransferHook",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "programId",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "TransferHookAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "transferring",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "ConfidentialTransferFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "elgamalPubkey",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "harvestToMintEnabled",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ],
                [
                    "withheldAmount",
                    getEncryptedBalanceEncoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "ConfidentialTransferFeeAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "withheldAmount",
                    getEncryptedBalanceEncoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "MetadataPointer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "metadataAddress",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "TokenMetadata",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "updateAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "mint",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "name",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
                ],
                [
                    "symbol",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
                ],
                [
                    "uri",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
                ],
                [
                    "additionalMetadata",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMapEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])()), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])()))
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "GroupPointer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "groupAddress",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "TokenGroup",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "updateAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "mint",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "size",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "maxSize",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "GroupMemberPointer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "memberAddress",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "TokenGroupMember",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "mint",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "group",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "memberNumber",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "ConfidentialMintBurn",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitEncoder"])()
        ],
        [
            "ScaledUiAmountConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
                ],
                [
                    "multiplier",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Encoder"])()
                ],
                [
                    "newMultiplierEffectiveTimestamp",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
                ],
                [
                    "newMultiplier",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Encoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "PausableConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "paused",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])())
        ],
        [
            "PausableAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitEncoder"])()
        ]
    ], {
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])()
    });
}
function getExtensionDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDiscriminatedUnionDecoder"])([
        [
            "Uninitialized",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitDecoder"])()
        ],
        [
            "TransferFeeConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "transferFeeConfigAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "withdrawWithheldAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "withheldAmount",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "olderTransferFee",
                    getTransferFeeDecoder()
                ],
                [
                    "newerTransferFee",
                    getTransferFeeDecoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "TransferFeeAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "withheldAmount",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "MintCloseAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "closeAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "ConfidentialTransferMint",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "autoApproveNewAccounts",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ],
                [
                    "auditorElgamalPubkey",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "ConfidentialTransferAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "approved",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ],
                [
                    "elgamalPubkey",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "pendingBalanceLow",
                    getEncryptedBalanceDecoder()
                ],
                [
                    "pendingBalanceHigh",
                    getEncryptedBalanceDecoder()
                ],
                [
                    "availableBalance",
                    getEncryptedBalanceDecoder()
                ],
                [
                    "decryptableAvailableBalance",
                    getDecryptableBalanceDecoder()
                ],
                [
                    "allowConfidentialCredits",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ],
                [
                    "allowNonConfidentialCredits",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ],
                [
                    "pendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "maximumPendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "expectedPendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "actualPendingBalanceCreditCounter",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "DefaultAccountState",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "state",
                    getAccountStateDecoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "ImmutableOwner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "MemoTransfer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "requireIncomingTransferMemos",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "NonTransferable",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "InterestBearingConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "rateAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "initializationTimestamp",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "preUpdateAverageRate",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Decoder"])()
                ],
                [
                    "lastUpdateTimestamp",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "currentRate",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Decoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "CpiGuard",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "lockCpi",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "PermanentDelegate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "delegate",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "NonTransferableAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "TransferHook",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "programId",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "TransferHookAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "transferring",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "ConfidentialTransferFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "elgamalPubkey",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "harvestToMintEnabled",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ],
                [
                    "withheldAmount",
                    getEncryptedBalanceDecoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "ConfidentialTransferFeeAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "withheldAmount",
                    getEncryptedBalanceDecoder()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "MetadataPointer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "metadataAddress",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "TokenMetadata",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "updateAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "mint",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "name",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
                ],
                [
                    "symbol",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
                ],
                [
                    "uri",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
                ],
                [
                    "additionalMetadata",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMapDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])()), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])()))
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "GroupPointer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "groupAddress",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "TokenGroup",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "updateAuthority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "mint",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "size",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "maxSize",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "GroupMemberPointer",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "memberAddress",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "TokenGroupMember",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "mint",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "group",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "memberNumber",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "ConfidentialMintBurn",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitDecoder"])()
        ],
        [
            "ScaledUiAmountConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
                ],
                [
                    "multiplier",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Decoder"])()
                ],
                [
                    "newMultiplierEffectiveTimestamp",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
                ],
                [
                    "newMultiplier",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Decoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "PausableConfig",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "authority",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                        prefix: null,
                        noneValue: "zeroes"
                    })
                ],
                [
                    "paused",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
                ]
            ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])())
        ],
        [
            "PausableAccount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitDecoder"])()
        ]
    ], {
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])()
    });
}
function getExtensionCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getExtensionEncoder(), getExtensionDecoder());
}
function extension(kind, data) {
    return Array.isArray(data) ? {
        __kind: kind,
        fields: data
    } : {
        __kind: kind,
        ...data !== null && data !== void 0 ? data : {}
    };
}
function isExtension(kind, value) {
    return value.__kind === kind;
}
var ExtensionType = /* @__PURE__ */ ((ExtensionType2)=>{
    ExtensionType2[ExtensionType2["Uninitialized"] = 0] = "Uninitialized";
    ExtensionType2[ExtensionType2["TransferFeeConfig"] = 1] = "TransferFeeConfig";
    ExtensionType2[ExtensionType2["TransferFeeAmount"] = 2] = "TransferFeeAmount";
    ExtensionType2[ExtensionType2["MintCloseAuthority"] = 3] = "MintCloseAuthority";
    ExtensionType2[ExtensionType2["ConfidentialTransferMint"] = 4] = "ConfidentialTransferMint";
    ExtensionType2[ExtensionType2["ConfidentialTransferAccount"] = 5] = "ConfidentialTransferAccount";
    ExtensionType2[ExtensionType2["DefaultAccountState"] = 6] = "DefaultAccountState";
    ExtensionType2[ExtensionType2["ImmutableOwner"] = 7] = "ImmutableOwner";
    ExtensionType2[ExtensionType2["MemoTransfer"] = 8] = "MemoTransfer";
    ExtensionType2[ExtensionType2["NonTransferable"] = 9] = "NonTransferable";
    ExtensionType2[ExtensionType2["InterestBearingConfig"] = 10] = "InterestBearingConfig";
    ExtensionType2[ExtensionType2["CpiGuard"] = 11] = "CpiGuard";
    ExtensionType2[ExtensionType2["PermanentDelegate"] = 12] = "PermanentDelegate";
    ExtensionType2[ExtensionType2["NonTransferableAccount"] = 13] = "NonTransferableAccount";
    ExtensionType2[ExtensionType2["TransferHook"] = 14] = "TransferHook";
    ExtensionType2[ExtensionType2["TransferHookAccount"] = 15] = "TransferHookAccount";
    ExtensionType2[ExtensionType2["ConfidentialTransferFee"] = 16] = "ConfidentialTransferFee";
    ExtensionType2[ExtensionType2["ConfidentialTransferFeeAmount"] = 17] = "ConfidentialTransferFeeAmount";
    ExtensionType2[ExtensionType2["ScaledUiAmountConfig"] = 18] = "ScaledUiAmountConfig";
    ExtensionType2[ExtensionType2["PausableConfig"] = 19] = "PausableConfig";
    ExtensionType2[ExtensionType2["PausableAccount"] = 20] = "PausableAccount";
    ExtensionType2[ExtensionType2["MetadataPointer"] = 21] = "MetadataPointer";
    ExtensionType2[ExtensionType2["TokenMetadata"] = 22] = "TokenMetadata";
    ExtensionType2[ExtensionType2["GroupPointer"] = 23] = "GroupPointer";
    ExtensionType2[ExtensionType2["TokenGroup"] = 24] = "TokenGroup";
    ExtensionType2[ExtensionType2["GroupMemberPointer"] = 25] = "GroupMemberPointer";
    ExtensionType2[ExtensionType2["TokenGroupMember"] = 26] = "TokenGroupMember";
    return ExtensionType2;
})(ExtensionType || {});
function getExtensionTypeEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEnumEncoder"])(ExtensionType, {
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])()
    });
}
function getExtensionTypeDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEnumDecoder"])(ExtensionType, {
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])()
    });
}
function getExtensionTypeCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getExtensionTypeEncoder(), getExtensionTypeDecoder());
}
function getTokenMetadataFieldEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDiscriminatedUnionEncoder"])([
        [
            "Name",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitEncoder"])()
        ],
        [
            "Symbol",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitEncoder"])()
        ],
        [
            "Uri",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitEncoder"])()
        ],
        [
            "Key",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
                [
                    "fields",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTupleEncoder"])([
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
                    ])
                ]
            ])
        ]
    ]);
}
function getTokenMetadataFieldDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDiscriminatedUnionDecoder"])([
        [
            "Name",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitDecoder"])()
        ],
        [
            "Symbol",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitDecoder"])()
        ],
        [
            "Uri",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUnitDecoder"])()
        ],
        [
            "Key",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
                [
                    "fields",
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTupleDecoder"])([
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
                    ])
                ]
            ])
        ]
    ]);
}
function getTokenMetadataFieldCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getTokenMetadataFieldEncoder(), getTokenMetadataFieldDecoder());
}
function tokenMetadataField(kind, data) {
    return Array.isArray(data) ? {
        __kind: kind,
        fields: data
    } : {
        __kind: kind,
        ...data !== null && data !== void 0 ? data : {}
    };
}
function isTokenMetadataField(kind, value) {
    return value.__kind === kind;
}
function getTransferFeeEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "epoch",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "maximumFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "transferFeeBasisPoints",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])()
        ]
    ]);
}
function getTransferFeeDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "epoch",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "maximumFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "transferFeeBasisPoints",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])()
        ]
    ]);
}
function getTransferFeeCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getTransferFeeEncoder(), getTransferFeeDecoder());
}
// src/generated/accounts/mint.ts
function getMintEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "mintAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "supply",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "isInitialized",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
        ],
        [
            "freezeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "extensions",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHiddenPrefixEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayEncoder"])(getExtensionEncoder(), {
                size: "remainder"
            }), [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConstantEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padLeftEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])(), 83).encode(1))
            ]), {
                prefix: null
            })
        ]
    ]);
}
function getMintDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "mintAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "supply",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "isInitialized",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
        ],
        [
            "freezeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "extensions",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHiddenPrefixDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayDecoder"])(getExtensionDecoder(), {
                size: "remainder"
            }), [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConstantDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padLeftEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])(), 83).encode(1))
            ]), {
                prefix: null
            })
        ]
    ]);
}
function getMintCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getMintEncoder(), getMintDecoder());
}
function decodeMint(encodedAccount) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAccount"])(encodedAccount, getMintDecoder());
}
async function fetchMint(rpc, address, config) {
    const maybeAccount = await fetchMaybeMint(rpc, address, config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertAccountExists"])(maybeAccount);
    return maybeAccount;
}
async function fetchMaybeMint(rpc, address, config) {
    const maybeAccount = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchEncodedAccount"])(rpc, address, config);
    return decodeMint(maybeAccount);
}
async function fetchAllMint(rpc, addresses, config) {
    const maybeAccounts = await fetchAllMaybeMint(rpc, addresses, config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertAccountsExist"])(maybeAccounts);
    return maybeAccounts;
}
async function fetchAllMaybeMint(rpc, addresses, config) {
    const maybeAccounts = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchEncodedAccounts"])(rpc, addresses, config);
    return maybeAccounts.map((maybeAccount)=>decodeMint(maybeAccount));
}
function getMultisigEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "m",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "n",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "isInitialized",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
        ],
        [
            "signers",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                size: 11
            })
        ]
    ]);
}
function getMultisigDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "m",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "n",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "isInitialized",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
        ],
        [
            "signers",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                size: 11
            })
        ]
    ]);
}
function getMultisigCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getMultisigEncoder(), getMultisigDecoder());
}
function decodeMultisig(encodedAccount) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAccount"])(encodedAccount, getMultisigDecoder());
}
async function fetchMultisig(rpc, address, config) {
    const maybeAccount = await fetchMaybeMultisig(rpc, address, config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertAccountExists"])(maybeAccount);
    return maybeAccount;
}
async function fetchMaybeMultisig(rpc, address, config) {
    const maybeAccount = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchEncodedAccount"])(rpc, address, config);
    return decodeMultisig(maybeAccount);
}
async function fetchAllMultisig(rpc, addresses, config) {
    const maybeAccounts = await fetchAllMaybeMultisig(rpc, addresses, config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertAccountsExist"])(maybeAccounts);
    return maybeAccounts;
}
async function fetchAllMaybeMultisig(rpc, addresses, config) {
    const maybeAccounts = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchEncodedAccounts"])(rpc, addresses, config);
    return maybeAccounts.map((maybeAccount)=>decodeMultisig(maybeAccount));
}
function getMultisigSize() {
    return 355;
}
function getTokenEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "mint",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ],
        [
            "owner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "delegate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "state",
            getAccountStateEncoder()
        ],
        [
            "isNative",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "delegatedAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "closeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "extensions",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHiddenPrefixEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayEncoder"])(getExtensionEncoder(), {
                size: "remainder"
            }), [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConstantEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2))
            ]), {
                prefix: null
            })
        ]
    ]);
}
function getTokenDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "mint",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ],
        [
            "owner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "delegate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "state",
            getAccountStateDecoder()
        ],
        [
            "isNative",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "delegatedAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "closeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])(),
                noneValue: "zeroes"
            })
        ],
        [
            "extensions",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHiddenPrefixDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayDecoder"])(getExtensionDecoder(), {
                size: "remainder"
            }), [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConstantDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2))
            ]), {
                prefix: null
            })
        ]
    ]);
}
function getTokenCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getTokenEncoder(), getTokenDecoder());
}
function decodeToken(encodedAccount) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAccount"])(encodedAccount, getTokenDecoder());
}
async function fetchToken(rpc, address, config) {
    const maybeAccount = await fetchMaybeToken(rpc, address, config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertAccountExists"])(maybeAccount);
    return maybeAccount;
}
async function fetchMaybeToken(rpc, address, config) {
    const maybeAccount = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchEncodedAccount"])(rpc, address, config);
    return decodeToken(maybeAccount);
}
async function fetchAllToken(rpc, addresses, config) {
    const maybeAccounts = await fetchAllMaybeToken(rpc, addresses, config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertAccountsExist"])(maybeAccounts);
    return maybeAccounts;
}
async function fetchAllMaybeToken(rpc, addresses, config) {
    const maybeAccounts = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$accounts$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchEncodedAccounts"])(rpc, addresses, config);
    return maybeAccounts.map((maybeAccount)=>decodeToken(maybeAccount));
}
var ASSOCIATED_TOKEN_PROGRAM_ADDRESS = "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL";
var AssociatedTokenInstruction = /* @__PURE__ */ ((AssociatedTokenInstruction2)=>{
    AssociatedTokenInstruction2[AssociatedTokenInstruction2["CreateAssociatedToken"] = 0] = "CreateAssociatedToken";
    AssociatedTokenInstruction2[AssociatedTokenInstruction2["CreateAssociatedTokenIdempotent"] = 1] = "CreateAssociatedTokenIdempotent";
    AssociatedTokenInstruction2[AssociatedTokenInstruction2["RecoverNestedAssociatedToken"] = 2] = "RecoverNestedAssociatedToken";
    return AssociatedTokenInstruction2;
})(AssociatedTokenInstruction || {});
function identifyAssociatedTokenInstruction(instruction) {
    const data = "data" in instruction ? instruction.data : instruction;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 0)) {
        return 0 /* CreateAssociatedToken */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 0)) {
        return 1 /* CreateAssociatedTokenIdempotent */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2), 0)) {
        return 2 /* RecoverNestedAssociatedToken */ ;
    }
    throw new Error("The provided instruction could not be identified as a associatedToken instruction.");
}
var TOKEN_2022_PROGRAM_ADDRESS = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
var Token2022Account = /* @__PURE__ */ ((Token2022Account2)=>{
    Token2022Account2[Token2022Account2["Mint"] = 0] = "Mint";
    Token2022Account2[Token2022Account2["Token"] = 1] = "Token";
    Token2022Account2[Token2022Account2["Multisig"] = 2] = "Multisig";
    return Token2022Account2;
})(Token2022Account || {});
function identifyToken2022Account(account) {
    const data = "data" in account ? account.data : account;
    if (data.length === 82) {
        return 0 /* Mint */ ;
    }
    if (data.length === 165) {
        return 1 /* Token */ ;
    }
    if (data.length === 355) {
        return 2 /* Multisig */ ;
    }
    throw new Error("The provided account could not be identified as a token-2022 account.");
}
var Token2022Instruction = /* @__PURE__ */ ((Token2022Instruction2)=>{
    Token2022Instruction2[Token2022Instruction2["InitializeMint"] = 0] = "InitializeMint";
    Token2022Instruction2[Token2022Instruction2["InitializeAccount"] = 1] = "InitializeAccount";
    Token2022Instruction2[Token2022Instruction2["InitializeMultisig"] = 2] = "InitializeMultisig";
    Token2022Instruction2[Token2022Instruction2["Transfer"] = 3] = "Transfer";
    Token2022Instruction2[Token2022Instruction2["Approve"] = 4] = "Approve";
    Token2022Instruction2[Token2022Instruction2["Revoke"] = 5] = "Revoke";
    Token2022Instruction2[Token2022Instruction2["SetAuthority"] = 6] = "SetAuthority";
    Token2022Instruction2[Token2022Instruction2["MintTo"] = 7] = "MintTo";
    Token2022Instruction2[Token2022Instruction2["Burn"] = 8] = "Burn";
    Token2022Instruction2[Token2022Instruction2["CloseAccount"] = 9] = "CloseAccount";
    Token2022Instruction2[Token2022Instruction2["FreezeAccount"] = 10] = "FreezeAccount";
    Token2022Instruction2[Token2022Instruction2["ThawAccount"] = 11] = "ThawAccount";
    Token2022Instruction2[Token2022Instruction2["TransferChecked"] = 12] = "TransferChecked";
    Token2022Instruction2[Token2022Instruction2["ApproveChecked"] = 13] = "ApproveChecked";
    Token2022Instruction2[Token2022Instruction2["MintToChecked"] = 14] = "MintToChecked";
    Token2022Instruction2[Token2022Instruction2["BurnChecked"] = 15] = "BurnChecked";
    Token2022Instruction2[Token2022Instruction2["InitializeAccount2"] = 16] = "InitializeAccount2";
    Token2022Instruction2[Token2022Instruction2["SyncNative"] = 17] = "SyncNative";
    Token2022Instruction2[Token2022Instruction2["InitializeAccount3"] = 18] = "InitializeAccount3";
    Token2022Instruction2[Token2022Instruction2["InitializeMultisig2"] = 19] = "InitializeMultisig2";
    Token2022Instruction2[Token2022Instruction2["InitializeMint2"] = 20] = "InitializeMint2";
    Token2022Instruction2[Token2022Instruction2["GetAccountDataSize"] = 21] = "GetAccountDataSize";
    Token2022Instruction2[Token2022Instruction2["InitializeImmutableOwner"] = 22] = "InitializeImmutableOwner";
    Token2022Instruction2[Token2022Instruction2["AmountToUiAmount"] = 23] = "AmountToUiAmount";
    Token2022Instruction2[Token2022Instruction2["UiAmountToAmount"] = 24] = "UiAmountToAmount";
    Token2022Instruction2[Token2022Instruction2["InitializeMintCloseAuthority"] = 25] = "InitializeMintCloseAuthority";
    Token2022Instruction2[Token2022Instruction2["InitializeTransferFeeConfig"] = 26] = "InitializeTransferFeeConfig";
    Token2022Instruction2[Token2022Instruction2["TransferCheckedWithFee"] = 27] = "TransferCheckedWithFee";
    Token2022Instruction2[Token2022Instruction2["WithdrawWithheldTokensFromMint"] = 28] = "WithdrawWithheldTokensFromMint";
    Token2022Instruction2[Token2022Instruction2["WithdrawWithheldTokensFromAccounts"] = 29] = "WithdrawWithheldTokensFromAccounts";
    Token2022Instruction2[Token2022Instruction2["HarvestWithheldTokensToMint"] = 30] = "HarvestWithheldTokensToMint";
    Token2022Instruction2[Token2022Instruction2["SetTransferFee"] = 31] = "SetTransferFee";
    Token2022Instruction2[Token2022Instruction2["InitializeConfidentialTransferMint"] = 32] = "InitializeConfidentialTransferMint";
    Token2022Instruction2[Token2022Instruction2["UpdateConfidentialTransferMint"] = 33] = "UpdateConfidentialTransferMint";
    Token2022Instruction2[Token2022Instruction2["ConfigureConfidentialTransferAccount"] = 34] = "ConfigureConfidentialTransferAccount";
    Token2022Instruction2[Token2022Instruction2["ApproveConfidentialTransferAccount"] = 35] = "ApproveConfidentialTransferAccount";
    Token2022Instruction2[Token2022Instruction2["EmptyConfidentialTransferAccount"] = 36] = "EmptyConfidentialTransferAccount";
    Token2022Instruction2[Token2022Instruction2["ConfidentialDeposit"] = 37] = "ConfidentialDeposit";
    Token2022Instruction2[Token2022Instruction2["ConfidentialWithdraw"] = 38] = "ConfidentialWithdraw";
    Token2022Instruction2[Token2022Instruction2["ConfidentialTransfer"] = 39] = "ConfidentialTransfer";
    Token2022Instruction2[Token2022Instruction2["ApplyConfidentialPendingBalance"] = 40] = "ApplyConfidentialPendingBalance";
    Token2022Instruction2[Token2022Instruction2["EnableConfidentialCredits"] = 41] = "EnableConfidentialCredits";
    Token2022Instruction2[Token2022Instruction2["DisableConfidentialCredits"] = 42] = "DisableConfidentialCredits";
    Token2022Instruction2[Token2022Instruction2["EnableNonConfidentialCredits"] = 43] = "EnableNonConfidentialCredits";
    Token2022Instruction2[Token2022Instruction2["DisableNonConfidentialCredits"] = 44] = "DisableNonConfidentialCredits";
    Token2022Instruction2[Token2022Instruction2["ConfidentialTransferWithFee"] = 45] = "ConfidentialTransferWithFee";
    Token2022Instruction2[Token2022Instruction2["InitializeDefaultAccountState"] = 46] = "InitializeDefaultAccountState";
    Token2022Instruction2[Token2022Instruction2["UpdateDefaultAccountState"] = 47] = "UpdateDefaultAccountState";
    Token2022Instruction2[Token2022Instruction2["Reallocate"] = 48] = "Reallocate";
    Token2022Instruction2[Token2022Instruction2["EnableMemoTransfers"] = 49] = "EnableMemoTransfers";
    Token2022Instruction2[Token2022Instruction2["DisableMemoTransfers"] = 50] = "DisableMemoTransfers";
    Token2022Instruction2[Token2022Instruction2["CreateNativeMint"] = 51] = "CreateNativeMint";
    Token2022Instruction2[Token2022Instruction2["InitializeNonTransferableMint"] = 52] = "InitializeNonTransferableMint";
    Token2022Instruction2[Token2022Instruction2["InitializeInterestBearingMint"] = 53] = "InitializeInterestBearingMint";
    Token2022Instruction2[Token2022Instruction2["UpdateRateInterestBearingMint"] = 54] = "UpdateRateInterestBearingMint";
    Token2022Instruction2[Token2022Instruction2["EnableCpiGuard"] = 55] = "EnableCpiGuard";
    Token2022Instruction2[Token2022Instruction2["DisableCpiGuard"] = 56] = "DisableCpiGuard";
    Token2022Instruction2[Token2022Instruction2["InitializePermanentDelegate"] = 57] = "InitializePermanentDelegate";
    Token2022Instruction2[Token2022Instruction2["InitializeTransferHook"] = 58] = "InitializeTransferHook";
    Token2022Instruction2[Token2022Instruction2["UpdateTransferHook"] = 59] = "UpdateTransferHook";
    Token2022Instruction2[Token2022Instruction2["InitializeConfidentialTransferFee"] = 60] = "InitializeConfidentialTransferFee";
    Token2022Instruction2[Token2022Instruction2["WithdrawWithheldTokensFromMintForConfidentialTransferFee"] = 61] = "WithdrawWithheldTokensFromMintForConfidentialTransferFee";
    Token2022Instruction2[Token2022Instruction2["WithdrawWithheldTokensFromAccountsForConfidentialTransferFee"] = 62] = "WithdrawWithheldTokensFromAccountsForConfidentialTransferFee";
    Token2022Instruction2[Token2022Instruction2["HarvestWithheldTokensToMintForConfidentialTransferFee"] = 63] = "HarvestWithheldTokensToMintForConfidentialTransferFee";
    Token2022Instruction2[Token2022Instruction2["EnableHarvestToMint"] = 64] = "EnableHarvestToMint";
    Token2022Instruction2[Token2022Instruction2["DisableHarvestToMint"] = 65] = "DisableHarvestToMint";
    Token2022Instruction2[Token2022Instruction2["WithdrawExcessLamports"] = 66] = "WithdrawExcessLamports";
    Token2022Instruction2[Token2022Instruction2["InitializeMetadataPointer"] = 67] = "InitializeMetadataPointer";
    Token2022Instruction2[Token2022Instruction2["UpdateMetadataPointer"] = 68] = "UpdateMetadataPointer";
    Token2022Instruction2[Token2022Instruction2["InitializeGroupPointer"] = 69] = "InitializeGroupPointer";
    Token2022Instruction2[Token2022Instruction2["UpdateGroupPointer"] = 70] = "UpdateGroupPointer";
    Token2022Instruction2[Token2022Instruction2["InitializeGroupMemberPointer"] = 71] = "InitializeGroupMemberPointer";
    Token2022Instruction2[Token2022Instruction2["UpdateGroupMemberPointer"] = 72] = "UpdateGroupMemberPointer";
    Token2022Instruction2[Token2022Instruction2["InitializeScaledUiAmountMint"] = 73] = "InitializeScaledUiAmountMint";
    Token2022Instruction2[Token2022Instruction2["UpdateMultiplierScaledUiMint"] = 74] = "UpdateMultiplierScaledUiMint";
    Token2022Instruction2[Token2022Instruction2["InitializePausableConfig"] = 75] = "InitializePausableConfig";
    Token2022Instruction2[Token2022Instruction2["Pause"] = 76] = "Pause";
    Token2022Instruction2[Token2022Instruction2["Resume"] = 77] = "Resume";
    Token2022Instruction2[Token2022Instruction2["InitializeTokenMetadata"] = 78] = "InitializeTokenMetadata";
    Token2022Instruction2[Token2022Instruction2["UpdateTokenMetadataField"] = 79] = "UpdateTokenMetadataField";
    Token2022Instruction2[Token2022Instruction2["RemoveTokenMetadataKey"] = 80] = "RemoveTokenMetadataKey";
    Token2022Instruction2[Token2022Instruction2["UpdateTokenMetadataUpdateAuthority"] = 81] = "UpdateTokenMetadataUpdateAuthority";
    Token2022Instruction2[Token2022Instruction2["EmitTokenMetadata"] = 82] = "EmitTokenMetadata";
    Token2022Instruction2[Token2022Instruction2["InitializeTokenGroup"] = 83] = "InitializeTokenGroup";
    Token2022Instruction2[Token2022Instruction2["UpdateTokenGroupMaxSize"] = 84] = "UpdateTokenGroupMaxSize";
    Token2022Instruction2[Token2022Instruction2["UpdateTokenGroupUpdateAuthority"] = 85] = "UpdateTokenGroupUpdateAuthority";
    Token2022Instruction2[Token2022Instruction2["InitializeTokenGroupMember"] = 86] = "InitializeTokenGroupMember";
    return Token2022Instruction2;
})(Token2022Instruction || {});
function identifyToken2022Instruction(instruction) {
    const data = "data" in instruction ? instruction.data : instruction;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 0)) {
        return 0 /* InitializeMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 0)) {
        return 1 /* InitializeAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2), 0)) {
        return 2 /* InitializeMultisig */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(3), 0)) {
        return 3 /* Transfer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(4), 0)) {
        return 4 /* Approve */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(5), 0)) {
        return 5 /* Revoke */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(6), 0)) {
        return 6 /* SetAuthority */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(7), 0)) {
        return 7 /* MintTo */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(8), 0)) {
        return 8 /* Burn */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(9), 0)) {
        return 9 /* CloseAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(10), 0)) {
        return 10 /* FreezeAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(11), 0)) {
        return 11 /* ThawAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(12), 0)) {
        return 12 /* TransferChecked */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(13), 0)) {
        return 13 /* ApproveChecked */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(14), 0)) {
        return 14 /* MintToChecked */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(15), 0)) {
        return 15 /* BurnChecked */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(16), 0)) {
        return 16 /* InitializeAccount2 */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(17), 0)) {
        return 17 /* SyncNative */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(18), 0)) {
        return 18 /* InitializeAccount3 */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(19), 0)) {
        return 19 /* InitializeMultisig2 */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(20), 0)) {
        return 20 /* InitializeMint2 */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(21), 0)) {
        return 21 /* GetAccountDataSize */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(22), 0)) {
        return 22 /* InitializeImmutableOwner */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(23), 0)) {
        return 23 /* AmountToUiAmount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(24), 0)) {
        return 24 /* UiAmountToAmount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(25), 0)) {
        return 25 /* InitializeMintCloseAuthority */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(26), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 26 /* InitializeTransferFeeConfig */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(26), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 27 /* TransferCheckedWithFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(26), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2), 1)) {
        return 28 /* WithdrawWithheldTokensFromMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(26), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(3), 1)) {
        return 29 /* WithdrawWithheldTokensFromAccounts */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(26), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(4), 1)) {
        return 30 /* HarvestWithheldTokensToMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(26), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(5), 1)) {
        return 31 /* SetTransferFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 32 /* InitializeConfidentialTransferMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 33 /* UpdateConfidentialTransferMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2), 1)) {
        return 34 /* ConfigureConfidentialTransferAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(3), 1)) {
        return 35 /* ApproveConfidentialTransferAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(4), 1)) {
        return 36 /* EmptyConfidentialTransferAccount */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(5), 1)) {
        return 37 /* ConfidentialDeposit */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(6), 1)) {
        return 38 /* ConfidentialWithdraw */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(7), 1)) {
        return 39 /* ConfidentialTransfer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(8), 1)) {
        return 40 /* ApplyConfidentialPendingBalance */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(9), 1)) {
        return 41 /* EnableConfidentialCredits */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(10), 1)) {
        return 42 /* DisableConfidentialCredits */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(11), 1)) {
        return 43 /* EnableNonConfidentialCredits */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(12), 1)) {
        return 44 /* DisableNonConfidentialCredits */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(27), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(13), 1)) {
        return 45 /* ConfidentialTransferWithFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(28), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 46 /* InitializeDefaultAccountState */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(28), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 47 /* UpdateDefaultAccountState */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(29), 0)) {
        return 48 /* Reallocate */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(30), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 49 /* EnableMemoTransfers */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(30), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 50 /* DisableMemoTransfers */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(31), 0)) {
        return 51 /* CreateNativeMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(32), 0)) {
        return 52 /* InitializeNonTransferableMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(33), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 53 /* InitializeInterestBearingMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(33), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 54 /* UpdateRateInterestBearingMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(34), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 55 /* EnableCpiGuard */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(34), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 56 /* DisableCpiGuard */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(35), 0)) {
        return 57 /* InitializePermanentDelegate */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(36), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 58 /* InitializeTransferHook */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(36), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 59 /* UpdateTransferHook */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(37), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 60 /* InitializeConfidentialTransferFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(37), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 61 /* WithdrawWithheldTokensFromMintForConfidentialTransferFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(37), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2), 1)) {
        return 62 /* WithdrawWithheldTokensFromAccountsForConfidentialTransferFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(37), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(3), 1)) {
        return 63 /* HarvestWithheldTokensToMintForConfidentialTransferFee */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(37), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(4), 1)) {
        return 64 /* EnableHarvestToMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(37), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(5), 1)) {
        return 65 /* DisableHarvestToMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(38), 0)) {
        return 66 /* WithdrawExcessLamports */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(39), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 67 /* InitializeMetadataPointer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(39), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 68 /* UpdateMetadataPointer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(40), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 69 /* InitializeGroupPointer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(40), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 70 /* UpdateGroupPointer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(41), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 71 /* InitializeGroupMemberPointer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(41), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 72 /* UpdateGroupMemberPointer */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(43), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 73 /* InitializeScaledUiAmountMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(43), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 74 /* UpdateMultiplierScaledUiMint */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(44), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(0), 1)) {
        return 75 /* InitializePausableConfig */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(44), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(1), 1)) {
        return 76 /* Pause */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(44), 0) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2), 1)) {
        return 77 /* Resume */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        210,
        225,
        30,
        162,
        88,
        184,
        77,
        141
    ]), 0)) {
        return 78 /* InitializeTokenMetadata */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        221,
        233,
        49,
        45,
        181,
        202,
        220,
        200
    ]), 0)) {
        return 79 /* UpdateTokenMetadataField */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        234,
        18,
        32,
        56,
        89,
        141,
        37,
        181
    ]), 0)) {
        return 80 /* RemoveTokenMetadataKey */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        215,
        228,
        166,
        228,
        84,
        100,
        86,
        123
    ]), 0)) {
        return 81 /* UpdateTokenMetadataUpdateAuthority */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        250,
        166,
        180,
        250,
        13,
        12,
        184,
        70
    ]), 0)) {
        return 82 /* EmitTokenMetadata */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        121,
        113,
        108,
        39,
        54,
        51,
        0,
        4
    ]), 0)) {
        return 83 /* InitializeTokenGroup */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        108,
        37,
        171,
        143,
        248,
        30,
        18,
        110
    ]), 0)) {
        return 84 /* UpdateTokenGroupMaxSize */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        161,
        105,
        88,
        1,
        237,
        221,
        216,
        203
    ]), 0)) {
        return 85 /* UpdateTokenGroupUpdateAuthority */ ;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["containsBytes"])(data, new Uint8Array([
        152,
        32,
        222,
        176,
        223,
        237,
        116,
        134
    ]), 0)) {
        return 86 /* InitializeTokenGroupMember */ ;
    }
    throw new Error("The provided instruction could not be identified as a token-2022 instruction.");
}
// src/generated/errors/associatedToken.ts
var ASSOCIATED_TOKEN_ERROR__INVALID_OWNER = 0;
var associatedTokenErrorMessages;
if (("TURBOPACK compile-time value", "development") !== "production") {
    associatedTokenErrorMessages = {
        [ASSOCIATED_TOKEN_ERROR__INVALID_OWNER]: "Associated token account owner does not match address derivation"
    };
}
function getAssociatedTokenErrorMessage(code) {
    if ("TURBOPACK compile-time truthy", 1) {
        return associatedTokenErrorMessages[code];
    }
    //TURBOPACK unreachable
    ;
}
function isAssociatedTokenError(error, transactionMessage, code) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$programs$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isProgramError"])(error, transactionMessage, ASSOCIATED_TOKEN_PROGRAM_ADDRESS, code);
}
var TOKEN_2022_ERROR__NOT_RENT_EXEMPT = 0;
var TOKEN_2022_ERROR__INSUFFICIENT_FUNDS = 1;
var TOKEN_2022_ERROR__INVALID_MINT = 2;
var TOKEN_2022_ERROR__MINT_MISMATCH = 3;
var TOKEN_2022_ERROR__OWNER_MISMATCH = 4;
var TOKEN_2022_ERROR__FIXED_SUPPLY = 5;
var TOKEN_2022_ERROR__ALREADY_IN_USE = 6;
var TOKEN_2022_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS = 7;
var TOKEN_2022_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS = 8;
var TOKEN_2022_ERROR__UNINITIALIZED_STATE = 9;
var TOKEN_2022_ERROR__NATIVE_NOT_SUPPORTED = 10;
var TOKEN_2022_ERROR__NON_NATIVE_HAS_BALANCE = 11;
var TOKEN_2022_ERROR__INVALID_INSTRUCTION = 12;
var TOKEN_2022_ERROR__INVALID_STATE = 13;
var TOKEN_2022_ERROR__OVERFLOW = 14;
var TOKEN_2022_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED = 15;
var TOKEN_2022_ERROR__MINT_CANNOT_FREEZE = 16;
var TOKEN_2022_ERROR__ACCOUNT_FROZEN = 17;
var TOKEN_2022_ERROR__MINT_DECIMALS_MISMATCH = 18;
var TOKEN_2022_ERROR__NON_NATIVE_NOT_SUPPORTED = 19;
var token2022ErrorMessages;
if (("TURBOPACK compile-time value", "development") !== "production") {
    token2022ErrorMessages = {
        [TOKEN_2022_ERROR__ACCOUNT_FROZEN]: "Account is frozen",
        [TOKEN_2022_ERROR__ALREADY_IN_USE]: "Already in use",
        [TOKEN_2022_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED]: "Account does not support specified authority type",
        [TOKEN_2022_ERROR__FIXED_SUPPLY]: "Fixed supply",
        [TOKEN_2022_ERROR__INSUFFICIENT_FUNDS]: "Insufficient funds",
        [TOKEN_2022_ERROR__INVALID_INSTRUCTION]: "Invalid instruction",
        [TOKEN_2022_ERROR__INVALID_MINT]: "Invalid Mint",
        [TOKEN_2022_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS]: "Invalid number of provided signers",
        [TOKEN_2022_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS]: "Invalid number of required signers",
        [TOKEN_2022_ERROR__INVALID_STATE]: "State is invalid for requested operation",
        [TOKEN_2022_ERROR__MINT_CANNOT_FREEZE]: "This token mint cannot freeze accounts",
        [TOKEN_2022_ERROR__MINT_DECIMALS_MISMATCH]: "The provided decimals value different from the Mint decimals",
        [TOKEN_2022_ERROR__MINT_MISMATCH]: "Account not associated with this Mint",
        [TOKEN_2022_ERROR__NATIVE_NOT_SUPPORTED]: "Instruction does not support native tokens",
        [TOKEN_2022_ERROR__NON_NATIVE_HAS_BALANCE]: "Non-native account can only be closed if its balance is zero",
        [TOKEN_2022_ERROR__NON_NATIVE_NOT_SUPPORTED]: "Instruction does not support non-native tokens",
        [TOKEN_2022_ERROR__NOT_RENT_EXEMPT]: "Lamport balance below rent-exempt threshold",
        [TOKEN_2022_ERROR__OVERFLOW]: "Operation overflowed",
        [TOKEN_2022_ERROR__OWNER_MISMATCH]: "Owner does not match",
        [TOKEN_2022_ERROR__UNINITIALIZED_STATE]: "State is unititialized"
    };
}
function getToken2022ErrorMessage(code) {
    if ("TURBOPACK compile-time truthy", 1) {
        return token2022ErrorMessages[code];
    }
    //TURBOPACK unreachable
    ;
}
function isToken2022Error(error, transactionMessage, code) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$programs$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isProgramError"])(error, transactionMessage, TOKEN_2022_PROGRAM_ADDRESS, code);
}
function expectAddress(value) {
    if (!value) {
        throw new Error("Expected a Address.");
    }
    if (typeof value === "object" && "address" in value) {
        return value.address;
    }
    if (Array.isArray(value)) {
        return value[0];
    }
    return value;
}
function getAccountMetaFactory(programAddress, optionalAccountStrategy) {
    return (account)=>{
        if (!account.value) {
            return Object.freeze({
                address: programAddress,
                role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY
            });
        }
        const writableRole = account.isWritable ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].WRITABLE : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY;
        return Object.freeze({
            address: expectAddress(account.value),
            role: isTransactionSigner(account.value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["upgradeRoleToSigner"])(writableRole) : writableRole,
            ...isTransactionSigner(account.value) ? {
                signer: account.value
            } : {}
        });
    };
}
function isTransactionSigner(value) {
    return !!value && typeof value === "object" && "address" in value && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$signers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTransactionSigner"])(value);
}
// src/generated/instructions/amountToUiAmount.ts
var AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR = 23;
function getAmountToUiAmountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR);
}
function getAmountToUiAmountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR
        }));
}
function getAmountToUiAmountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getAmountToUiAmountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getAmountToUiAmountInstructionDataEncoder(), getAmountToUiAmountInstructionDataDecoder());
}
function getAmountToUiAmountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getAmountToUiAmountInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseAmountToUiAmountInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getAmountToUiAmountInstructionDataDecoder().decode(instruction.data)
    };
}
var APPLY_CONFIDENTIAL_PENDING_BALANCE_DISCRIMINATOR = 27;
function getApplyConfidentialPendingBalanceDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(APPLY_CONFIDENTIAL_PENDING_BALANCE_DISCRIMINATOR);
}
var APPLY_CONFIDENTIAL_PENDING_BALANCE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 8;
function getApplyConfidentialPendingBalanceConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(APPLY_CONFIDENTIAL_PENDING_BALANCE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getApplyConfidentialPendingBalanceInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "expectedPendingBalanceCreditCounter",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceEncoder()
        ]
    ]), (value)=>({
            ...value,
            discriminator: APPLY_CONFIDENTIAL_PENDING_BALANCE_DISCRIMINATOR,
            confidentialTransferDiscriminator: APPLY_CONFIDENTIAL_PENDING_BALANCE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getApplyConfidentialPendingBalanceInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "expectedPendingBalanceCreditCounter",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceDecoder()
        ]
    ]);
}
function getApplyConfidentialPendingBalanceInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getApplyConfidentialPendingBalanceInstructionDataEncoder(), getApplyConfidentialPendingBalanceInstructionDataDecoder());
}
function getApplyConfidentialPendingBalanceInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getApplyConfidentialPendingBalanceInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseApplyConfidentialPendingBalanceInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            authority: getNextAccount()
        },
        data: getApplyConfidentialPendingBalanceInstructionDataDecoder().decode(instruction.data)
    };
}
var APPROVE_DISCRIMINATOR = 4;
function getApproveDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(APPROVE_DISCRIMINATOR);
}
function getApproveInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: APPROVE_DISCRIMINATOR
        }));
}
function getApproveInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getApproveInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getApproveInstructionDataEncoder(), getApproveInstructionDataDecoder());
}
function getApproveInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_source, _input_delegate, _input_owner;
    const originalAccounts = {
        source: {
            value: (_input_source = input.source) !== null && _input_source !== void 0 ? _input_source : null,
            isWritable: true
        },
        delegate: {
            value: (_input_delegate = input.delegate) !== null && _input_delegate !== void 0 ? _input_delegate : null,
            isWritable: false
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.source),
            getAccountMeta(accounts.delegate),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getApproveInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseApproveInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            source: getNextAccount(),
            delegate: getNextAccount(),
            owner: getNextAccount()
        },
        data: getApproveInstructionDataDecoder().decode(instruction.data)
    };
}
var APPROVE_CHECKED_DISCRIMINATOR = 13;
function getApproveCheckedDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(APPROVE_CHECKED_DISCRIMINATOR);
}
function getApproveCheckedInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: APPROVE_CHECKED_DISCRIMINATOR
        }));
}
function getApproveCheckedInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getApproveCheckedInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getApproveCheckedInstructionDataEncoder(), getApproveCheckedInstructionDataDecoder());
}
function getApproveCheckedInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_source, _input_mint, _input_delegate, _input_owner;
    const originalAccounts = {
        source: {
            value: (_input_source = input.source) !== null && _input_source !== void 0 ? _input_source : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        delegate: {
            value: (_input_delegate = input.delegate) !== null && _input_delegate !== void 0 ? _input_delegate : null,
            isWritable: false
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.source),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.delegate),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getApproveCheckedInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseApproveCheckedInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            source: getNextAccount(),
            mint: getNextAccount(),
            delegate: getNextAccount(),
            owner: getNextAccount()
        },
        data: getApproveCheckedInstructionDataDecoder().decode(instruction.data)
    };
}
var APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR = 27;
function getApproveConfidentialTransferAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR);
}
var APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 3;
function getApproveConfidentialTransferAccountConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getApproveConfidentialTransferAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR,
            confidentialTransferDiscriminator: APPROVE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getApproveConfidentialTransferAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getApproveConfidentialTransferAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getApproveConfidentialTransferAccountInstructionDataEncoder(), getApproveConfidentialTransferAccountInstructionDataDecoder());
}
function getApproveConfidentialTransferAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_mint, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority)
        ],
        programAddress,
        data: getApproveConfidentialTransferAccountInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseApproveConfidentialTransferAccountInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getApproveConfidentialTransferAccountInstructionDataDecoder().decode(instruction.data)
    };
}
var BURN_DISCRIMINATOR = 8;
function getBurnDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(BURN_DISCRIMINATOR);
}
function getBurnInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: BURN_DISCRIMINATOR
        }));
}
function getBurnInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getBurnInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getBurnInstructionDataEncoder(), getBurnInstructionDataDecoder());
}
function getBurnInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint, _input_authority;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getBurnInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseBurnInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getBurnInstructionDataDecoder().decode(instruction.data)
    };
}
var BURN_CHECKED_DISCRIMINATOR = 15;
function getBurnCheckedDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(BURN_CHECKED_DISCRIMINATOR);
}
function getBurnCheckedInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: BURN_CHECKED_DISCRIMINATOR
        }));
}
function getBurnCheckedInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getBurnCheckedInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getBurnCheckedInstructionDataEncoder(), getBurnCheckedInstructionDataDecoder());
}
function getBurnCheckedInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint, _input_authority;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getBurnCheckedInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseBurnCheckedInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getBurnCheckedInstructionDataDecoder().decode(instruction.data)
    };
}
var CLOSE_ACCOUNT_DISCRIMINATOR = 9;
function getCloseAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CLOSE_ACCOUNT_DISCRIMINATOR);
}
function getCloseAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CLOSE_ACCOUNT_DISCRIMINATOR
        }));
}
function getCloseAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getCloseAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getCloseAccountInstructionDataEncoder(), getCloseAccountInstructionDataDecoder());
}
function getCloseAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_destination, _input_owner;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        destination: {
            value: (_input_destination = input.destination) !== null && _input_destination !== void 0 ? _input_destination : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.destination),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getCloseAccountInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseCloseAccountInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            destination: getNextAccount(),
            owner: getNextAccount()
        },
        data: getCloseAccountInstructionDataDecoder().decode(instruction.data)
    };
}
var CONFIDENTIAL_DEPOSIT_DISCRIMINATOR = 27;
function getConfidentialDepositDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_DEPOSIT_DISCRIMINATOR);
}
var CONFIDENTIAL_DEPOSIT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 5;
function getConfidentialDepositConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_DEPOSIT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getConfidentialDepositInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CONFIDENTIAL_DEPOSIT_DISCRIMINATOR,
            confidentialTransferDiscriminator: CONFIDENTIAL_DEPOSIT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getConfidentialDepositInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getConfidentialDepositInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getConfidentialDepositInstructionDataEncoder(), getConfidentialDepositInstructionDataDecoder());
}
function getConfidentialDepositInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_mint, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getConfidentialDepositInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseConfidentialDepositInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getConfidentialDepositInstructionDataDecoder().decode(instruction.data)
    };
}
var CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 27;
function getConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
var CONFIDENTIAL_TRANSFER_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 7;
function getConfidentialTransferConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_TRANSFER_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getConfidentialTransferInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "newSourceDecryptableAvailableBalance",
            getDecryptableBalanceEncoder()
        ],
        [
            "equalityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "ciphertextValidityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "rangeProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CONFIDENTIAL_TRANSFER_DISCRIMINATOR,
            confidentialTransferDiscriminator: CONFIDENTIAL_TRANSFER_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getConfidentialTransferInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "newSourceDecryptableAvailableBalance",
            getDecryptableBalanceDecoder()
        ],
        [
            "equalityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "ciphertextValidityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "rangeProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ]
    ]);
}
function getConfidentialTransferInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getConfidentialTransferInstructionDataEncoder(), getConfidentialTransferInstructionDataDecoder());
}
function getConfidentialTransferInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_sourceToken, _input_mint, _input_destinationToken, _input_instructionsSysvar, _input_equalityRecord, _input_ciphertextValidityRecord, _input_rangeRecord, _input_authority;
    const originalAccounts = {
        sourceToken: {
            value: (_input_sourceToken = input.sourceToken) !== null && _input_sourceToken !== void 0 ? _input_sourceToken : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        destinationToken: {
            value: (_input_destinationToken = input.destinationToken) !== null && _input_destinationToken !== void 0 ? _input_destinationToken : null,
            isWritable: true
        },
        instructionsSysvar: {
            value: (_input_instructionsSysvar = input.instructionsSysvar) !== null && _input_instructionsSysvar !== void 0 ? _input_instructionsSysvar : null,
            isWritable: false
        },
        equalityRecord: {
            value: (_input_equalityRecord = input.equalityRecord) !== null && _input_equalityRecord !== void 0 ? _input_equalityRecord : null,
            isWritable: false
        },
        ciphertextValidityRecord: {
            value: (_input_ciphertextValidityRecord = input.ciphertextValidityRecord) !== null && _input_ciphertextValidityRecord !== void 0 ? _input_ciphertextValidityRecord : null,
            isWritable: false
        },
        rangeRecord: {
            value: (_input_rangeRecord = input.rangeRecord) !== null && _input_rangeRecord !== void 0 ? _input_rangeRecord : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.sourceToken),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.destinationToken),
            getAccountMeta(accounts.instructionsSysvar),
            getAccountMeta(accounts.equalityRecord),
            getAccountMeta(accounts.ciphertextValidityRecord),
            getAccountMeta(accounts.rangeRecord),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getConfidentialTransferInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseConfidentialTransferInstruction(instruction) {
    if (instruction.accounts.length < 8) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            sourceToken: getNextAccount(),
            mint: getNextAccount(),
            destinationToken: getNextAccount(),
            instructionsSysvar: getNextOptionalAccount(),
            equalityRecord: getNextOptionalAccount(),
            ciphertextValidityRecord: getNextOptionalAccount(),
            rangeRecord: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getConfidentialTransferInstructionDataDecoder().decode(instruction.data)
    };
}
var CONFIDENTIAL_TRANSFER_WITH_FEE_DISCRIMINATOR = 27;
function getConfidentialTransferWithFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_TRANSFER_WITH_FEE_DISCRIMINATOR);
}
var CONFIDENTIAL_TRANSFER_WITH_FEE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 13;
function getConfidentialTransferWithFeeConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_TRANSFER_WITH_FEE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getConfidentialTransferWithFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "newSourceDecryptableAvailableBalance",
            getDecryptableBalanceEncoder()
        ],
        [
            "equalityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "transferAmountCiphertextValidityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "feeSigmaProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "feeCiphertextValidityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "rangeProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CONFIDENTIAL_TRANSFER_WITH_FEE_DISCRIMINATOR,
            confidentialTransferDiscriminator: CONFIDENTIAL_TRANSFER_WITH_FEE_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getConfidentialTransferWithFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "newSourceDecryptableAvailableBalance",
            getDecryptableBalanceDecoder()
        ],
        [
            "equalityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "transferAmountCiphertextValidityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "feeSigmaProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "feeCiphertextValidityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "rangeProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ]
    ]);
}
function getConfidentialTransferWithFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getConfidentialTransferWithFeeInstructionDataEncoder(), getConfidentialTransferWithFeeInstructionDataDecoder());
}
function getConfidentialTransferWithFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_sourceToken, _input_mint, _input_destinationToken, _input_instructionsSysvar, _input_equalityRecord, _input_transferAmountCiphertextValidityRecord, _input_feeSigmaRecord, _input_feeCiphertextValidityRecord, _input_rangeRecord, _input_authority;
    const originalAccounts = {
        sourceToken: {
            value: (_input_sourceToken = input.sourceToken) !== null && _input_sourceToken !== void 0 ? _input_sourceToken : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        destinationToken: {
            value: (_input_destinationToken = input.destinationToken) !== null && _input_destinationToken !== void 0 ? _input_destinationToken : null,
            isWritable: true
        },
        instructionsSysvar: {
            value: (_input_instructionsSysvar = input.instructionsSysvar) !== null && _input_instructionsSysvar !== void 0 ? _input_instructionsSysvar : null,
            isWritable: false
        },
        equalityRecord: {
            value: (_input_equalityRecord = input.equalityRecord) !== null && _input_equalityRecord !== void 0 ? _input_equalityRecord : null,
            isWritable: false
        },
        transferAmountCiphertextValidityRecord: {
            value: (_input_transferAmountCiphertextValidityRecord = input.transferAmountCiphertextValidityRecord) !== null && _input_transferAmountCiphertextValidityRecord !== void 0 ? _input_transferAmountCiphertextValidityRecord : null,
            isWritable: false
        },
        feeSigmaRecord: {
            value: (_input_feeSigmaRecord = input.feeSigmaRecord) !== null && _input_feeSigmaRecord !== void 0 ? _input_feeSigmaRecord : null,
            isWritable: false
        },
        feeCiphertextValidityRecord: {
            value: (_input_feeCiphertextValidityRecord = input.feeCiphertextValidityRecord) !== null && _input_feeCiphertextValidityRecord !== void 0 ? _input_feeCiphertextValidityRecord : null,
            isWritable: false
        },
        rangeRecord: {
            value: (_input_rangeRecord = input.rangeRecord) !== null && _input_rangeRecord !== void 0 ? _input_rangeRecord : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.sourceToken),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.destinationToken),
            getAccountMeta(accounts.instructionsSysvar),
            getAccountMeta(accounts.equalityRecord),
            getAccountMeta(accounts.transferAmountCiphertextValidityRecord),
            getAccountMeta(accounts.feeSigmaRecord),
            getAccountMeta(accounts.feeCiphertextValidityRecord),
            getAccountMeta(accounts.rangeRecord),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getConfidentialTransferWithFeeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseConfidentialTransferWithFeeInstruction(instruction) {
    if (instruction.accounts.length < 10) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            sourceToken: getNextAccount(),
            mint: getNextAccount(),
            destinationToken: getNextAccount(),
            instructionsSysvar: getNextOptionalAccount(),
            equalityRecord: getNextOptionalAccount(),
            transferAmountCiphertextValidityRecord: getNextOptionalAccount(),
            feeSigmaRecord: getNextOptionalAccount(),
            feeCiphertextValidityRecord: getNextOptionalAccount(),
            rangeRecord: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getConfidentialTransferWithFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var CONFIDENTIAL_WITHDRAW_DISCRIMINATOR = 27;
function getConfidentialWithdrawDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_WITHDRAW_DISCRIMINATOR);
}
var CONFIDENTIAL_WITHDRAW_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 6;
function getConfidentialWithdrawConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIDENTIAL_WITHDRAW_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getConfidentialWithdrawInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceEncoder()
        ],
        [
            "equalityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "rangeProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CONFIDENTIAL_WITHDRAW_DISCRIMINATOR,
            confidentialTransferDiscriminator: CONFIDENTIAL_WITHDRAW_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getConfidentialWithdrawInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceDecoder()
        ],
        [
            "equalityProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "rangeProofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ]
    ]);
}
function getConfidentialWithdrawInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getConfidentialWithdrawInstructionDataEncoder(), getConfidentialWithdrawInstructionDataDecoder());
}
function getConfidentialWithdrawInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_mint, _input_instructionsSysvar, _input_equalityRecord, _input_rangeRecord, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        instructionsSysvar: {
            value: (_input_instructionsSysvar = input.instructionsSysvar) !== null && _input_instructionsSysvar !== void 0 ? _input_instructionsSysvar : null,
            isWritable: false
        },
        equalityRecord: {
            value: (_input_equalityRecord = input.equalityRecord) !== null && _input_equalityRecord !== void 0 ? _input_equalityRecord : null,
            isWritable: false
        },
        rangeRecord: {
            value: (_input_rangeRecord = input.rangeRecord) !== null && _input_rangeRecord !== void 0 ? _input_rangeRecord : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.instructionsSysvar),
            getAccountMeta(accounts.equalityRecord),
            getAccountMeta(accounts.rangeRecord),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getConfidentialWithdrawInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseConfidentialWithdrawInstruction(instruction) {
    if (instruction.accounts.length < 6) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            mint: getNextAccount(),
            instructionsSysvar: getNextOptionalAccount(),
            equalityRecord: getNextOptionalAccount(),
            rangeRecord: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getConfidentialWithdrawInstructionDataDecoder().decode(instruction.data)
    };
}
var CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR = 27;
function getConfigureConfidentialTransferAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR);
}
var CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 2;
function getConfigureConfidentialTransferAccountConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getConfigureConfidentialTransferAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "decryptableZeroBalance",
            getDecryptableBalanceEncoder()
        ],
        [
            "maximumPendingBalanceCreditCounter",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR,
            confidentialTransferDiscriminator: CONFIGURE_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getConfigureConfidentialTransferAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "decryptableZeroBalance",
            getDecryptableBalanceDecoder()
        ],
        [
            "maximumPendingBalanceCreditCounter",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ]
    ]);
}
function getConfigureConfidentialTransferAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getConfigureConfidentialTransferAccountInstructionDataEncoder(), getConfigureConfidentialTransferAccountInstructionDataDecoder());
}
function getConfigureConfidentialTransferAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_mint, _input_instructionsSysvarOrContextState, _input_record, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        instructionsSysvarOrContextState: {
            value: (_input_instructionsSysvarOrContextState = input.instructionsSysvarOrContextState) !== null && _input_instructionsSysvarOrContextState !== void 0 ? _input_instructionsSysvarOrContextState : null,
            isWritable: false
        },
        record: {
            value: (_input_record = input.record) !== null && _input_record !== void 0 ? _input_record : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    if (!accounts.instructionsSysvarOrContextState.value) {
        accounts.instructionsSysvarOrContextState.value = "Sysvar1nstructions1111111111111111111111111";
    }
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.instructionsSysvarOrContextState),
            getAccountMeta(accounts.record),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getConfigureConfidentialTransferAccountInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseConfigureConfidentialTransferAccountInstruction(instruction) {
    if (instruction.accounts.length < 5) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            mint: getNextAccount(),
            instructionsSysvarOrContextState: getNextAccount(),
            record: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getConfigureConfidentialTransferAccountInstructionDataDecoder().decode(instruction.data)
    };
}
async function findAssociatedTokenPda(seeds) {
    let config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const { programAddress = "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL" } = config;
    return await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getProgramDerivedAddress"])({
        programAddress,
        seeds: [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])().encode(seeds.owner),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])().encode(seeds.tokenProgram),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])().encode(seeds.mint)
        ]
    });
}
// src/generated/instructions/createAssociatedToken.ts
var CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR = 0;
function getCreateAssociatedTokenDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR);
}
function getCreateAssociatedTokenInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR
        }));
}
function getCreateAssociatedTokenInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getCreateAssociatedTokenInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getCreateAssociatedTokenInstructionDataEncoder(), getCreateAssociatedTokenInstructionDataDecoder());
}
async function getCreateAssociatedTokenInstructionAsync(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : ASSOCIATED_TOKEN_PROGRAM_ADDRESS;
    var _input_payer, _input_ata, _input_owner, _input_mint, _input_systemProgram, _input_tokenProgram;
    const originalAccounts = {
        payer: {
            value: (_input_payer = input.payer) !== null && _input_payer !== void 0 ? _input_payer : null,
            isWritable: true
        },
        ata: {
            value: (_input_ata = input.ata) !== null && _input_ata !== void 0 ? _input_ata : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        systemProgram: {
            value: (_input_systemProgram = input.systemProgram) !== null && _input_systemProgram !== void 0 ? _input_systemProgram : null,
            isWritable: false
        },
        tokenProgram: {
            value: (_input_tokenProgram = input.tokenProgram) !== null && _input_tokenProgram !== void 0 ? _input_tokenProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.tokenProgram.value) {
        accounts.tokenProgram.value = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
    }
    if (!accounts.ata.value) {
        accounts.ata.value = await findAssociatedTokenPda({
            owner: expectAddress(accounts.owner.value),
            tokenProgram: expectAddress(accounts.tokenProgram.value),
            mint: expectAddress(accounts.mint.value)
        });
    }
    if (!accounts.systemProgram.value) {
        accounts.systemProgram.value = "11111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.payer),
            getAccountMeta(accounts.ata),
            getAccountMeta(accounts.owner),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.systemProgram),
            getAccountMeta(accounts.tokenProgram)
        ],
        programAddress,
        data: getCreateAssociatedTokenInstructionDataEncoder().encode({})
    };
    return instruction;
}
function getCreateAssociatedTokenInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : ASSOCIATED_TOKEN_PROGRAM_ADDRESS;
    var _input_payer, _input_ata, _input_owner, _input_mint, _input_systemProgram, _input_tokenProgram;
    const originalAccounts = {
        payer: {
            value: (_input_payer = input.payer) !== null && _input_payer !== void 0 ? _input_payer : null,
            isWritable: true
        },
        ata: {
            value: (_input_ata = input.ata) !== null && _input_ata !== void 0 ? _input_ata : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        systemProgram: {
            value: (_input_systemProgram = input.systemProgram) !== null && _input_systemProgram !== void 0 ? _input_systemProgram : null,
            isWritable: false
        },
        tokenProgram: {
            value: (_input_tokenProgram = input.tokenProgram) !== null && _input_tokenProgram !== void 0 ? _input_tokenProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.tokenProgram.value) {
        accounts.tokenProgram.value = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
    }
    if (!accounts.systemProgram.value) {
        accounts.systemProgram.value = "11111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.payer),
            getAccountMeta(accounts.ata),
            getAccountMeta(accounts.owner),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.systemProgram),
            getAccountMeta(accounts.tokenProgram)
        ],
        programAddress,
        data: getCreateAssociatedTokenInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseCreateAssociatedTokenInstruction(instruction) {
    if (instruction.accounts.length < 6) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            payer: getNextAccount(),
            ata: getNextAccount(),
            owner: getNextAccount(),
            mint: getNextAccount(),
            systemProgram: getNextAccount(),
            tokenProgram: getNextAccount()
        },
        data: getCreateAssociatedTokenInstructionDataDecoder().decode(instruction.data)
    };
}
var CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR = 1;
function getCreateAssociatedTokenIdempotentDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR);
}
function getCreateAssociatedTokenIdempotentInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR
        }));
}
function getCreateAssociatedTokenIdempotentInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getCreateAssociatedTokenIdempotentInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getCreateAssociatedTokenIdempotentInstructionDataEncoder(), getCreateAssociatedTokenIdempotentInstructionDataDecoder());
}
async function getCreateAssociatedTokenIdempotentInstructionAsync(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : ASSOCIATED_TOKEN_PROGRAM_ADDRESS;
    var _input_payer, _input_ata, _input_owner, _input_mint, _input_systemProgram, _input_tokenProgram;
    const originalAccounts = {
        payer: {
            value: (_input_payer = input.payer) !== null && _input_payer !== void 0 ? _input_payer : null,
            isWritable: true
        },
        ata: {
            value: (_input_ata = input.ata) !== null && _input_ata !== void 0 ? _input_ata : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        systemProgram: {
            value: (_input_systemProgram = input.systemProgram) !== null && _input_systemProgram !== void 0 ? _input_systemProgram : null,
            isWritable: false
        },
        tokenProgram: {
            value: (_input_tokenProgram = input.tokenProgram) !== null && _input_tokenProgram !== void 0 ? _input_tokenProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.tokenProgram.value) {
        accounts.tokenProgram.value = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
    }
    if (!accounts.ata.value) {
        accounts.ata.value = await findAssociatedTokenPda({
            owner: expectAddress(accounts.owner.value),
            tokenProgram: expectAddress(accounts.tokenProgram.value),
            mint: expectAddress(accounts.mint.value)
        });
    }
    if (!accounts.systemProgram.value) {
        accounts.systemProgram.value = "11111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.payer),
            getAccountMeta(accounts.ata),
            getAccountMeta(accounts.owner),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.systemProgram),
            getAccountMeta(accounts.tokenProgram)
        ],
        programAddress,
        data: getCreateAssociatedTokenIdempotentInstructionDataEncoder().encode({})
    };
    return instruction;
}
function getCreateAssociatedTokenIdempotentInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : ASSOCIATED_TOKEN_PROGRAM_ADDRESS;
    var _input_payer, _input_ata, _input_owner, _input_mint, _input_systemProgram, _input_tokenProgram;
    const originalAccounts = {
        payer: {
            value: (_input_payer = input.payer) !== null && _input_payer !== void 0 ? _input_payer : null,
            isWritable: true
        },
        ata: {
            value: (_input_ata = input.ata) !== null && _input_ata !== void 0 ? _input_ata : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        systemProgram: {
            value: (_input_systemProgram = input.systemProgram) !== null && _input_systemProgram !== void 0 ? _input_systemProgram : null,
            isWritable: false
        },
        tokenProgram: {
            value: (_input_tokenProgram = input.tokenProgram) !== null && _input_tokenProgram !== void 0 ? _input_tokenProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.tokenProgram.value) {
        accounts.tokenProgram.value = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
    }
    if (!accounts.systemProgram.value) {
        accounts.systemProgram.value = "11111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.payer),
            getAccountMeta(accounts.ata),
            getAccountMeta(accounts.owner),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.systemProgram),
            getAccountMeta(accounts.tokenProgram)
        ],
        programAddress,
        data: getCreateAssociatedTokenIdempotentInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseCreateAssociatedTokenIdempotentInstruction(instruction) {
    if (instruction.accounts.length < 6) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            payer: getNextAccount(),
            ata: getNextAccount(),
            owner: getNextAccount(),
            mint: getNextAccount(),
            systemProgram: getNextAccount(),
            tokenProgram: getNextAccount()
        },
        data: getCreateAssociatedTokenIdempotentInstructionDataDecoder().decode(instruction.data)
    };
}
var CREATE_NATIVE_MINT_DISCRIMINATOR = 31;
function getCreateNativeMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(CREATE_NATIVE_MINT_DISCRIMINATOR);
}
function getCreateNativeMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: CREATE_NATIVE_MINT_DISCRIMINATOR
        }));
}
function getCreateNativeMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getCreateNativeMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getCreateNativeMintInstructionDataEncoder(), getCreateNativeMintInstructionDataDecoder());
}
function getCreateNativeMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_payer, _input_nativeMint, _input_systemProgram;
    const originalAccounts = {
        payer: {
            value: (_input_payer = input.payer) !== null && _input_payer !== void 0 ? _input_payer : null,
            isWritable: true
        },
        nativeMint: {
            value: (_input_nativeMint = input.nativeMint) !== null && _input_nativeMint !== void 0 ? _input_nativeMint : null,
            isWritable: true
        },
        systemProgram: {
            value: (_input_systemProgram = input.systemProgram) !== null && _input_systemProgram !== void 0 ? _input_systemProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.systemProgram.value) {
        accounts.systemProgram.value = "11111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.payer),
            getAccountMeta(accounts.nativeMint),
            getAccountMeta(accounts.systemProgram)
        ],
        programAddress,
        data: getCreateNativeMintInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseCreateNativeMintInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            payer: getNextAccount(),
            nativeMint: getNextAccount(),
            systemProgram: getNextAccount()
        },
        data: getCreateNativeMintInstructionDataDecoder().decode(instruction.data)
    };
}
var DISABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR = 27;
function getDisableConfidentialCreditsDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR);
}
var DISABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 10;
function getDisableConfidentialCreditsConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getDisableConfidentialCreditsInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: DISABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
            confidentialTransferDiscriminator: DISABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getDisableConfidentialCreditsInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getDisableConfidentialCreditsInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getDisableConfidentialCreditsInstructionDataEncoder(), getDisableConfidentialCreditsInstructionDataDecoder());
}
function getDisableConfidentialCreditsInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getDisableConfidentialCreditsInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseDisableConfidentialCreditsInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            authority: getNextAccount()
        },
        data: getDisableConfidentialCreditsInstructionDataDecoder().decode(instruction.data)
    };
}
var DISABLE_CPI_GUARD_DISCRIMINATOR = 34;
function getDisableCpiGuardDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_CPI_GUARD_DISCRIMINATOR);
}
var DISABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR = 1;
function getDisableCpiGuardCpiGuardDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR);
}
function getDisableCpiGuardInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "cpiGuardDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: DISABLE_CPI_GUARD_DISCRIMINATOR,
            cpiGuardDiscriminator: DISABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR
        }));
}
function getDisableCpiGuardInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "cpiGuardDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getDisableCpiGuardInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getDisableCpiGuardInstructionDataEncoder(), getDisableCpiGuardInstructionDataDecoder());
}
function getDisableCpiGuardInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_owner;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getDisableCpiGuardInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseDisableCpiGuardInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            owner: getNextAccount()
        },
        data: getDisableCpiGuardInstructionDataDecoder().decode(instruction.data)
    };
}
var DISABLE_HARVEST_TO_MINT_DISCRIMINATOR = 37;
function getDisableHarvestToMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_HARVEST_TO_MINT_DISCRIMINATOR);
}
var DISABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 5;
function getDisableHarvestToMintConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
function getDisableHarvestToMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: DISABLE_HARVEST_TO_MINT_DISCRIMINATOR,
            confidentialTransferFeeDiscriminator: DISABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getDisableHarvestToMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getDisableHarvestToMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getDisableHarvestToMintInstructionDataEncoder(), getDisableHarvestToMintInstructionDataDecoder());
}
function getDisableHarvestToMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getDisableHarvestToMintInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseDisableHarvestToMintInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getDisableHarvestToMintInstructionDataDecoder().decode(instruction.data)
    };
}
var DISABLE_MEMO_TRANSFERS_DISCRIMINATOR = 30;
function getDisableMemoTransfersDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_MEMO_TRANSFERS_DISCRIMINATOR);
}
var DISABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR = 1;
function getDisableMemoTransfersMemoTransfersDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR);
}
function getDisableMemoTransfersInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "memoTransfersDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: DISABLE_MEMO_TRANSFERS_DISCRIMINATOR,
            memoTransfersDiscriminator: DISABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR
        }));
}
function getDisableMemoTransfersInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "memoTransfersDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getDisableMemoTransfersInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getDisableMemoTransfersInstructionDataEncoder(), getDisableMemoTransfersInstructionDataDecoder());
}
function getDisableMemoTransfersInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_owner;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getDisableMemoTransfersInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseDisableMemoTransfersInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            owner: getNextAccount()
        },
        data: getDisableMemoTransfersInstructionDataDecoder().decode(instruction.data)
    };
}
var DISABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR = 27;
function getDisableNonConfidentialCreditsDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR);
}
var DISABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 12;
function getDisableNonConfidentialCreditsConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(DISABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getDisableNonConfidentialCreditsInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: DISABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
            confidentialTransferDiscriminator: DISABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getDisableNonConfidentialCreditsInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getDisableNonConfidentialCreditsInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getDisableNonConfidentialCreditsInstructionDataEncoder(), getDisableNonConfidentialCreditsInstructionDataDecoder());
}
function getDisableNonConfidentialCreditsInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getDisableNonConfidentialCreditsInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseDisableNonConfidentialCreditsInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            authority: getNextAccount()
        },
        data: getDisableNonConfidentialCreditsInstructionDataDecoder().decode(instruction.data)
    };
}
var EMIT_TOKEN_METADATA_DISCRIMINATOR = new Uint8Array([
    250,
    166,
    180,
    250,
    13,
    12,
    184,
    70
]);
function getEmitTokenMetadataDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(EMIT_TOKEN_METADATA_DISCRIMINATOR);
}
function getEmitTokenMetadataInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "start",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])())
        ],
        [
            "end",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])())
        ]
    ]), (value)=>{
        var _value_start, _value_end;
        return {
            ...value,
            discriminator: EMIT_TOKEN_METADATA_DISCRIMINATOR,
            start: (_value_start = value.start) !== null && _value_start !== void 0 ? _value_start : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["none"])(),
            end: (_value_end = value.end) !== null && _value_end !== void 0 ? _value_end : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["none"])()
        };
    });
}
function getEmitTokenMetadataInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "start",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])())
        ],
        [
            "end",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])())
        ]
    ]);
}
function getEmitTokenMetadataInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEmitTokenMetadataInstructionDataEncoder(), getEmitTokenMetadataInstructionDataDecoder());
}
function getEmitTokenMetadataInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_metadata;
    const originalAccounts = {
        metadata: {
            value: (_input_metadata = input.metadata) !== null && _input_metadata !== void 0 ? _input_metadata : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.metadata)
        ],
        programAddress,
        data: getEmitTokenMetadataInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseEmitTokenMetadataInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            metadata: getNextAccount()
        },
        data: getEmitTokenMetadataInstructionDataDecoder().decode(instruction.data)
    };
}
var EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR = 27;
function getEmptyConfidentialTransferAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR);
}
var EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 4;
function getEmptyConfidentialTransferAccountConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getEmptyConfidentialTransferAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_DISCRIMINATOR,
            confidentialTransferDiscriminator: EMPTY_CONFIDENTIAL_TRANSFER_ACCOUNT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getEmptyConfidentialTransferAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ]
    ]);
}
function getEmptyConfidentialTransferAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEmptyConfidentialTransferAccountInstructionDataEncoder(), getEmptyConfidentialTransferAccountInstructionDataDecoder());
}
function getEmptyConfidentialTransferAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_instructionsSysvarOrContextState, _input_record, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        instructionsSysvarOrContextState: {
            value: (_input_instructionsSysvarOrContextState = input.instructionsSysvarOrContextState) !== null && _input_instructionsSysvarOrContextState !== void 0 ? _input_instructionsSysvarOrContextState : null,
            isWritable: false
        },
        record: {
            value: (_input_record = input.record) !== null && _input_record !== void 0 ? _input_record : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    if (!accounts.instructionsSysvarOrContextState.value) {
        accounts.instructionsSysvarOrContextState.value = "Sysvar1nstructions1111111111111111111111111";
    }
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.instructionsSysvarOrContextState),
            getAccountMeta(accounts.record),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getEmptyConfidentialTransferAccountInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseEmptyConfidentialTransferAccountInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            instructionsSysvarOrContextState: getNextAccount(),
            record: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getEmptyConfidentialTransferAccountInstructionDataDecoder().decode(instruction.data)
    };
}
var ENABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR = 27;
function getEnableConfidentialCreditsDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR);
}
var ENABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 9;
function getEnableConfidentialCreditsConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getEnableConfidentialCreditsInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: ENABLE_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
            confidentialTransferDiscriminator: ENABLE_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getEnableConfidentialCreditsInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getEnableConfidentialCreditsInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEnableConfidentialCreditsInstructionDataEncoder(), getEnableConfidentialCreditsInstructionDataDecoder());
}
function getEnableConfidentialCreditsInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getEnableConfidentialCreditsInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseEnableConfidentialCreditsInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            authority: getNextAccount()
        },
        data: getEnableConfidentialCreditsInstructionDataDecoder().decode(instruction.data)
    };
}
var ENABLE_CPI_GUARD_DISCRIMINATOR = 34;
function getEnableCpiGuardDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_CPI_GUARD_DISCRIMINATOR);
}
var ENABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR = 0;
function getEnableCpiGuardCpiGuardDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR);
}
function getEnableCpiGuardInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "cpiGuardDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: ENABLE_CPI_GUARD_DISCRIMINATOR,
            cpiGuardDiscriminator: ENABLE_CPI_GUARD_CPI_GUARD_DISCRIMINATOR
        }));
}
function getEnableCpiGuardInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "cpiGuardDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getEnableCpiGuardInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEnableCpiGuardInstructionDataEncoder(), getEnableCpiGuardInstructionDataDecoder());
}
function getEnableCpiGuardInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_owner;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getEnableCpiGuardInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseEnableCpiGuardInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            owner: getNextAccount()
        },
        data: getEnableCpiGuardInstructionDataDecoder().decode(instruction.data)
    };
}
var ENABLE_HARVEST_TO_MINT_DISCRIMINATOR = 37;
function getEnableHarvestToMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_HARVEST_TO_MINT_DISCRIMINATOR);
}
var ENABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 4;
function getEnableHarvestToMintConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
function getEnableHarvestToMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: ENABLE_HARVEST_TO_MINT_DISCRIMINATOR,
            confidentialTransferFeeDiscriminator: ENABLE_HARVEST_TO_MINT_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getEnableHarvestToMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getEnableHarvestToMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEnableHarvestToMintInstructionDataEncoder(), getEnableHarvestToMintInstructionDataDecoder());
}
function getEnableHarvestToMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getEnableHarvestToMintInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseEnableHarvestToMintInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getEnableHarvestToMintInstructionDataDecoder().decode(instruction.data)
    };
}
var ENABLE_MEMO_TRANSFERS_DISCRIMINATOR = 30;
function getEnableMemoTransfersDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_MEMO_TRANSFERS_DISCRIMINATOR);
}
var ENABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR = 0;
function getEnableMemoTransfersMemoTransfersDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR);
}
function getEnableMemoTransfersInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "memoTransfersDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: ENABLE_MEMO_TRANSFERS_DISCRIMINATOR,
            memoTransfersDiscriminator: ENABLE_MEMO_TRANSFERS_MEMO_TRANSFERS_DISCRIMINATOR
        }));
}
function getEnableMemoTransfersInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "memoTransfersDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getEnableMemoTransfersInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEnableMemoTransfersInstructionDataEncoder(), getEnableMemoTransfersInstructionDataDecoder());
}
function getEnableMemoTransfersInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_owner;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getEnableMemoTransfersInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseEnableMemoTransfersInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            owner: getNextAccount()
        },
        data: getEnableMemoTransfersInstructionDataDecoder().decode(instruction.data)
    };
}
var ENABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR = 27;
function getEnableNonConfidentialCreditsDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR);
}
var ENABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 11;
function getEnableNonConfidentialCreditsConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(ENABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getEnableNonConfidentialCreditsInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: ENABLE_NON_CONFIDENTIAL_CREDITS_DISCRIMINATOR,
            confidentialTransferDiscriminator: ENABLE_NON_CONFIDENTIAL_CREDITS_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getEnableNonConfidentialCreditsInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getEnableNonConfidentialCreditsInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getEnableNonConfidentialCreditsInstructionDataEncoder(), getEnableNonConfidentialCreditsInstructionDataDecoder());
}
function getEnableNonConfidentialCreditsInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_authority;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getEnableNonConfidentialCreditsInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseEnableNonConfidentialCreditsInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            authority: getNextAccount()
        },
        data: getEnableNonConfidentialCreditsInstructionDataDecoder().decode(instruction.data)
    };
}
var FREEZE_ACCOUNT_DISCRIMINATOR = 10;
function getFreezeAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(FREEZE_ACCOUNT_DISCRIMINATOR);
}
function getFreezeAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: FREEZE_ACCOUNT_DISCRIMINATOR
        }));
}
function getFreezeAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getFreezeAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getFreezeAccountInstructionDataEncoder(), getFreezeAccountInstructionDataDecoder());
}
function getFreezeAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint, _input_owner;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getFreezeAccountInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseFreezeAccountInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount(),
            owner: getNextAccount()
        },
        data: getFreezeAccountInstructionDataDecoder().decode(instruction.data)
    };
}
var GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR = 21;
function getGetAccountDataSizeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR);
}
function getGetAccountDataSizeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR
        }));
}
function getGetAccountDataSizeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getGetAccountDataSizeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getGetAccountDataSizeInstructionDataEncoder(), getGetAccountDataSizeInstructionDataDecoder());
}
function getGetAccountDataSizeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getGetAccountDataSizeInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseGetAccountDataSizeInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getGetAccountDataSizeInstructionDataDecoder().decode(instruction.data)
    };
}
var HARVEST_WITHHELD_TOKENS_TO_MINT_DISCRIMINATOR = 26;
function getHarvestWithheldTokensToMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(HARVEST_WITHHELD_TOKENS_TO_MINT_DISCRIMINATOR);
}
var HARVEST_WITHHELD_TOKENS_TO_MINT_TRANSFER_FEE_DISCRIMINATOR = 4;
function getHarvestWithheldTokensToMintTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(HARVEST_WITHHELD_TOKENS_TO_MINT_TRANSFER_FEE_DISCRIMINATOR);
}
function getHarvestWithheldTokensToMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: HARVEST_WITHHELD_TOKENS_TO_MINT_DISCRIMINATOR,
            transferFeeDiscriminator: HARVEST_WITHHELD_TOKENS_TO_MINT_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getHarvestWithheldTokensToMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getHarvestWithheldTokensToMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getHarvestWithheldTokensToMintInstructionDataEncoder(), getHarvestWithheldTokensToMintInstructionDataDecoder());
}
function getHarvestWithheldTokensToMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const remainingAccounts = args.sources.map((address)=>({
            address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].WRITABLE
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            ...remainingAccounts
        ],
        programAddress,
        data: getHarvestWithheldTokensToMintInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseHarvestWithheldTokensToMintInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getHarvestWithheldTokensToMintInstructionDataDecoder().decode(instruction.data)
    };
}
var HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 37;
function getHarvestWithheldTokensToMintForConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
var HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 3;
function getHarvestWithheldTokensToMintForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
function getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
            confidentialTransferFeeDiscriminator: HARVEST_WITHHELD_TOKENS_TO_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataEncoder(), getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataDecoder());
}
function getHarvestWithheldTokensToMintForConfidentialTransferFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_sources;
    const remainingAccounts = ((_args_sources = args.sources) !== null && _args_sources !== void 0 ? _args_sources : []).map((address)=>({
            address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].WRITABLE
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            ...remainingAccounts
        ],
        programAddress,
        data: getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseHarvestWithheldTokensToMintForConfidentialTransferFeeInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getHarvestWithheldTokensToMintForConfidentialTransferFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_ACCOUNT_DISCRIMINATOR = 1;
function getInitializeAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_ACCOUNT_DISCRIMINATOR);
}
function getInitializeAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_ACCOUNT_DISCRIMINATOR
        }));
}
function getInitializeAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getInitializeAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeAccountInstructionDataEncoder(), getInitializeAccountInstructionDataDecoder());
}
function getInitializeAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint, _input_owner, _input_rent;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        },
        rent: {
            value: (_input_rent = input.rent) !== null && _input_rent !== void 0 ? _input_rent : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.rent.value) {
        accounts.rent.value = "SysvarRent111111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.owner),
            getAccountMeta(accounts.rent)
        ],
        programAddress,
        data: getInitializeAccountInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseInitializeAccountInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount(),
            owner: getNextAccount(),
            rent: getNextAccount()
        },
        data: getInitializeAccountInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_ACCOUNT2_DISCRIMINATOR = 16;
function getInitializeAccount2DiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_ACCOUNT2_DISCRIMINATOR);
}
function getInitializeAccount2InstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "owner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_ACCOUNT2_DISCRIMINATOR
        }));
}
function getInitializeAccount2InstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "owner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ]
    ]);
}
function getInitializeAccount2InstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeAccount2InstructionDataEncoder(), getInitializeAccount2InstructionDataDecoder());
}
function getInitializeAccount2Instruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint, _input_rent;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        rent: {
            value: (_input_rent = input.rent) !== null && _input_rent !== void 0 ? _input_rent : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    if (!accounts.rent.value) {
        accounts.rent.value = "SysvarRent111111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.rent)
        ],
        programAddress,
        data: getInitializeAccount2InstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeAccount2Instruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount(),
            rent: getNextAccount()
        },
        data: getInitializeAccount2InstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_ACCOUNT3_DISCRIMINATOR = 18;
function getInitializeAccount3DiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_ACCOUNT3_DISCRIMINATOR);
}
function getInitializeAccount3InstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "owner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_ACCOUNT3_DISCRIMINATOR
        }));
}
function getInitializeAccount3InstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "owner",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ]
    ]);
}
function getInitializeAccount3InstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeAccount3InstructionDataEncoder(), getInitializeAccount3InstructionDataDecoder());
}
function getInitializeAccount3Instruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeAccount3InstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeAccount3Instruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount()
        },
        data: getInitializeAccount3InstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 37;
function getInitializeConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
var INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 0;
function getInitializeConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
function getInitializeConfidentialTransferFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "withdrawWithheldAuthorityElGamalPubkey",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
            confidentialTransferFeeDiscriminator: INITIALIZE_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getInitializeConfidentialTransferFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "withdrawWithheldAuthorityElGamalPubkey",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializeConfidentialTransferFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeConfidentialTransferFeeInstructionDataEncoder(), getInitializeConfidentialTransferFeeInstructionDataDecoder());
}
function getInitializeConfidentialTransferFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeConfidentialTransferFeeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeConfidentialTransferFeeInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeConfidentialTransferFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR = 27;
function getInitializeConfidentialTransferMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR);
}
var INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 0;
function getInitializeConfidentialTransferMintConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getInitializeConfidentialTransferMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "autoApproveNewAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
        ],
        [
            "auditorElgamalPubkey",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR,
            confidentialTransferDiscriminator: INITIALIZE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getInitializeConfidentialTransferMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "autoApproveNewAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
        ],
        [
            "auditorElgamalPubkey",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializeConfidentialTransferMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeConfidentialTransferMintInstructionDataEncoder(), getInitializeConfidentialTransferMintInstructionDataDecoder());
}
function getInitializeConfidentialTransferMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeConfidentialTransferMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeConfidentialTransferMintInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeConfidentialTransferMintInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR = 28;
function getInitializeDefaultAccountStateDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR);
}
var INITIALIZE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR = 0;
function getInitializeDefaultAccountStateDefaultAccountStateDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR);
}
function getInitializeDefaultAccountStateInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "defaultAccountStateDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "state",
            getAccountStateEncoder()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR,
            defaultAccountStateDiscriminator: INITIALIZE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR
        }));
}
function getInitializeDefaultAccountStateInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "defaultAccountStateDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "state",
            getAccountStateDecoder()
        ]
    ]);
}
function getInitializeDefaultAccountStateInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeDefaultAccountStateInstructionDataEncoder(), getInitializeDefaultAccountStateInstructionDataDecoder());
}
function getInitializeDefaultAccountStateInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeDefaultAccountStateInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeDefaultAccountStateInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeDefaultAccountStateInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_GROUP_MEMBER_POINTER_DISCRIMINATOR = 41;
function getInitializeGroupMemberPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_GROUP_MEMBER_POINTER_DISCRIMINATOR);
}
var INITIALIZE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR = 0;
function getInitializeGroupMemberPointerGroupMemberPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR);
}
function getInitializeGroupMemberPointerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "groupMemberPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "memberAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_GROUP_MEMBER_POINTER_DISCRIMINATOR,
            groupMemberPointerDiscriminator: INITIALIZE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR
        }));
}
function getInitializeGroupMemberPointerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "groupMemberPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "memberAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializeGroupMemberPointerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeGroupMemberPointerInstructionDataEncoder(), getInitializeGroupMemberPointerInstructionDataDecoder());
}
function getInitializeGroupMemberPointerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeGroupMemberPointerInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeGroupMemberPointerInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeGroupMemberPointerInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_GROUP_POINTER_DISCRIMINATOR = 40;
function getInitializeGroupPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_GROUP_POINTER_DISCRIMINATOR);
}
var INITIALIZE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR = 0;
function getInitializeGroupPointerGroupPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR);
}
function getInitializeGroupPointerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "groupPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "groupAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_GROUP_POINTER_DISCRIMINATOR,
            groupPointerDiscriminator: INITIALIZE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR
        }));
}
function getInitializeGroupPointerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "groupPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "groupAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializeGroupPointerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeGroupPointerInstructionDataEncoder(), getInitializeGroupPointerInstructionDataDecoder());
}
function getInitializeGroupPointerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeGroupPointerInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeGroupPointerInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeGroupPointerInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR = 22;
function getInitializeImmutableOwnerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR);
}
function getInitializeImmutableOwnerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR
        }));
}
function getInitializeImmutableOwnerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getInitializeImmutableOwnerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeImmutableOwnerInstructionDataEncoder(), getInitializeImmutableOwnerInstructionDataDecoder());
}
function getInitializeImmutableOwnerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account)
        ],
        programAddress,
        data: getInitializeImmutableOwnerInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseInitializeImmutableOwnerInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount()
        },
        data: getInitializeImmutableOwnerInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_INTEREST_BEARING_MINT_DISCRIMINATOR = 33;
function getInitializeInterestBearingMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_INTEREST_BEARING_MINT_DISCRIMINATOR);
}
var INITIALIZE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR = 0;
function getInitializeInterestBearingMintInterestBearingMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR);
}
function getInitializeInterestBearingMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "interestBearingMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "rateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "rate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_INTEREST_BEARING_MINT_DISCRIMINATOR,
            interestBearingMintDiscriminator: INITIALIZE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR
        }));
}
function getInitializeInterestBearingMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "interestBearingMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "rateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "rate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Decoder"])()
        ]
    ]);
}
function getInitializeInterestBearingMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeInterestBearingMintInstructionDataEncoder(), getInitializeInterestBearingMintInstructionDataDecoder());
}
function getInitializeInterestBearingMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeInterestBearingMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeInterestBearingMintInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeInterestBearingMintInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_METADATA_POINTER_DISCRIMINATOR = 39;
function getInitializeMetadataPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_METADATA_POINTER_DISCRIMINATOR);
}
var INITIALIZE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR = 0;
function getInitializeMetadataPointerMetadataPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR);
}
function getInitializeMetadataPointerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "metadataPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "metadataAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_METADATA_POINTER_DISCRIMINATOR,
            metadataPointerDiscriminator: INITIALIZE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR
        }));
}
function getInitializeMetadataPointerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "metadataPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "metadataAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializeMetadataPointerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeMetadataPointerInstructionDataEncoder(), getInitializeMetadataPointerInstructionDataDecoder());
}
function getInitializeMetadataPointerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeMetadataPointerInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeMetadataPointerInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeMetadataPointerInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_MINT_DISCRIMINATOR = 0;
function getInitializeMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_MINT_DISCRIMINATOR);
}
function getInitializeMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "mintAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ],
        [
            "freezeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])())
        ]
    ]), (value)=>{
        var _value_freezeAuthority;
        return {
            ...value,
            discriminator: INITIALIZE_MINT_DISCRIMINATOR,
            freezeAuthority: (_value_freezeAuthority = value.freezeAuthority) !== null && _value_freezeAuthority !== void 0 ? _value_freezeAuthority : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["none"])()
        };
    });
}
function getInitializeMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "mintAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ],
        [
            "freezeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])())
        ]
    ]);
}
function getInitializeMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeMintInstructionDataEncoder(), getInitializeMintInstructionDataDecoder());
}
function getInitializeMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_rent;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        rent: {
            value: (_input_rent = input.rent) !== null && _input_rent !== void 0 ? _input_rent : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    if (!accounts.rent.value) {
        accounts.rent.value = "SysvarRent111111111111111111111111111111111";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.rent)
        ],
        programAddress,
        data: getInitializeMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeMintInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            rent: getNextAccount()
        },
        data: getInitializeMintInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_MINT2_DISCRIMINATOR = 20;
function getInitializeMint2DiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_MINT2_DISCRIMINATOR);
}
function getInitializeMint2InstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "mintAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ],
        [
            "freezeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])())
        ]
    ]), (value)=>{
        var _value_freezeAuthority;
        return {
            ...value,
            discriminator: INITIALIZE_MINT2_DISCRIMINATOR,
            freezeAuthority: (_value_freezeAuthority = value.freezeAuthority) !== null && _value_freezeAuthority !== void 0 ? _value_freezeAuthority : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["none"])()
        };
    });
}
function getInitializeMint2InstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "mintAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ],
        [
            "freezeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])())
        ]
    ]);
}
function getInitializeMint2InstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeMint2InstructionDataEncoder(), getInitializeMint2InstructionDataDecoder());
}
function getInitializeMint2Instruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeMint2InstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeMint2Instruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeMint2InstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_MINT_CLOSE_AUTHORITY_DISCRIMINATOR = 25;
function getInitializeMintCloseAuthorityDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_MINT_CLOSE_AUTHORITY_DISCRIMINATOR);
}
function getInitializeMintCloseAuthorityInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "closeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])())
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_MINT_CLOSE_AUTHORITY_DISCRIMINATOR
        }));
}
function getInitializeMintCloseAuthorityInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "closeAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])())
        ]
    ]);
}
function getInitializeMintCloseAuthorityInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeMintCloseAuthorityInstructionDataEncoder(), getInitializeMintCloseAuthorityInstructionDataDecoder());
}
function getInitializeMintCloseAuthorityInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeMintCloseAuthorityInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeMintCloseAuthorityInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeMintCloseAuthorityInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_MULTISIG_DISCRIMINATOR = 2;
function getInitializeMultisigDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_MULTISIG_DISCRIMINATOR);
}
function getInitializeMultisigInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "m",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_MULTISIG_DISCRIMINATOR
        }));
}
function getInitializeMultisigInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "m",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getInitializeMultisigInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeMultisigInstructionDataEncoder(), getInitializeMultisigInstructionDataDecoder());
}
function getInitializeMultisigInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_multisig, _input_rent;
    const originalAccounts = {
        multisig: {
            value: (_input_multisig = input.multisig) !== null && _input_multisig !== void 0 ? _input_multisig : null,
            isWritable: true
        },
        rent: {
            value: (_input_rent = input.rent) !== null && _input_rent !== void 0 ? _input_rent : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    if (!accounts.rent.value) {
        accounts.rent.value = "SysvarRent111111111111111111111111111111111";
    }
    const remainingAccounts = args.signers.map((address)=>({
            address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.multisig),
            getAccountMeta(accounts.rent),
            ...remainingAccounts
        ],
        programAddress,
        data: getInitializeMultisigInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeMultisigInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            multisig: getNextAccount(),
            rent: getNextAccount()
        },
        data: getInitializeMultisigInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_MULTISIG2_DISCRIMINATOR = 19;
function getInitializeMultisig2DiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_MULTISIG2_DISCRIMINATOR);
}
function getInitializeMultisig2InstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "m",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_MULTISIG2_DISCRIMINATOR
        }));
}
function getInitializeMultisig2InstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "m",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getInitializeMultisig2InstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeMultisig2InstructionDataEncoder(), getInitializeMultisig2InstructionDataDecoder());
}
function getInitializeMultisig2Instruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_multisig;
    const originalAccounts = {
        multisig: {
            value: (_input_multisig = input.multisig) !== null && _input_multisig !== void 0 ? _input_multisig : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const remainingAccounts = args.signers.map((address)=>({
            address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.multisig),
            ...remainingAccounts
        ],
        programAddress,
        data: getInitializeMultisig2InstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeMultisig2Instruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            multisig: getNextAccount()
        },
        data: getInitializeMultisig2InstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_NON_TRANSFERABLE_MINT_DISCRIMINATOR = 32;
function getInitializeNonTransferableMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_NON_TRANSFERABLE_MINT_DISCRIMINATOR);
}
function getInitializeNonTransferableMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_NON_TRANSFERABLE_MINT_DISCRIMINATOR
        }));
}
function getInitializeNonTransferableMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getInitializeNonTransferableMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeNonTransferableMintInstructionDataEncoder(), getInitializeNonTransferableMintInstructionDataDecoder());
}
function getInitializeNonTransferableMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeNonTransferableMintInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseInitializeNonTransferableMintInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeNonTransferableMintInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_PAUSABLE_CONFIG_DISCRIMINATOR = 44;
function getInitializePausableConfigDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_PAUSABLE_CONFIG_DISCRIMINATOR);
}
var INITIALIZE_PAUSABLE_CONFIG_PAUSABLE_DISCRIMINATOR = 0;
function getInitializePausableConfigPausableDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_PAUSABLE_CONFIG_PAUSABLE_DISCRIMINATOR);
}
function getInitializePausableConfigInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "pausableDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_PAUSABLE_CONFIG_DISCRIMINATOR,
            pausableDiscriminator: INITIALIZE_PAUSABLE_CONFIG_PAUSABLE_DISCRIMINATOR
        }));
}
function getInitializePausableConfigInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "pausableDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializePausableConfigInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializePausableConfigInstructionDataEncoder(), getInitializePausableConfigInstructionDataDecoder());
}
function getInitializePausableConfigInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializePausableConfigInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializePausableConfigInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializePausableConfigInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_PERMANENT_DELEGATE_DISCRIMINATOR = 35;
function getInitializePermanentDelegateDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_PERMANENT_DELEGATE_DISCRIMINATOR);
}
function getInitializePermanentDelegateInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "delegate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_PERMANENT_DELEGATE_DISCRIMINATOR
        }));
}
function getInitializePermanentDelegateInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "delegate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])()
        ]
    ]);
}
function getInitializePermanentDelegateInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializePermanentDelegateInstructionDataEncoder(), getInitializePermanentDelegateInstructionDataDecoder());
}
function getInitializePermanentDelegateInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializePermanentDelegateInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializePermanentDelegateInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializePermanentDelegateInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR = 43;
function getInitializeScaledUiAmountMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR);
}
var INITIALIZE_SCALED_UI_AMOUNT_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR = 0;
function getInitializeScaledUiAmountMintScaledUiAmountMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_SCALED_UI_AMOUNT_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR);
}
function getInitializeScaledUiAmountMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "scaledUiAmountMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "multiplier",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR,
            scaledUiAmountMintDiscriminator: INITIALIZE_SCALED_UI_AMOUNT_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR
        }));
}
function getInitializeScaledUiAmountMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "scaledUiAmountMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "multiplier",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Decoder"])()
        ]
    ]);
}
function getInitializeScaledUiAmountMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeScaledUiAmountMintInstructionDataEncoder(), getInitializeScaledUiAmountMintInstructionDataDecoder());
}
function getInitializeScaledUiAmountMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeScaledUiAmountMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeScaledUiAmountMintInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeScaledUiAmountMintInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_TOKEN_GROUP_DISCRIMINATOR = new Uint8Array([
    121,
    113,
    108,
    39,
    54,
    51,
    0,
    4
]);
function getInitializeTokenGroupDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(INITIALIZE_TOKEN_GROUP_DISCRIMINATOR);
}
function getInitializeTokenGroupInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "updateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "maxSize",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_TOKEN_GROUP_DISCRIMINATOR
        }));
}
function getInitializeTokenGroupInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "updateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "maxSize",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getInitializeTokenGroupInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeTokenGroupInstructionDataEncoder(), getInitializeTokenGroupInstructionDataDecoder());
}
function getInitializeTokenGroupInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_group, _input_mint, _input_mintAuthority;
    const originalAccounts = {
        group: {
            value: (_input_group = input.group) !== null && _input_group !== void 0 ? _input_group : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        mintAuthority: {
            value: (_input_mintAuthority = input.mintAuthority) !== null && _input_mintAuthority !== void 0 ? _input_mintAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.group),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.mintAuthority)
        ],
        programAddress,
        data: getInitializeTokenGroupInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeTokenGroupInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            group: getNextAccount(),
            mint: getNextAccount(),
            mintAuthority: getNextAccount()
        },
        data: getInitializeTokenGroupInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_TOKEN_GROUP_MEMBER_DISCRIMINATOR = new Uint8Array([
    152,
    32,
    222,
    176,
    223,
    237,
    116,
    134
]);
function getInitializeTokenGroupMemberDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(INITIALIZE_TOKEN_GROUP_MEMBER_DISCRIMINATOR);
}
function getInitializeTokenGroupMemberInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_TOKEN_GROUP_MEMBER_DISCRIMINATOR
        }));
}
function getInitializeTokenGroupMemberInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ]
    ]);
}
function getInitializeTokenGroupMemberInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeTokenGroupMemberInstructionDataEncoder(), getInitializeTokenGroupMemberInstructionDataDecoder());
}
function getInitializeTokenGroupMemberInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_member, _input_memberMint, _input_memberMintAuthority, _input_group, _input_groupUpdateAuthority;
    const originalAccounts = {
        member: {
            value: (_input_member = input.member) !== null && _input_member !== void 0 ? _input_member : null,
            isWritable: true
        },
        memberMint: {
            value: (_input_memberMint = input.memberMint) !== null && _input_memberMint !== void 0 ? _input_memberMint : null,
            isWritable: false
        },
        memberMintAuthority: {
            value: (_input_memberMintAuthority = input.memberMintAuthority) !== null && _input_memberMintAuthority !== void 0 ? _input_memberMintAuthority : null,
            isWritable: false
        },
        group: {
            value: (_input_group = input.group) !== null && _input_group !== void 0 ? _input_group : null,
            isWritable: true
        },
        groupUpdateAuthority: {
            value: (_input_groupUpdateAuthority = input.groupUpdateAuthority) !== null && _input_groupUpdateAuthority !== void 0 ? _input_groupUpdateAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.member),
            getAccountMeta(accounts.memberMint),
            getAccountMeta(accounts.memberMintAuthority),
            getAccountMeta(accounts.group),
            getAccountMeta(accounts.groupUpdateAuthority)
        ],
        programAddress,
        data: getInitializeTokenGroupMemberInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseInitializeTokenGroupMemberInstruction(instruction) {
    if (instruction.accounts.length < 5) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            member: getNextAccount(),
            memberMint: getNextAccount(),
            memberMintAuthority: getNextAccount(),
            group: getNextAccount(),
            groupUpdateAuthority: getNextAccount()
        },
        data: getInitializeTokenGroupMemberInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_TOKEN_METADATA_DISCRIMINATOR = new Uint8Array([
    210,
    225,
    30,
    162,
    88,
    184,
    77,
    141
]);
function getInitializeTokenMetadataDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(INITIALIZE_TOKEN_METADATA_DISCRIMINATOR);
}
function getInitializeTokenMetadataInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "name",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
        ],
        [
            "symbol",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
        ],
        [
            "uri",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_TOKEN_METADATA_DISCRIMINATOR
        }));
}
function getInitializeTokenMetadataInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "name",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
        ],
        [
            "symbol",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
        ],
        [
            "uri",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
        ]
    ]);
}
function getInitializeTokenMetadataInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeTokenMetadataInstructionDataEncoder(), getInitializeTokenMetadataInstructionDataDecoder());
}
function getInitializeTokenMetadataInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_metadata, _input_updateAuthority, _input_mint, _input_mintAuthority;
    const originalAccounts = {
        metadata: {
            value: (_input_metadata = input.metadata) !== null && _input_metadata !== void 0 ? _input_metadata : null,
            isWritable: true
        },
        updateAuthority: {
            value: (_input_updateAuthority = input.updateAuthority) !== null && _input_updateAuthority !== void 0 ? _input_updateAuthority : null,
            isWritable: false
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        mintAuthority: {
            value: (_input_mintAuthority = input.mintAuthority) !== null && _input_mintAuthority !== void 0 ? _input_mintAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.metadata),
            getAccountMeta(accounts.updateAuthority),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.mintAuthority)
        ],
        programAddress,
        data: getInitializeTokenMetadataInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeTokenMetadataInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            metadata: getNextAccount(),
            updateAuthority: getNextAccount(),
            mint: getNextAccount(),
            mintAuthority: getNextAccount()
        },
        data: getInitializeTokenMetadataInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_TRANSFER_FEE_CONFIG_DISCRIMINATOR = 26;
function getInitializeTransferFeeConfigDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_TRANSFER_FEE_CONFIG_DISCRIMINATOR);
}
var INITIALIZE_TRANSFER_FEE_CONFIG_TRANSFER_FEE_DISCRIMINATOR = 0;
function getInitializeTransferFeeConfigTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_TRANSFER_FEE_CONFIG_TRANSFER_FEE_DISCRIMINATOR);
}
function getInitializeTransferFeeConfigInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeConfigAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])())
        ],
        [
            "withdrawWithheldAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])())
        ],
        [
            "transferFeeBasisPoints",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])()
        ],
        [
            "maximumFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_TRANSFER_FEE_CONFIG_DISCRIMINATOR,
            transferFeeDiscriminator: INITIALIZE_TRANSFER_FEE_CONFIG_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getInitializeTransferFeeConfigInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeConfigAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])())
        ],
        [
            "withdrawWithheldAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])())
        ],
        [
            "transferFeeBasisPoints",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])()
        ],
        [
            "maximumFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getInitializeTransferFeeConfigInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeTransferFeeConfigInstructionDataEncoder(), getInitializeTransferFeeConfigInstructionDataDecoder());
}
function getInitializeTransferFeeConfigInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeTransferFeeConfigInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeTransferFeeConfigInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeTransferFeeConfigInstructionDataDecoder().decode(instruction.data)
    };
}
var INITIALIZE_TRANSFER_HOOK_DISCRIMINATOR = 36;
function getInitializeTransferHookDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_TRANSFER_HOOK_DISCRIMINATOR);
}
var INITIALIZE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR = 0;
function getInitializeTransferHookTransferHookDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(INITIALIZE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR);
}
function getInitializeTransferHookInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferHookDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "programId",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: INITIALIZE_TRANSFER_HOOK_DISCRIMINATOR,
            transferHookDiscriminator: INITIALIZE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR
        }));
}
function getInitializeTransferHookInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferHookDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ],
        [
            "programId",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getInitializeTransferHookInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getInitializeTransferHookInstructionDataEncoder(), getInitializeTransferHookInstructionDataDecoder());
}
function getInitializeTransferHookInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getInitializeTransferHookInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseInitializeTransferHookInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getInitializeTransferHookInstructionDataDecoder().decode(instruction.data)
    };
}
var MINT_TO_DISCRIMINATOR = 7;
function getMintToDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(MINT_TO_DISCRIMINATOR);
}
function getMintToInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: MINT_TO_DISCRIMINATOR
        }));
}
function getMintToInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getMintToInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getMintToInstructionDataEncoder(), getMintToInstructionDataDecoder());
}
function getMintToInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_token, _input_mintAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        mintAuthority: {
            value: (_input_mintAuthority = input.mintAuthority) !== null && _input_mintAuthority !== void 0 ? _input_mintAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.mintAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getMintToInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseMintToInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            token: getNextAccount(),
            mintAuthority: getNextAccount()
        },
        data: getMintToInstructionDataDecoder().decode(instruction.data)
    };
}
var MINT_TO_CHECKED_DISCRIMINATOR = 14;
function getMintToCheckedDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(MINT_TO_CHECKED_DISCRIMINATOR);
}
function getMintToCheckedInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: MINT_TO_CHECKED_DISCRIMINATOR
        }));
}
function getMintToCheckedInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getMintToCheckedInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getMintToCheckedInstructionDataEncoder(), getMintToCheckedInstructionDataDecoder());
}
function getMintToCheckedInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_token, _input_mintAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        mintAuthority: {
            value: (_input_mintAuthority = input.mintAuthority) !== null && _input_mintAuthority !== void 0 ? _input_mintAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.mintAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getMintToCheckedInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseMintToCheckedInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            token: getNextAccount(),
            mintAuthority: getNextAccount()
        },
        data: getMintToCheckedInstructionDataDecoder().decode(instruction.data)
    };
}
var PAUSE_DISCRIMINATOR = 44;
function getPauseDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(PAUSE_DISCRIMINATOR);
}
var PAUSE_PAUSABLE_DISCRIMINATOR = 1;
function getPausePausableDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(PAUSE_PAUSABLE_DISCRIMINATOR);
}
function getPauseInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "pausableDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: PAUSE_DISCRIMINATOR,
            pausableDiscriminator: PAUSE_PAUSABLE_DISCRIMINATOR
        }));
}
function getPauseInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "pausableDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getPauseInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getPauseInstructionDataEncoder(), getPauseInstructionDataDecoder());
}
function getPauseInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority)
        ],
        programAddress,
        data: getPauseInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parsePauseInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getPauseInstructionDataDecoder().decode(instruction.data)
    };
}
var REALLOCATE_DISCRIMINATOR = 29;
function getReallocateDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(REALLOCATE_DISCRIMINATOR);
}
function getReallocateInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "newExtensionTypes",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayEncoder"])(getExtensionTypeEncoder(), {
                size: "remainder"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: REALLOCATE_DISCRIMINATOR
        }));
}
function getReallocateInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "newExtensionTypes",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayDecoder"])(getExtensionTypeDecoder(), {
                size: "remainder"
            })
        ]
    ]);
}
function getReallocateInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getReallocateInstructionDataEncoder(), getReallocateInstructionDataDecoder());
}
function getReallocateInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_token, _input_payer, _input_systemProgram, _input_owner;
    const originalAccounts = {
        token: {
            value: (_input_token = input.token) !== null && _input_token !== void 0 ? _input_token : null,
            isWritable: true
        },
        payer: {
            value: (_input_payer = input.payer) !== null && _input_payer !== void 0 ? _input_payer : null,
            isWritable: true
        },
        systemProgram: {
            value: (_input_systemProgram = input.systemProgram) !== null && _input_systemProgram !== void 0 ? _input_systemProgram : null,
            isWritable: false
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    if (!accounts.systemProgram.value) {
        accounts.systemProgram.value = "11111111111111111111111111111111";
    }
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.token),
            getAccountMeta(accounts.payer),
            getAccountMeta(accounts.systemProgram),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getReallocateInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseReallocateInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            token: getNextAccount(),
            payer: getNextAccount(),
            systemProgram: getNextAccount(),
            owner: getNextAccount()
        },
        data: getReallocateInstructionDataDecoder().decode(instruction.data)
    };
}
var RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR = 2;
function getRecoverNestedAssociatedTokenDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR);
}
function getRecoverNestedAssociatedTokenInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR
        }));
}
function getRecoverNestedAssociatedTokenInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getRecoverNestedAssociatedTokenInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getRecoverNestedAssociatedTokenInstructionDataEncoder(), getRecoverNestedAssociatedTokenInstructionDataDecoder());
}
async function getRecoverNestedAssociatedTokenInstructionAsync(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : ASSOCIATED_TOKEN_PROGRAM_ADDRESS;
    var _input_nestedAssociatedAccountAddress, _input_nestedTokenMintAddress, _input_destinationAssociatedAccountAddress, _input_ownerAssociatedAccountAddress, _input_ownerTokenMintAddress, _input_walletAddress, _input_tokenProgram;
    const originalAccounts = {
        nestedAssociatedAccountAddress: {
            value: (_input_nestedAssociatedAccountAddress = input.nestedAssociatedAccountAddress) !== null && _input_nestedAssociatedAccountAddress !== void 0 ? _input_nestedAssociatedAccountAddress : null,
            isWritable: true
        },
        nestedTokenMintAddress: {
            value: (_input_nestedTokenMintAddress = input.nestedTokenMintAddress) !== null && _input_nestedTokenMintAddress !== void 0 ? _input_nestedTokenMintAddress : null,
            isWritable: false
        },
        destinationAssociatedAccountAddress: {
            value: (_input_destinationAssociatedAccountAddress = input.destinationAssociatedAccountAddress) !== null && _input_destinationAssociatedAccountAddress !== void 0 ? _input_destinationAssociatedAccountAddress : null,
            isWritable: true
        },
        ownerAssociatedAccountAddress: {
            value: (_input_ownerAssociatedAccountAddress = input.ownerAssociatedAccountAddress) !== null && _input_ownerAssociatedAccountAddress !== void 0 ? _input_ownerAssociatedAccountAddress : null,
            isWritable: false
        },
        ownerTokenMintAddress: {
            value: (_input_ownerTokenMintAddress = input.ownerTokenMintAddress) !== null && _input_ownerTokenMintAddress !== void 0 ? _input_ownerTokenMintAddress : null,
            isWritable: false
        },
        walletAddress: {
            value: (_input_walletAddress = input.walletAddress) !== null && _input_walletAddress !== void 0 ? _input_walletAddress : null,
            isWritable: true
        },
        tokenProgram: {
            value: (_input_tokenProgram = input.tokenProgram) !== null && _input_tokenProgram !== void 0 ? _input_tokenProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.tokenProgram.value) {
        accounts.tokenProgram.value = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
    }
    if (!accounts.ownerAssociatedAccountAddress.value) {
        accounts.ownerAssociatedAccountAddress.value = await findAssociatedTokenPda({
            owner: expectAddress(accounts.walletAddress.value),
            tokenProgram: expectAddress(accounts.tokenProgram.value),
            mint: expectAddress(accounts.ownerTokenMintAddress.value)
        });
    }
    if (!accounts.nestedAssociatedAccountAddress.value) {
        accounts.nestedAssociatedAccountAddress.value = await findAssociatedTokenPda({
            owner: expectAddress(accounts.ownerAssociatedAccountAddress.value),
            tokenProgram: expectAddress(accounts.tokenProgram.value),
            mint: expectAddress(accounts.nestedTokenMintAddress.value)
        });
    }
    if (!accounts.destinationAssociatedAccountAddress.value) {
        accounts.destinationAssociatedAccountAddress.value = await findAssociatedTokenPda({
            owner: expectAddress(accounts.walletAddress.value),
            tokenProgram: expectAddress(accounts.tokenProgram.value),
            mint: expectAddress(accounts.nestedTokenMintAddress.value)
        });
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.nestedAssociatedAccountAddress),
            getAccountMeta(accounts.nestedTokenMintAddress),
            getAccountMeta(accounts.destinationAssociatedAccountAddress),
            getAccountMeta(accounts.ownerAssociatedAccountAddress),
            getAccountMeta(accounts.ownerTokenMintAddress),
            getAccountMeta(accounts.walletAddress),
            getAccountMeta(accounts.tokenProgram)
        ],
        programAddress,
        data: getRecoverNestedAssociatedTokenInstructionDataEncoder().encode({})
    };
    return instruction;
}
function getRecoverNestedAssociatedTokenInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : ASSOCIATED_TOKEN_PROGRAM_ADDRESS;
    var _input_nestedAssociatedAccountAddress, _input_nestedTokenMintAddress, _input_destinationAssociatedAccountAddress, _input_ownerAssociatedAccountAddress, _input_ownerTokenMintAddress, _input_walletAddress, _input_tokenProgram;
    const originalAccounts = {
        nestedAssociatedAccountAddress: {
            value: (_input_nestedAssociatedAccountAddress = input.nestedAssociatedAccountAddress) !== null && _input_nestedAssociatedAccountAddress !== void 0 ? _input_nestedAssociatedAccountAddress : null,
            isWritable: true
        },
        nestedTokenMintAddress: {
            value: (_input_nestedTokenMintAddress = input.nestedTokenMintAddress) !== null && _input_nestedTokenMintAddress !== void 0 ? _input_nestedTokenMintAddress : null,
            isWritable: false
        },
        destinationAssociatedAccountAddress: {
            value: (_input_destinationAssociatedAccountAddress = input.destinationAssociatedAccountAddress) !== null && _input_destinationAssociatedAccountAddress !== void 0 ? _input_destinationAssociatedAccountAddress : null,
            isWritable: true
        },
        ownerAssociatedAccountAddress: {
            value: (_input_ownerAssociatedAccountAddress = input.ownerAssociatedAccountAddress) !== null && _input_ownerAssociatedAccountAddress !== void 0 ? _input_ownerAssociatedAccountAddress : null,
            isWritable: false
        },
        ownerTokenMintAddress: {
            value: (_input_ownerTokenMintAddress = input.ownerTokenMintAddress) !== null && _input_ownerTokenMintAddress !== void 0 ? _input_ownerTokenMintAddress : null,
            isWritable: false
        },
        walletAddress: {
            value: (_input_walletAddress = input.walletAddress) !== null && _input_walletAddress !== void 0 ? _input_walletAddress : null,
            isWritable: true
        },
        tokenProgram: {
            value: (_input_tokenProgram = input.tokenProgram) !== null && _input_tokenProgram !== void 0 ? _input_tokenProgram : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    if (!accounts.tokenProgram.value) {
        accounts.tokenProgram.value = "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";
    }
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.nestedAssociatedAccountAddress),
            getAccountMeta(accounts.nestedTokenMintAddress),
            getAccountMeta(accounts.destinationAssociatedAccountAddress),
            getAccountMeta(accounts.ownerAssociatedAccountAddress),
            getAccountMeta(accounts.ownerTokenMintAddress),
            getAccountMeta(accounts.walletAddress),
            getAccountMeta(accounts.tokenProgram)
        ],
        programAddress,
        data: getRecoverNestedAssociatedTokenInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseRecoverNestedAssociatedTokenInstruction(instruction) {
    if (instruction.accounts.length < 7) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            nestedAssociatedAccountAddress: getNextAccount(),
            nestedTokenMintAddress: getNextAccount(),
            destinationAssociatedAccountAddress: getNextAccount(),
            ownerAssociatedAccountAddress: getNextAccount(),
            ownerTokenMintAddress: getNextAccount(),
            walletAddress: getNextAccount(),
            tokenProgram: getNextAccount()
        },
        data: getRecoverNestedAssociatedTokenInstructionDataDecoder().decode(instruction.data)
    };
}
var REMOVE_TOKEN_METADATA_KEY_DISCRIMINATOR = new Uint8Array([
    234,
    18,
    32,
    56,
    89,
    141,
    37,
    181
]);
function getRemoveTokenMetadataKeyDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(REMOVE_TOKEN_METADATA_KEY_DISCRIMINATOR);
}
function getRemoveTokenMetadataKeyInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "idempotent",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
        ],
        [
            "key",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
        ]
    ]), (value)=>{
        var _value_idempotent;
        return {
            ...value,
            discriminator: REMOVE_TOKEN_METADATA_KEY_DISCRIMINATOR,
            idempotent: (_value_idempotent = value.idempotent) !== null && _value_idempotent !== void 0 ? _value_idempotent : false
        };
    });
}
function getRemoveTokenMetadataKeyInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "idempotent",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
        ],
        [
            "key",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
        ]
    ]);
}
function getRemoveTokenMetadataKeyInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getRemoveTokenMetadataKeyInstructionDataEncoder(), getRemoveTokenMetadataKeyInstructionDataDecoder());
}
function getRemoveTokenMetadataKeyInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_metadata, _input_updateAuthority;
    const originalAccounts = {
        metadata: {
            value: (_input_metadata = input.metadata) !== null && _input_metadata !== void 0 ? _input_metadata : null,
            isWritable: true
        },
        updateAuthority: {
            value: (_input_updateAuthority = input.updateAuthority) !== null && _input_updateAuthority !== void 0 ? _input_updateAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.metadata),
            getAccountMeta(accounts.updateAuthority)
        ],
        programAddress,
        data: getRemoveTokenMetadataKeyInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseRemoveTokenMetadataKeyInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            metadata: getNextAccount(),
            updateAuthority: getNextAccount()
        },
        data: getRemoveTokenMetadataKeyInstructionDataDecoder().decode(instruction.data)
    };
}
var RESUME_DISCRIMINATOR = 44;
function getResumeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(RESUME_DISCRIMINATOR);
}
var RESUME_PAUSABLE_DISCRIMINATOR = 2;
function getResumePausableDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(RESUME_PAUSABLE_DISCRIMINATOR);
}
function getResumeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "pausableDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: RESUME_DISCRIMINATOR,
            pausableDiscriminator: RESUME_PAUSABLE_DISCRIMINATOR
        }));
}
function getResumeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "pausableDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getResumeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getResumeInstructionDataEncoder(), getResumeInstructionDataDecoder());
}
function getResumeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority)
        ],
        programAddress,
        data: getResumeInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseResumeInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getResumeInstructionDataDecoder().decode(instruction.data)
    };
}
var REVOKE_DISCRIMINATOR = 5;
function getRevokeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(REVOKE_DISCRIMINATOR);
}
function getRevokeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: REVOKE_DISCRIMINATOR
        }));
}
function getRevokeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getRevokeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getRevokeInstructionDataEncoder(), getRevokeInstructionDataDecoder());
}
function getRevokeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_source, _input_owner;
    const originalAccounts = {
        source: {
            value: (_input_source = input.source) !== null && _input_source !== void 0 ? _input_source : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.source),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getRevokeInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseRevokeInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            source: getNextAccount(),
            owner: getNextAccount()
        },
        data: getRevokeInstructionDataDecoder().decode(instruction.data)
    };
}
var SET_AUTHORITY_DISCRIMINATOR = 6;
function getSetAuthorityDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(SET_AUTHORITY_DISCRIMINATOR);
}
function getSetAuthorityInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "authorityType",
            getAuthorityTypeEncoder()
        ],
        [
            "newAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])())
        ]
    ]), (value)=>({
            ...value,
            discriminator: SET_AUTHORITY_DISCRIMINATOR
        }));
}
function getSetAuthorityInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "authorityType",
            getAuthorityTypeDecoder()
        ],
        [
            "newAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])())
        ]
    ]);
}
function getSetAuthorityInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getSetAuthorityInstructionDataEncoder(), getSetAuthorityInstructionDataDecoder());
}
function getSetAuthorityInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_owned, _input_owner;
    const originalAccounts = {
        owned: {
            value: (_input_owned = input.owned) !== null && _input_owned !== void 0 ? _input_owned : null,
            isWritable: true
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.owned),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getSetAuthorityInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseSetAuthorityInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            owned: getNextAccount(),
            owner: getNextAccount()
        },
        data: getSetAuthorityInstructionDataDecoder().decode(instruction.data)
    };
}
var SET_TRANSFER_FEE_DISCRIMINATOR = 26;
function getSetTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(SET_TRANSFER_FEE_DISCRIMINATOR);
}
var SET_TRANSFER_FEE_TRANSFER_FEE_DISCRIMINATOR = 5;
function getSetTransferFeeTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(SET_TRANSFER_FEE_TRANSFER_FEE_DISCRIMINATOR);
}
function getSetTransferFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeBasisPoints",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Encoder"])()
        ],
        [
            "maximumFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: SET_TRANSFER_FEE_DISCRIMINATOR,
            transferFeeDiscriminator: SET_TRANSFER_FEE_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getSetTransferFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeBasisPoints",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU16Decoder"])()
        ],
        [
            "maximumFee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getSetTransferFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getSetTransferFeeInstructionDataEncoder(), getSetTransferFeeInstructionDataDecoder());
}
function getSetTransferFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_transferFeeConfigAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        transferFeeConfigAuthority: {
            value: (_input_transferFeeConfigAuthority = input.transferFeeConfigAuthority) !== null && _input_transferFeeConfigAuthority !== void 0 ? _input_transferFeeConfigAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.transferFeeConfigAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getSetTransferFeeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseSetTransferFeeInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            transferFeeConfigAuthority: getNextAccount()
        },
        data: getSetTransferFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var SYNC_NATIVE_DISCRIMINATOR = 17;
function getSyncNativeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(SYNC_NATIVE_DISCRIMINATOR);
}
function getSyncNativeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: SYNC_NATIVE_DISCRIMINATOR
        }));
}
function getSyncNativeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getSyncNativeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getSyncNativeInstructionDataEncoder(), getSyncNativeInstructionDataDecoder());
}
function getSyncNativeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account)
        ],
        programAddress,
        data: getSyncNativeInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseSyncNativeInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount()
        },
        data: getSyncNativeInstructionDataDecoder().decode(instruction.data)
    };
}
var THAW_ACCOUNT_DISCRIMINATOR = 11;
function getThawAccountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(THAW_ACCOUNT_DISCRIMINATOR);
}
function getThawAccountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: THAW_ACCOUNT_DISCRIMINATOR
        }));
}
function getThawAccountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getThawAccountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getThawAccountInstructionDataEncoder(), getThawAccountInstructionDataDecoder());
}
function getThawAccountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_account, _input_mint, _input_owner;
    const originalAccounts = {
        account: {
            value: (_input_account = input.account) !== null && _input_account !== void 0 ? _input_account : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        owner: {
            value: (_input_owner = input.owner) !== null && _input_owner !== void 0 ? _input_owner : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.account),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.owner),
            ...remainingAccounts
        ],
        programAddress,
        data: getThawAccountInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseThawAccountInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            account: getNextAccount(),
            mint: getNextAccount(),
            owner: getNextAccount()
        },
        data: getThawAccountInstructionDataDecoder().decode(instruction.data)
    };
}
var TRANSFER_DISCRIMINATOR = 3;
function getTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(TRANSFER_DISCRIMINATOR);
}
function getTransferInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: TRANSFER_DISCRIMINATOR
        }));
}
function getTransferInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getTransferInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getTransferInstructionDataEncoder(), getTransferInstructionDataDecoder());
}
function getTransferInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_source, _input_destination, _input_authority;
    const originalAccounts = {
        source: {
            value: (_input_source = input.source) !== null && _input_source !== void 0 ? _input_source : null,
            isWritable: true
        },
        destination: {
            value: (_input_destination = input.destination) !== null && _input_destination !== void 0 ? _input_destination : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.source),
            getAccountMeta(accounts.destination),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getTransferInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseTransferInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            source: getNextAccount(),
            destination: getNextAccount(),
            authority: getNextAccount()
        },
        data: getTransferInstructionDataDecoder().decode(instruction.data)
    };
}
var TRANSFER_CHECKED_DISCRIMINATOR = 12;
function getTransferCheckedDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(TRANSFER_CHECKED_DISCRIMINATOR);
}
function getTransferCheckedInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: TRANSFER_CHECKED_DISCRIMINATOR
        }));
}
function getTransferCheckedInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getTransferCheckedInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getTransferCheckedInstructionDataEncoder(), getTransferCheckedInstructionDataDecoder());
}
function getTransferCheckedInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_source, _input_mint, _input_destination, _input_authority;
    const originalAccounts = {
        source: {
            value: (_input_source = input.source) !== null && _input_source !== void 0 ? _input_source : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        destination: {
            value: (_input_destination = input.destination) !== null && _input_destination !== void 0 ? _input_destination : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.source),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.destination),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getTransferCheckedInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseTransferCheckedInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            source: getNextAccount(),
            mint: getNextAccount(),
            destination: getNextAccount(),
            authority: getNextAccount()
        },
        data: getTransferCheckedInstructionDataDecoder().decode(instruction.data)
    };
}
var TRANSFER_CHECKED_WITH_FEE_DISCRIMINATOR = 26;
function getTransferCheckedWithFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(TRANSFER_CHECKED_WITH_FEE_DISCRIMINATOR);
}
var TRANSFER_CHECKED_WITH_FEE_TRANSFER_FEE_DISCRIMINATOR = 1;
function getTransferCheckedWithFeeTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(TRANSFER_CHECKED_WITH_FEE_TRANSFER_FEE_DISCRIMINATOR);
}
function getTransferCheckedWithFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "fee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: TRANSFER_CHECKED_WITH_FEE_DISCRIMINATOR,
            transferFeeDiscriminator: TRANSFER_CHECKED_WITH_FEE_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getTransferCheckedWithFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "amount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ],
        [
            "decimals",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "fee",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getTransferCheckedWithFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getTransferCheckedWithFeeInstructionDataEncoder(), getTransferCheckedWithFeeInstructionDataDecoder());
}
function getTransferCheckedWithFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_source, _input_mint, _input_destination, _input_authority;
    const originalAccounts = {
        source: {
            value: (_input_source = input.source) !== null && _input_source !== void 0 ? _input_source : null,
            isWritable: true
        },
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        destination: {
            value: (_input_destination = input.destination) !== null && _input_destination !== void 0 ? _input_destination : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.source),
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.destination),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getTransferCheckedWithFeeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseTransferCheckedWithFeeInstruction(instruction) {
    if (instruction.accounts.length < 4) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            source: getNextAccount(),
            mint: getNextAccount(),
            destination: getNextAccount(),
            authority: getNextAccount()
        },
        data: getTransferCheckedWithFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR = 24;
function getUiAmountToAmountDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR);
}
function getUiAmountToAmountInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "uiAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR
        }));
}
function getUiAmountToAmountInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "uiAmount",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])()
        ]
    ]);
}
function getUiAmountToAmountInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUiAmountToAmountInstructionDataEncoder(), getUiAmountToAmountInstructionDataDecoder());
}
function getUiAmountToAmountInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint)
        ],
        programAddress,
        data: getUiAmountToAmountInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUiAmountToAmountInstruction(instruction) {
    if (instruction.accounts.length < 1) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount()
        },
        data: getUiAmountToAmountInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR = 27;
function getUpdateConfidentialTransferMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR);
}
var UPDATE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR = 1;
function getUpdateConfidentialTransferMintConfidentialTransferDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR);
}
function getUpdateConfidentialTransferMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "autoApproveNewAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanEncoder"])()
        ],
        [
            "auditorElgamalPubkey",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_CONFIDENTIAL_TRANSFER_MINT_DISCRIMINATOR,
            confidentialTransferDiscriminator: UPDATE_CONFIDENTIAL_TRANSFER_MINT_CONFIDENTIAL_TRANSFER_DISCRIMINATOR
        }));
}
function getUpdateConfidentialTransferMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "autoApproveNewAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBooleanDecoder"])()
        ],
        [
            "auditorElgamalPubkey",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateConfidentialTransferMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateConfidentialTransferMintInstructionDataEncoder(), getUpdateConfidentialTransferMintInstructionDataDecoder());
}
function getUpdateConfidentialTransferMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority)
        ],
        programAddress,
        data: getUpdateConfidentialTransferMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateConfidentialTransferMintInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getUpdateConfidentialTransferMintInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR = 28;
function getUpdateDefaultAccountStateDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR);
}
var UPDATE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR = 1;
function getUpdateDefaultAccountStateDefaultAccountStateDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR);
}
function getUpdateDefaultAccountStateInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "defaultAccountStateDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "state",
            getAccountStateEncoder()
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR,
            defaultAccountStateDiscriminator: UPDATE_DEFAULT_ACCOUNT_STATE_DEFAULT_ACCOUNT_STATE_DISCRIMINATOR
        }));
}
function getUpdateDefaultAccountStateInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "defaultAccountStateDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "state",
            getAccountStateDecoder()
        ]
    ]);
}
function getUpdateDefaultAccountStateInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateDefaultAccountStateInstructionDataEncoder(), getUpdateDefaultAccountStateInstructionDataDecoder());
}
function getUpdateDefaultAccountStateInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_freezeAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        freezeAuthority: {
            value: (_input_freezeAuthority = input.freezeAuthority) !== null && _input_freezeAuthority !== void 0 ? _input_freezeAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.freezeAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateDefaultAccountStateInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateDefaultAccountStateInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            freezeAuthority: getNextAccount()
        },
        data: getUpdateDefaultAccountStateInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_GROUP_MEMBER_POINTER_DISCRIMINATOR = 41;
function getUpdateGroupMemberPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_GROUP_MEMBER_POINTER_DISCRIMINATOR);
}
var UPDATE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR = 1;
function getUpdateGroupMemberPointerGroupMemberPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR);
}
function getUpdateGroupMemberPointerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "groupMemberPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "memberAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_GROUP_MEMBER_POINTER_DISCRIMINATOR,
            groupMemberPointerDiscriminator: UPDATE_GROUP_MEMBER_POINTER_GROUP_MEMBER_POINTER_DISCRIMINATOR
        }));
}
function getUpdateGroupMemberPointerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "groupMemberPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "memberAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateGroupMemberPointerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateGroupMemberPointerInstructionDataEncoder(), getUpdateGroupMemberPointerInstructionDataDecoder());
}
function getUpdateGroupMemberPointerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_groupMemberPointerAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        groupMemberPointerAuthority: {
            value: (_input_groupMemberPointerAuthority = input.groupMemberPointerAuthority) !== null && _input_groupMemberPointerAuthority !== void 0 ? _input_groupMemberPointerAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.groupMemberPointerAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateGroupMemberPointerInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateGroupMemberPointerInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            groupMemberPointerAuthority: getNextAccount()
        },
        data: getUpdateGroupMemberPointerInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_GROUP_POINTER_DISCRIMINATOR = 40;
function getUpdateGroupPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_GROUP_POINTER_DISCRIMINATOR);
}
var UPDATE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR = 1;
function getUpdateGroupPointerGroupPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR);
}
function getUpdateGroupPointerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "groupPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "groupAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_GROUP_POINTER_DISCRIMINATOR,
            groupPointerDiscriminator: UPDATE_GROUP_POINTER_GROUP_POINTER_DISCRIMINATOR
        }));
}
function getUpdateGroupPointerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "groupPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "groupAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateGroupPointerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateGroupPointerInstructionDataEncoder(), getUpdateGroupPointerInstructionDataDecoder());
}
function getUpdateGroupPointerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_groupPointerAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        groupPointerAuthority: {
            value: (_input_groupPointerAuthority = input.groupPointerAuthority) !== null && _input_groupPointerAuthority !== void 0 ? _input_groupPointerAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.groupPointerAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateGroupPointerInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateGroupPointerInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            groupPointerAuthority: getNextAccount()
        },
        data: getUpdateGroupPointerInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_METADATA_POINTER_DISCRIMINATOR = 39;
function getUpdateMetadataPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_METADATA_POINTER_DISCRIMINATOR);
}
var UPDATE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR = 1;
function getUpdateMetadataPointerMetadataPointerDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR);
}
function getUpdateMetadataPointerInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "metadataPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "metadataAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_METADATA_POINTER_DISCRIMINATOR,
            metadataPointerDiscriminator: UPDATE_METADATA_POINTER_METADATA_POINTER_DISCRIMINATOR
        }));
}
function getUpdateMetadataPointerInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "metadataPointerDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "metadataAddress",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateMetadataPointerInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateMetadataPointerInstructionDataEncoder(), getUpdateMetadataPointerInstructionDataDecoder());
}
function getUpdateMetadataPointerInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_metadataPointerAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        metadataPointerAuthority: {
            value: (_input_metadataPointerAuthority = input.metadataPointerAuthority) !== null && _input_metadataPointerAuthority !== void 0 ? _input_metadataPointerAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.metadataPointerAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateMetadataPointerInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateMetadataPointerInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            metadataPointerAuthority: getNextAccount()
        },
        data: getUpdateMetadataPointerInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_MULTIPLIER_SCALED_UI_MINT_DISCRIMINATOR = 43;
function getUpdateMultiplierScaledUiMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_MULTIPLIER_SCALED_UI_MINT_DISCRIMINATOR);
}
var UPDATE_MULTIPLIER_SCALED_UI_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR = 1;
function getUpdateMultiplierScaledUiMintScaledUiAmountMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_MULTIPLIER_SCALED_UI_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR);
}
function getUpdateMultiplierScaledUiMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "scaledUiAmountMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "multiplier",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Encoder"])()
        ],
        [
            "effectiveTimestamp",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_MULTIPLIER_SCALED_UI_MINT_DISCRIMINATOR,
            scaledUiAmountMintDiscriminator: UPDATE_MULTIPLIER_SCALED_UI_MINT_SCALED_UI_AMOUNT_MINT_DISCRIMINATOR
        }));
}
function getUpdateMultiplierScaledUiMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "scaledUiAmountMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "multiplier",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getF64Decoder"])()
        ],
        [
            "effectiveTimestamp",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI64Decoder"])()
        ]
    ]);
}
function getUpdateMultiplierScaledUiMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateMultiplierScaledUiMintInstructionDataEncoder(), getUpdateMultiplierScaledUiMintInstructionDataDecoder());
}
function getUpdateMultiplierScaledUiMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateMultiplierScaledUiMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateMultiplierScaledUiMintInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getUpdateMultiplierScaledUiMintInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_RATE_INTEREST_BEARING_MINT_DISCRIMINATOR = 33;
function getUpdateRateInterestBearingMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_RATE_INTEREST_BEARING_MINT_DISCRIMINATOR);
}
var UPDATE_RATE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR = 1;
function getUpdateRateInterestBearingMintInterestBearingMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_RATE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR);
}
function getUpdateRateInterestBearingMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "interestBearingMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "rate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_RATE_INTEREST_BEARING_MINT_DISCRIMINATOR,
            interestBearingMintDiscriminator: UPDATE_RATE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR
        }));
}
function getUpdateRateInterestBearingMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "interestBearingMintDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "rate",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI16Decoder"])()
        ]
    ]);
}
function getUpdateRateInterestBearingMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateRateInterestBearingMintInstructionDataEncoder(), getUpdateRateInterestBearingMintInstructionDataDecoder());
}
function getUpdateRateInterestBearingMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_rateAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        rateAuthority: {
            value: (_input_rateAuthority = input.rateAuthority) !== null && _input_rateAuthority !== void 0 ? _input_rateAuthority : null,
            isWritable: true
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.rateAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateRateInterestBearingMintInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateRateInterestBearingMintInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            rateAuthority: getNextAccount()
        },
        data: getUpdateRateInterestBearingMintInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_TOKEN_GROUP_MAX_SIZE_DISCRIMINATOR = new Uint8Array([
    108,
    37,
    171,
    143,
    248,
    30,
    18,
    110
]);
function getUpdateTokenGroupMaxSizeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(UPDATE_TOKEN_GROUP_MAX_SIZE_DISCRIMINATOR);
}
function getUpdateTokenGroupMaxSizeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "maxSize",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_TOKEN_GROUP_MAX_SIZE_DISCRIMINATOR
        }));
}
function getUpdateTokenGroupMaxSizeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "maxSize",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU64Decoder"])()
        ]
    ]);
}
function getUpdateTokenGroupMaxSizeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateTokenGroupMaxSizeInstructionDataEncoder(), getUpdateTokenGroupMaxSizeInstructionDataDecoder());
}
function getUpdateTokenGroupMaxSizeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_group, _input_updateAuthority;
    const originalAccounts = {
        group: {
            value: (_input_group = input.group) !== null && _input_group !== void 0 ? _input_group : null,
            isWritable: true
        },
        updateAuthority: {
            value: (_input_updateAuthority = input.updateAuthority) !== null && _input_updateAuthority !== void 0 ? _input_updateAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.group),
            getAccountMeta(accounts.updateAuthority)
        ],
        programAddress,
        data: getUpdateTokenGroupMaxSizeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateTokenGroupMaxSizeInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            group: getNextAccount(),
            updateAuthority: getNextAccount()
        },
        data: getUpdateTokenGroupMaxSizeInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_TOKEN_GROUP_UPDATE_AUTHORITY_DISCRIMINATOR = new Uint8Array([
    161,
    105,
    88,
    1,
    237,
    221,
    216,
    203
]);
function getUpdateTokenGroupUpdateAuthorityDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(UPDATE_TOKEN_GROUP_UPDATE_AUTHORITY_DISCRIMINATOR);
}
function getUpdateTokenGroupUpdateAuthorityInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "newUpdateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_TOKEN_GROUP_UPDATE_AUTHORITY_DISCRIMINATOR
        }));
}
function getUpdateTokenGroupUpdateAuthorityInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "newUpdateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateTokenGroupUpdateAuthorityInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateTokenGroupUpdateAuthorityInstructionDataEncoder(), getUpdateTokenGroupUpdateAuthorityInstructionDataDecoder());
}
function getUpdateTokenGroupUpdateAuthorityInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_group, _input_updateAuthority;
    const originalAccounts = {
        group: {
            value: (_input_group = input.group) !== null && _input_group !== void 0 ? _input_group : null,
            isWritable: true
        },
        updateAuthority: {
            value: (_input_updateAuthority = input.updateAuthority) !== null && _input_updateAuthority !== void 0 ? _input_updateAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.group),
            getAccountMeta(accounts.updateAuthority)
        ],
        programAddress,
        data: getUpdateTokenGroupUpdateAuthorityInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateTokenGroupUpdateAuthorityInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            group: getNextAccount(),
            updateAuthority: getNextAccount()
        },
        data: getUpdateTokenGroupUpdateAuthorityInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_TOKEN_METADATA_FIELD_DISCRIMINATOR = new Uint8Array([
    221,
    233,
    49,
    45,
    181,
    202,
    220,
    200
]);
function getUpdateTokenMetadataFieldDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(UPDATE_TOKEN_METADATA_FIELD_DISCRIMINATOR);
}
function getUpdateTokenMetadataFieldInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "field",
            getTokenMetadataFieldEncoder()
        ],
        [
            "value",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEncoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Encoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Encoder"])())
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_TOKEN_METADATA_FIELD_DISCRIMINATOR
        }));
}
function getUpdateTokenMetadataFieldInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "field",
            getTokenMetadataFieldDecoder()
        ],
        [
            "value",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addDecoderSizePrefix"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$strings$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUtf8Decoder"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU32Decoder"])())
        ]
    ]);
}
function getUpdateTokenMetadataFieldInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateTokenMetadataFieldInstructionDataEncoder(), getUpdateTokenMetadataFieldInstructionDataDecoder());
}
function getUpdateTokenMetadataFieldInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_metadata, _input_updateAuthority;
    const originalAccounts = {
        metadata: {
            value: (_input_metadata = input.metadata) !== null && _input_metadata !== void 0 ? _input_metadata : null,
            isWritable: true
        },
        updateAuthority: {
            value: (_input_updateAuthority = input.updateAuthority) !== null && _input_updateAuthority !== void 0 ? _input_updateAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.metadata),
            getAccountMeta(accounts.updateAuthority)
        ],
        programAddress,
        data: getUpdateTokenMetadataFieldInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateTokenMetadataFieldInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            metadata: getNextAccount(),
            updateAuthority: getNextAccount()
        },
        data: getUpdateTokenMetadataFieldInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_TOKEN_METADATA_UPDATE_AUTHORITY_DISCRIMINATOR = new Uint8Array([
    215,
    228,
    166,
    228,
    84,
    100,
    86,
    123
]);
function getUpdateTokenMetadataUpdateAuthorityDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])().encode(UPDATE_TOKEN_METADATA_UPDATE_AUTHORITY_DISCRIMINATOR);
}
function getUpdateTokenMetadataUpdateAuthorityInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesEncoder"])()
        ],
        [
            "newUpdateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_TOKEN_METADATA_UPDATE_AUTHORITY_DISCRIMINATOR
        }));
}
function getUpdateTokenMetadataUpdateAuthorityInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBytesDecoder"])()
        ],
        [
            "newUpdateAuthority",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateTokenMetadataUpdateAuthorityInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateTokenMetadataUpdateAuthorityInstructionDataEncoder(), getUpdateTokenMetadataUpdateAuthorityInstructionDataDecoder());
}
function getUpdateTokenMetadataUpdateAuthorityInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_metadata, _input_updateAuthority;
    const originalAccounts = {
        metadata: {
            value: (_input_metadata = input.metadata) !== null && _input_metadata !== void 0 ? _input_metadata : null,
            isWritable: true
        },
        updateAuthority: {
            value: (_input_updateAuthority = input.updateAuthority) !== null && _input_updateAuthority !== void 0 ? _input_updateAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.metadata),
            getAccountMeta(accounts.updateAuthority)
        ],
        programAddress,
        data: getUpdateTokenMetadataUpdateAuthorityInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateTokenMetadataUpdateAuthorityInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            metadata: getNextAccount(),
            updateAuthority: getNextAccount()
        },
        data: getUpdateTokenMetadataUpdateAuthorityInstructionDataDecoder().decode(instruction.data)
    };
}
var UPDATE_TRANSFER_HOOK_DISCRIMINATOR = 36;
function getUpdateTransferHookDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_TRANSFER_HOOK_DISCRIMINATOR);
}
var UPDATE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR = 1;
function getUpdateTransferHookTransferHookDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(UPDATE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR);
}
function getUpdateTransferHookInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferHookDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "programId",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressEncoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]), (value)=>({
            ...value,
            discriminator: UPDATE_TRANSFER_HOOK_DISCRIMINATOR,
            transferHookDiscriminator: UPDATE_TRANSFER_HOOK_TRANSFER_HOOK_DISCRIMINATOR
        }));
}
function getUpdateTransferHookInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferHookDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "programId",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOptionDecoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$addresses$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressDecoder"])(), {
                prefix: null,
                noneValue: "zeroes"
            })
        ]
    ]);
}
function getUpdateTransferHookInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getUpdateTransferHookInstructionDataEncoder(), getUpdateTransferHookInstructionDataDecoder());
}
function getUpdateTransferHookInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getUpdateTransferHookInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseUpdateTransferHookInstruction(instruction) {
    if (instruction.accounts.length < 2) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            authority: getNextAccount()
        },
        data: getUpdateTransferHookInstructionDataDecoder().decode(instruction.data)
    };
}
var WITHDRAW_EXCESS_LAMPORTS_DISCRIMINATOR = 38;
function getWithdrawExcessLamportsDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_EXCESS_LAMPORTS_DISCRIMINATOR);
}
function getWithdrawExcessLamportsInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: WITHDRAW_EXCESS_LAMPORTS_DISCRIMINATOR
        }));
}
function getWithdrawExcessLamportsInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getWithdrawExcessLamportsInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getWithdrawExcessLamportsInstructionDataEncoder(), getWithdrawExcessLamportsInstructionDataDecoder());
}
function getWithdrawExcessLamportsInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_sourceAccount, _input_destinationAccount, _input_authority;
    const originalAccounts = {
        sourceAccount: {
            value: (_input_sourceAccount = input.sourceAccount) !== null && _input_sourceAccount !== void 0 ? _input_sourceAccount : null,
            isWritable: true
        },
        destinationAccount: {
            value: (_input_destinationAccount = input.destinationAccount) !== null && _input_destinationAccount !== void 0 ? _input_destinationAccount : null,
            isWritable: true
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.sourceAccount),
            getAccountMeta(accounts.destinationAccount),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getWithdrawExcessLamportsInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseWithdrawExcessLamportsInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            sourceAccount: getNextAccount(),
            destinationAccount: getNextAccount(),
            authority: getNextAccount()
        },
        data: getWithdrawExcessLamportsInstructionDataDecoder().decode(instruction.data)
    };
}
var WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_DISCRIMINATOR = 26;
function getWithdrawWithheldTokensFromAccountsDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_DISCRIMINATOR);
}
var WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_TRANSFER_FEE_DISCRIMINATOR = 3;
function getWithdrawWithheldTokensFromAccountsTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_TRANSFER_FEE_DISCRIMINATOR);
}
function getWithdrawWithheldTokensFromAccountsInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "numTokenAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_DISCRIMINATOR,
            transferFeeDiscriminator: WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getWithdrawWithheldTokensFromAccountsInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "numTokenAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getWithdrawWithheldTokensFromAccountsInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getWithdrawWithheldTokensFromAccountsInstructionDataEncoder(), getWithdrawWithheldTokensFromAccountsInstructionDataDecoder());
}
function getWithdrawWithheldTokensFromAccountsInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_feeReceiver, _input_withdrawWithheldAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        feeReceiver: {
            value: (_input_feeReceiver = input.feeReceiver) !== null && _input_feeReceiver !== void 0 ? _input_feeReceiver : null,
            isWritable: true
        },
        withdrawWithheldAuthority: {
            value: (_input_withdrawWithheldAuthority = input.withdrawWithheldAuthority) !== null && _input_withdrawWithheldAuthority !== void 0 ? _input_withdrawWithheldAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = [
        ...((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
                address: signer.address,
                role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
                signer
            })),
        ...args.sources.map((address)=>({
                address,
                role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].WRITABLE
            }))
    ];
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.feeReceiver),
            getAccountMeta(accounts.withdrawWithheldAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getWithdrawWithheldTokensFromAccountsInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseWithdrawWithheldTokensFromAccountsInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            feeReceiver: getNextAccount(),
            withdrawWithheldAuthority: getNextAccount()
        },
        data: getWithdrawWithheldTokensFromAccountsInstructionDataDecoder().decode(instruction.data)
    };
}
var WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 37;
function getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
var WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 2;
function getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
function getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "numTokenAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceEncoder()
        ]
    ]), (value)=>({
            ...value,
            discriminator: WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
            confidentialTransferFeeDiscriminator: WITHDRAW_WITHHELD_TOKENS_FROM_ACCOUNTS_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "numTokenAccounts",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceDecoder()
        ]
    ]);
}
function getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataEncoder(), getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataDecoder());
}
function getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_destination, _input_instructionsSysvarOrContextState, _input_record, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: false
        },
        destination: {
            value: (_input_destination = input.destination) !== null && _input_destination !== void 0 ? _input_destination : null,
            isWritable: true
        },
        instructionsSysvarOrContextState: {
            value: (_input_instructionsSysvarOrContextState = input.instructionsSysvarOrContextState) !== null && _input_instructionsSysvarOrContextState !== void 0 ? _input_instructionsSysvarOrContextState : null,
            isWritable: false
        },
        record: {
            value: (_input_record = input.record) !== null && _input_record !== void 0 ? _input_record : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.destination),
            getAccountMeta(accounts.instructionsSysvarOrContextState),
            getAccountMeta(accounts.record),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstruction(instruction) {
    if (instruction.accounts.length < 5) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            destination: getNextAccount(),
            instructionsSysvarOrContextState: getNextAccount(),
            record: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getWithdrawWithheldTokensFromAccountsForConfidentialTransferFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var WITHDRAW_WITHHELD_TOKENS_FROM_MINT_DISCRIMINATOR = 26;
function getWithdrawWithheldTokensFromMintDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_MINT_DISCRIMINATOR);
}
var WITHDRAW_WITHHELD_TOKENS_FROM_MINT_TRANSFER_FEE_DISCRIMINATOR = 2;
function getWithdrawWithheldTokensFromMintTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_MINT_TRANSFER_FEE_DISCRIMINATOR);
}
function getWithdrawWithheldTokensFromMintInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ]
    ]), (value)=>({
            ...value,
            discriminator: WITHDRAW_WITHHELD_TOKENS_FROM_MINT_DISCRIMINATOR,
            transferFeeDiscriminator: WITHDRAW_WITHHELD_TOKENS_FROM_MINT_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getWithdrawWithheldTokensFromMintInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "transferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ]
    ]);
}
function getWithdrawWithheldTokensFromMintInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getWithdrawWithheldTokensFromMintInstructionDataEncoder(), getWithdrawWithheldTokensFromMintInstructionDataDecoder());
}
function getWithdrawWithheldTokensFromMintInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_feeReceiver, _input_withdrawWithheldAuthority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        feeReceiver: {
            value: (_input_feeReceiver = input.feeReceiver) !== null && _input_feeReceiver !== void 0 ? _input_feeReceiver : null,
            isWritable: true
        },
        withdrawWithheldAuthority: {
            value: (_input_withdrawWithheldAuthority = input.withdrawWithheldAuthority) !== null && _input_withdrawWithheldAuthority !== void 0 ? _input_withdrawWithheldAuthority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.feeReceiver),
            getAccountMeta(accounts.withdrawWithheldAuthority),
            ...remainingAccounts
        ],
        programAddress,
        data: getWithdrawWithheldTokensFromMintInstructionDataEncoder().encode({})
    };
    return instruction;
}
function parseWithdrawWithheldTokensFromMintInstruction(instruction) {
    if (instruction.accounts.length < 3) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            feeReceiver: getNextAccount(),
            withdrawWithheldAuthority: getNextAccount()
        },
        data: getWithdrawWithheldTokensFromMintInstructionDataDecoder().decode(instruction.data)
    };
}
var WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 37;
function getWithdrawWithheldTokensFromMintForConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
var WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR = 1;
function getWithdrawWithheldTokensFromMintForConfidentialTransferFeeConfidentialTransferFeeDiscriminatorBytes() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR);
}
function getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataEncoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructEncoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Encoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceEncoder()
        ]
    ]), (value)=>({
            ...value,
            discriminator: WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR,
            confidentialTransferFeeDiscriminator: WITHDRAW_WITHHELD_TOKENS_FROM_MINT_FOR_CONFIDENTIAL_TRANSFER_FEE_CONFIDENTIAL_TRANSFER_FEE_DISCRIMINATOR
        }));
}
function getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataDecoder() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStructDecoder"])([
        [
            "discriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "confidentialTransferFeeDiscriminator",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Decoder"])()
        ],
        [
            "proofInstructionOffset",
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getI8Decoder"])()
        ],
        [
            "newDecryptableAvailableBalance",
            getDecryptableBalanceDecoder()
        ]
    ]);
}
function getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataCodec() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["combineCodec"])(getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataEncoder(), getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataDecoder());
}
function getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstruction(input, config) {
    var _config_programAddress;
    const programAddress = (_config_programAddress = config === null || config === void 0 ? void 0 : config.programAddress) !== null && _config_programAddress !== void 0 ? _config_programAddress : TOKEN_2022_PROGRAM_ADDRESS;
    var _input_mint, _input_destination, _input_instructionsSysvarOrContextState, _input_record, _input_authority;
    const originalAccounts = {
        mint: {
            value: (_input_mint = input.mint) !== null && _input_mint !== void 0 ? _input_mint : null,
            isWritable: true
        },
        destination: {
            value: (_input_destination = input.destination) !== null && _input_destination !== void 0 ? _input_destination : null,
            isWritable: true
        },
        instructionsSysvarOrContextState: {
            value: (_input_instructionsSysvarOrContextState = input.instructionsSysvarOrContextState) !== null && _input_instructionsSysvarOrContextState !== void 0 ? _input_instructionsSysvarOrContextState : null,
            isWritable: false
        },
        record: {
            value: (_input_record = input.record) !== null && _input_record !== void 0 ? _input_record : null,
            isWritable: false
        },
        authority: {
            value: (_input_authority = input.authority) !== null && _input_authority !== void 0 ? _input_authority : null,
            isWritable: false
        }
    };
    const accounts = originalAccounts;
    const args = {
        ...input
    };
    var _args_multiSigners;
    const remainingAccounts = ((_args_multiSigners = args.multiSigners) !== null && _args_multiSigners !== void 0 ? _args_multiSigners : []).map((signer)=>({
            address: signer.address,
            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$kit$2f$node_modules$2f40$solana$2f$instructions$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountRole"].READONLY_SIGNER,
            signer
        }));
    const getAccountMeta = getAccountMetaFactory(programAddress);
    const instruction = {
        accounts: [
            getAccountMeta(accounts.mint),
            getAccountMeta(accounts.destination),
            getAccountMeta(accounts.instructionsSysvarOrContextState),
            getAccountMeta(accounts.record),
            getAccountMeta(accounts.authority),
            ...remainingAccounts
        ],
        programAddress,
        data: getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataEncoder().encode(args)
    };
    return instruction;
}
function parseWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstruction(instruction) {
    if (instruction.accounts.length < 5) {
        throw new Error("Not enough accounts");
    }
    let accountIndex = 0;
    const getNextAccount = ()=>{
        const accountMeta = instruction.accounts[accountIndex];
        accountIndex += 1;
        return accountMeta;
    };
    const getNextOptionalAccount = ()=>{
        const accountMeta = getNextAccount();
        return accountMeta.address === TOKEN_2022_PROGRAM_ADDRESS ? void 0 : accountMeta;
    };
    return {
        programAddress: instruction.programAddress,
        accounts: {
            mint: getNextAccount(),
            destination: getNextAccount(),
            instructionsSysvarOrContextState: getNextAccount(),
            record: getNextOptionalAccount(),
            authority: getNextAccount()
        },
        data: getWithdrawWithheldTokensFromMintForConfidentialTransferFeeInstructionDataDecoder().decode(instruction.data)
    };
}
var ONE_IN_BASIS_POINTS = 1e4;
var SECONDS_PER_YEAR = 60 * 60 * 24 * 365.24;
function calculateExponentForTimesAndRate(t1, t2, r) {
    const timespan = t2 - t1;
    if (timespan < 0) {
        throw new Error("Invalid timespan: end time before start time");
    }
    const numerator = r * timespan;
    const exponent = numerator / (SECONDS_PER_YEAR * ONE_IN_BASIS_POINTS);
    return Math.exp(exponent);
}
function calculateTotalScale(param) {
    let { currentTimestamp, lastUpdateTimestamp, initializationTimestamp, preUpdateAverageRate, currentRate } = param;
    const preUpdateExp = calculateExponentForTimesAndRate(initializationTimestamp, lastUpdateTimestamp, preUpdateAverageRate);
    const postUpdateExp = calculateExponentForTimesAndRate(lastUpdateTimestamp, currentTimestamp, currentRate);
    return preUpdateExp * postUpdateExp;
}
function getDecimalFactor(decimals) {
    return Math.pow(10, decimals);
}
async function getSysvarClockTimestamp(rpc) {
    const info = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$sysvars$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchSysvarClock"])(rpc);
    if (!info) {
        throw new Error("Failed to fetch sysvar clock");
    }
    return info.unixTimestamp;
}
function amountToUiAmountForInterestBearingMintWithoutSimulation(amount, decimals, currentTimestamp, lastUpdateTimestamp, initializationTimestamp, preUpdateAverageRate, currentRate) {
    const totalScale = calculateTotalScale({
        currentTimestamp,
        lastUpdateTimestamp,
        initializationTimestamp,
        preUpdateAverageRate,
        currentRate
    });
    const scaledAmount = Number(amount) * totalScale;
    const decimalFactor = getDecimalFactor(decimals);
    return (Math.trunc(scaledAmount) / decimalFactor).toString();
}
function uiAmountToAmountForInterestBearingMintWithoutSimulation(uiAmount, decimals, currentTimestamp, lastUpdateTimestamp, initializationTimestamp, preUpdateAverageRate, currentRate) {
    const uiAmountNumber = parseFloat(uiAmount);
    const decimalsFactor = getDecimalFactor(decimals);
    const uiAmountScaled = uiAmountNumber * decimalsFactor;
    const totalScale = calculateTotalScale({
        currentTimestamp,
        lastUpdateTimestamp,
        initializationTimestamp,
        preUpdateAverageRate,
        currentRate
    });
    const originalPrincipal = uiAmountScaled / totalScale;
    return BigInt(Math.trunc(originalPrincipal));
}
function amountToUiAmountForScaledUiAmountMintWithoutSimulation(amount, decimals, multiplier) {
    const scaledAmount = Number(amount) * multiplier;
    const decimalFactor = getDecimalFactor(decimals);
    return (Math.trunc(scaledAmount) / decimalFactor).toString();
}
function uiAmountToAmountForScaledUiAmountMintWithoutSimulation(uiAmount, decimals, multiplier) {
    const uiAmountNumber = parseFloat(uiAmount);
    const decimalsFactor = getDecimalFactor(decimals);
    const uiAmountScaled = uiAmountNumber * decimalsFactor;
    const rawAmount = uiAmountScaled / multiplier;
    return BigInt(Math.trunc(rawAmount));
}
async function amountToUiAmountForMintWithoutSimulation(rpc, mint, amount) {
    const accountInfo = await fetchMint(rpc, mint);
    const extensions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unwrapOption"])(accountInfo.data.extensions);
    const interestBearingMintConfigState = extensions === null || extensions === void 0 ? void 0 : extensions.find((ext)=>ext.__kind === "InterestBearingConfig");
    const scaledUiAmountConfig = extensions === null || extensions === void 0 ? void 0 : extensions.find((ext)=>ext.__kind === "ScaledUiAmountConfig");
    if (!interestBearingMintConfigState && !scaledUiAmountConfig) {
        const amountNumber = Number(amount);
        const decimalsFactor = getDecimalFactor(accountInfo.data.decimals);
        return (amountNumber / decimalsFactor).toString();
    }
    const timestamp = await getSysvarClockTimestamp(rpc);
    if (interestBearingMintConfigState) {
        return amountToUiAmountForInterestBearingMintWithoutSimulation(amount, accountInfo.data.decimals, Number(timestamp), Number(interestBearingMintConfigState.lastUpdateTimestamp), Number(interestBearingMintConfigState.initializationTimestamp), interestBearingMintConfigState.preUpdateAverageRate, interestBearingMintConfigState.currentRate);
    }
    if (scaledUiAmountConfig) {
        let multiplier = scaledUiAmountConfig.multiplier;
        if (timestamp >= scaledUiAmountConfig.newMultiplierEffectiveTimestamp) {
            multiplier = scaledUiAmountConfig.newMultiplier;
        }
        return amountToUiAmountForScaledUiAmountMintWithoutSimulation(amount, accountInfo.data.decimals, multiplier);
    }
    throw new Error("Unknown mint extension type");
}
async function uiAmountToAmountForMintWithoutSimulation(rpc, mint, uiAmount) {
    const accountInfo = await fetchMint(rpc, mint);
    const extensions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unwrapOption"])(accountInfo.data.extensions);
    const interestBearingMintConfigState = extensions === null || extensions === void 0 ? void 0 : extensions.find((ext)=>ext.__kind === "InterestBearingConfig");
    const scaledUiAmountConfig = extensions === null || extensions === void 0 ? void 0 : extensions.find((ext)=>ext.__kind === "ScaledUiAmountConfig");
    if (!interestBearingMintConfigState && !scaledUiAmountConfig) {
        const uiAmountScaled = parseFloat(uiAmount) * getDecimalFactor(accountInfo.data.decimals);
        return BigInt(Math.trunc(uiAmountScaled));
    }
    const timestamp = await getSysvarClockTimestamp(rpc);
    if (interestBearingMintConfigState) {
        return uiAmountToAmountForInterestBearingMintWithoutSimulation(uiAmount, accountInfo.data.decimals, Number(timestamp), Number(interestBearingMintConfigState.lastUpdateTimestamp), Number(interestBearingMintConfigState.initializationTimestamp), interestBearingMintConfigState.preUpdateAverageRate, interestBearingMintConfigState.currentRate);
    }
    if (scaledUiAmountConfig) {
        let multiplier = scaledUiAmountConfig.multiplier;
        if (timestamp >= scaledUiAmountConfig.newMultiplierEffectiveTimestamp) {
            multiplier = scaledUiAmountConfig.newMultiplier;
        }
        return uiAmountToAmountForScaledUiAmountMintWithoutSimulation(uiAmount, accountInfo.data.decimals, multiplier);
    }
    throw new Error("Unknown mint extension type");
}
function getPreInitializeInstructionsForMintExtensions(mint, extensions) {
    return extensions.flatMap((extension2)=>{
        switch(extension2.__kind){
            case "ConfidentialTransferMint":
                return [
                    getInitializeConfidentialTransferMintInstruction({
                        mint,
                        ...extension2
                    })
                ];
            case "DefaultAccountState":
                return [
                    getInitializeDefaultAccountStateInstruction({
                        mint,
                        state: extension2.state
                    })
                ];
            case "TransferFeeConfig":
                return [
                    getInitializeTransferFeeConfigInstruction({
                        mint,
                        transferFeeConfigAuthority: extension2.transferFeeConfigAuthority,
                        withdrawWithheldAuthority: extension2.withdrawWithheldAuthority,
                        transferFeeBasisPoints: extension2.newerTransferFee.transferFeeBasisPoints,
                        maximumFee: extension2.newerTransferFee.maximumFee
                    })
                ];
            case "MetadataPointer":
                return [
                    getInitializeMetadataPointerInstruction({
                        mint,
                        authority: extension2.authority,
                        metadataAddress: extension2.metadataAddress
                    })
                ];
            case "InterestBearingConfig":
                return [
                    getInitializeInterestBearingMintInstruction({
                        mint,
                        rateAuthority: extension2.rateAuthority,
                        rate: extension2.currentRate
                    })
                ];
            case "ScaledUiAmountConfig":
                return [
                    getInitializeScaledUiAmountMintInstruction({
                        mint,
                        authority: extension2.authority,
                        multiplier: extension2.multiplier
                    })
                ];
            case "PausableConfig":
                return [
                    getInitializePausableConfigInstruction({
                        mint,
                        authority: extension2.authority
                    })
                ];
            case "GroupPointer":
                return [
                    getInitializeGroupPointerInstruction({
                        mint,
                        authority: extension2.authority,
                        groupAddress: extension2.groupAddress
                    })
                ];
            case "GroupMemberPointer":
                return [
                    getInitializeGroupMemberPointerInstruction({
                        mint,
                        authority: extension2.authority,
                        memberAddress: extension2.memberAddress
                    })
                ];
            case "NonTransferable":
                return getInitializeNonTransferableMintInstruction({
                    mint
                });
            case "TransferHook":
                return [
                    getInitializeTransferHookInstruction({
                        mint,
                        authority: extension2.authority,
                        programId: extension2.programId
                    })
                ];
            case "PermanentDelegate":
                return getInitializePermanentDelegateInstruction({
                    mint,
                    delegate: extension2.delegate
                });
            case "ConfidentialTransferFee":
                return [
                    getInitializeConfidentialTransferFeeInstruction({
                        mint,
                        authority: extension2.authority,
                        withdrawWithheldAuthorityElGamalPubkey: extension2.elgamalPubkey
                    })
                ];
            case "MintCloseAuthority":
                return getInitializeMintCloseAuthorityInstruction({
                    closeAuthority: extension2.closeAuthority,
                    mint
                });
            default:
                return [];
        }
    });
}
function getPostInitializeInstructionsForMintExtensions(mint, authority, extensions) {
    return extensions.flatMap((extension2)=>{
        switch(extension2.__kind){
            case "TokenMetadata":
                const tokenMetadataUpdateAuthority = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOption"])(extension2.updateAuthority) ? extension2.updateAuthority : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapNullable"])(extension2.updateAuthority);
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNone"])(tokenMetadataUpdateAuthority)) {
                    return [];
                }
                return [
                    getInitializeTokenMetadataInstruction({
                        metadata: mint,
                        updateAuthority: tokenMetadataUpdateAuthority.value,
                        mint,
                        mintAuthority: authority,
                        name: extension2.name,
                        symbol: extension2.symbol,
                        uri: extension2.uri
                    })
                ];
            case "TokenGroup":
                return [
                    getInitializeTokenGroupInstruction({
                        group: mint,
                        updateAuthority: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOption"])(extension2.updateAuthority) ? extension2.updateAuthority : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$options$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapNullable"])(extension2.updateAuthority),
                        mint,
                        mintAuthority: authority,
                        maxSize: extension2.maxSize
                    })
                ];
            default:
                return [];
        }
    });
}
function getPostInitializeInstructionsForTokenExtensions(token, owner, extensions, multiSigners) {
    return extensions.flatMap((extension2)=>{
        switch(extension2.__kind){
            case "MemoTransfer":
                return [
                    extension2.requireIncomingTransferMemos ? getEnableMemoTransfersInstruction({
                        owner,
                        token,
                        multiSigners
                    }) : getDisableMemoTransfersInstruction({
                        owner,
                        token,
                        multiSigners
                    })
                ];
            case "CpiGuard":
                return [
                    extension2.lockCpi ? getEnableCpiGuardInstruction({
                        owner,
                        token,
                        multiSigners
                    }) : getDisableCpiGuardInstruction({
                        owner,
                        token,
                        multiSigners
                    })
                ];
            default:
                return [];
        }
    });
}
var TOKEN_BASE_SIZE = 165;
function getTokenSize(extensions) {
    if (extensions == null) return TOKEN_BASE_SIZE;
    const tvlEncoder = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHiddenPrefixEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayEncoder"])(getExtensionEncoder(), {
        size: "remainder"
    }), [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConstantEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])().encode(2))
    ]);
    return TOKEN_BASE_SIZE + tvlEncoder.encode(extensions).length;
}
var MINT_BASE_SIZE = 82;
function getMintSize(extensions) {
    if (extensions == null) return MINT_BASE_SIZE;
    const tvlEncoder = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHiddenPrefixEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayEncoder"])(getExtensionEncoder(), {
        size: "remainder"
    }), [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$data$2d$structures$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConstantEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$core$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padLeftEncoder"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$solana$2f$codecs$2f$node_modules$2f40$solana$2f$codecs$2d$numbers$2f$dist$2f$index$2e$browser$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getU8Encoder"])(), 83).encode(1))
    ]);
    return MINT_BASE_SIZE + tvlEncoder.encode(extensions).length;
}
;
 //# sourceMappingURL=index.mjs.map
 //# sourceMappingURL=index.mjs.map
}),
}]);

//# sourceMappingURL=node_modules_%40solana-program_token-2022_dist_src_index_mjs_be429ba2._.js.map