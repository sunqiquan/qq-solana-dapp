{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/voting-dapp/voting-web/src/app/api/vote/route.ts"],"sourcesContent":["import { VotingProgram } from './../../../../../voting-program/target/types/voting_program'\nimport * as anchor from '@coral-xyz/anchor'\nimport { PublicKey, Connection, Transaction } from '@solana/web3.js'\nimport { ActionGetResponse, ACTIONS_CORS_HEADERS, createPostResponse } from '@solana/actions'\nimport IDL from '@/idl/voting_program.json'\n\nexport const OPTIONS = GET\n\nexport async function GET(request: Request) {\n  const actionMetadata: ActionGetResponse = {\n    icon: 'https://hips.hearstapps.com/hmg-prod/images/peanut-butter-vegan-1556206811.jpg?crop=0.6666666666666666xw:1xh;center,top&resize=1200:*',\n    title: 'Vote for Peanut Butter',\n    description: 'Vote for your favorite peanut butter!',\n    label: 'Vote Now!',\n    links: {\n      actions: [\n        {\n          href: 'http://localhost:3000/api/vote?candidate=Crunchy',\n          label: 'Vote Crunchy',\n          type: 'transaction',\n        },\n        {\n          href: 'http://localhost:3000/api/vote?candidate=Smooth',\n          label: 'Vote Smooth',\n          type: 'transaction',\n        },\n      ],\n    },\n  }\n  return Response.json(actionMetadata, { headers: ACTIONS_CORS_HEADERS })\n}\n\nexport async function POST(request: Request) {\n  const candidate = new URL(request.url).searchParams.get('candidate') as string\n  if (candidate !== 'Crunchy' && candidate !== 'Smooth') {\n    return Response.json({ error: 'Invalid candidate' }, { status: 400, headers: ACTIONS_CORS_HEADERS })\n  }\n\n  const connection = new Connection('http://localhost:8899', 'confirmed')\n  const program = new anchor.Program(IDL as VotingProgram, { connection })\n  const body = await request.json()\n  console.log('Request body: ', body)\n  let account: PublicKey\n\n  try {\n    account = new PublicKey(body.account)\n  } catch (err: unknown) {\n    const message = err instanceof Error ? err.message : String(err)\n    return Response.json({ error: message }, { status: 400, headers: ACTIONS_CORS_HEADERS })\n  }\n\n  const instruction = await program.methods\n    .vote(new anchor.BN(3), candidate)\n    .accounts({\n      signer: account,\n    })\n    .instruction()\n  const blockhash = await connection.getLatestBlockhash()\n\n  const tx = new Transaction({\n    feePayer: account,\n    blockhash: blockhash.blockhash,\n    lastValidBlockHeight: blockhash.lastValidBlockHeight,\n  }).add(instruction)\n\n  const response = await createPostResponse({\n    fields: {\n      type: 'transaction',\n      transaction: tx,\n    },\n  })\n\n  console.log('Response: ', response)\n\n  return Response.json(response, { headers: ACTIONS_CORS_HEADERS })\n}\n\nexport async function sendLocalnetTransaction() {\n  const phantom = window.solana\n  if (phantom?.isPhantom) {\n    await phantom.connect()\n  } else {\n    console.error('Phantom 未安装')\n    return\n  }\n\n  try {\n    // 获取钱包公钥\n    const account = phantom.publicKey\n    if (!account) {\n      throw new Error('Phantom 未连接')\n    }\n\n    const connection = new Connection('http://localhost:8899', 'confirmed')\n    const program = new anchor.Program(IDL as VotingProgram, { connection })\n    const instruction = await program.methods\n      .vote(new anchor.BN(3), 'Smooth')\n      .accounts({\n        signer: account,\n      })\n      .instruction()\n    const blockhash = await connection.getLatestBlockhash()\n\n    const tx = new Transaction({\n      feePayer: account,\n      blockhash: blockhash.blockhash,\n      lastValidBlockHeight: blockhash.lastValidBlockHeight,\n    }).add(instruction)\n\n    const signedTransaction = await phantom.signTransaction(tx)\n\n    // 发送已签名交易\n    const txid = await connection.sendRawTransaction(signedTransaction.serialize())\n    console.log('✅ 交易已发送:', txid)\n  } catch (err) {\n    console.error('❌ 交易失败:', err)\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/voting-dapp/voting-web/src/components/account/account-feature-index.tsx"],"sourcesContent":["import { ReactNode } from 'react'\nimport { useWalletUi } from '@wallet-ui/react'\nimport { WalletButton } from '@/components/solana/solana-provider'\nimport { sendLocalnetTransaction } from '@/app/api/vote/route'\n\nexport default function AccountFeatureIndex({ redirect }: { redirect: (path: string) => ReactNode }) {\n  const { account } = useWalletUi()\n\n  if (account) {\n    return redirect(`/account/${account.address.toString()}`)\n  }\n\n  return (\n    <div className=\"hero py-[64px]\">\n      <div className=\"hero-content text-center\">\n        <WalletButton />\n      </div>\n      <button\n        style={{ border: '1px solid #ccc', borderRadius: '4px', padding: '8px 12px', marginTop: '12px' }}\n        onClick={() => sendLocalnetTransaction()}\n      >\n        Vote Smooth\n      </button>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;;AAEe,SAAS,oBAAoB,KAAuD;QAAvD,EAAE,QAAQ,EAA6C,GAAvD;;IAC1C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uLAAA,CAAA,cAAW,AAAD;IAE9B,IAAI,SAAS;QACX,OAAO,SAAS,AAAC,YAAsC,OAA3B,QAAQ,OAAO,CAAC,QAAQ;IACtD;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,qJAAA,CAAA,eAAY;;;;;;;;;;0BAEf,6LAAC;gBACC,OAAO;oBAAE,QAAQ;oBAAkB,cAAc;oBAAO,SAAS;oBAAY,WAAW;gBAAO;gBAC/F,SAAS,IAAM,CAAA,GAAA,qIAAA,CAAA,0BAAuB,AAAD;0BACtC;;;;;;;;;;;;AAKP;GApBwB;;QACF,uLAAA,CAAA,cAAW;;;KADT","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/voting-dapp/voting-web/src/app/account/page.tsx"],"sourcesContent":["'use client'\nimport { redirect } from 'next/navigation'\nimport AccountFeatureIndex from '@/components/account/account-feature-index'\n\nexport default function Page() {\n  return <AccountFeatureIndex redirect={redirect} />\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,qBAAO,6LAAC,+JAAA,CAAA,UAAmB;QAAC,UAAU,qIAAA,CAAA,WAAQ;;;;;;AAChD;KAFwB","debugId":null}}]
}