{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/curd-dapp/app/src/components/journal/journal-data-access.tsx"],"sourcesContent":["import { useQuery, useQueryClient } from '@tanstack/react-query'\nimport { useWalletUi } from '@wallet-ui/react'\nimport { JOURNAL_ENTRY_DISCRIMINATOR, getJournalEntryDecoder } from '@/generated' // 路径根据你的项目调整\nimport { Address } from '@solana/kit'\n\n// 查询 Key\nfunction useGetJournalEntriesQueryKey({ owner }: { owner: Address }) {\n  const { cluster } = useWalletUi()\n  return ['get-journal-entries', { cluster, owner }] as const\n}\n\n// 无效化查询\nfunction useInvalidateGetJournalEntriesQuery({ owner }: { owner: Address }) {\n  const queryClient = useQueryClient()\n  const queryKey = useGetJournalEntriesQueryKey({ owner })\n  return async () => {\n    await queryClient.invalidateQueries({ queryKey })\n  }\n}\n\n// 主查询 Hook\nexport function useGetJournalEntriesQuery({ owner }: { owner: Address }) {\n  const { client } = useWalletUi()\n  const queryKey = useGetJournalEntriesQueryKey({ owner })\n\n  return useQuery({\n    queryKey,\n    queryFn: async () => {\n      // 1. 使用 getProgramAccounts 查询所有 JournalEntry 账户\n      const programAccounts = await client.rpc\n        .getProgramAccounts('EQ84rMPQR8HQQ5QfHKyLnRUGF3XAaUMHtWmhv1ZzSEaE' as Address, {\n          filters: [\n            // 过滤 discriminator\n            {\n              memcmp: {\n                offset: 0,\n                bytes: Array.from(JOURNAL_ENTRY_DISCRIMINATOR)\n                  .map((b) => b.toString(16).padStart(2, '0'))\n                  .join(''),\n              },\n            },\n            // 过滤 owner 字段（偏移 8）\n            {\n              memcmp: {\n                offset: 8, // discriminator 之后就是 owner\n                bytes: owner,\n              },\n            },\n          ],\n        })\n        .send()\n\n      // 2. 解码账户数据\n      const decoder = getJournalEntryDecoder()\n      return programAccounts.map((account) => {\n        const decoded = decoder.decode(account.account.data)\n        return {\n          address: account.pubkey,\n          ...decoded,\n        }\n      })\n    },\n  })\n}\n\n// 导出无效化函数（可选）\nexport { useInvalidateGetJournalEntriesQuery }\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;;;;;;;AAIA,SAAS;AACT,SAAS,6BAA6B,EAAE,KAAK,EAAsB;IACjE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD;IAC9B,OAAO;QAAC;QAAuB;YAAE;YAAS;QAAM;KAAE;AACpD;AAEA,QAAQ;AACR,SAAS,oCAAoC,EAAE,KAAK,EAAsB;IACxE,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IACjC,MAAM,WAAW,6BAA6B;QAAE;IAAM;IACtD,OAAO;QACL,MAAM,YAAY,iBAAiB,CAAC;YAAE;QAAS;IACjD;AACF;AAGO,SAAS,0BAA0B,EAAE,KAAK,EAAsB;IACrE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD;IAC7B,MAAM,WAAW,6BAA6B;QAAE;IAAM;IAEtD,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QACd;QACA,SAAS;YACP,gDAAgD;YAChD,MAAM,kBAAkB,MAAM,OAAO,GAAG,CACrC,kBAAkB,CAAC,gDAA2D;gBAC7E,SAAS;oBACP,mBAAmB;oBACnB;wBACE,QAAQ;4BACN,QAAQ;4BACR,OAAO,MAAM,IAAI,CAAC,6BACf,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MACtC,IAAI,CAAC;wBACV;oBACF;oBACA,oBAAoB;oBACpB;wBACE,QAAQ;4BACN,QAAQ;4BACR,OAAO;wBACT;oBACF;iBACD;YACH,GACC,IAAI;YAEP,YAAY;YACZ,MAAM,UAAU;YAChB,OAAO,gBAAgB,GAAG,CAAC,CAAC;gBAC1B,MAAM,UAAU,QAAQ,MAAM,CAAC,QAAQ,OAAO,CAAC,IAAI;gBACnD,OAAO;oBACL,SAAS,QAAQ,MAAM;oBACvB,GAAG,OAAO;gBACZ;YACF;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/curd-dapp/app/src/components/journal/journal-ui.tsx"],"sourcesContent":["import { useGetJournalQuery } from './journal-data-access'\nimport { useMemo, useState } from 'react'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table'\nimport { Button } from '../ui/button'\nimport { RefreshCw } from 'lucide-react'\nimport { address, Address, Lamports, lamportsToSol } from 'gill'\n\nexport function JournalList({ address }: { address: Address }) {\n  const query = useGetJournalQuery({ address })\n  const [showAll, setShowAll] = useState(false)\n\n  const items = useMemo(() => {\n    if (showAll) return query.data\n    return query.data?.slice(0, 5)\n  }, [query.data, showAll])\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between\">\n        <h2 className=\"text-2xl font-bold\">Transaction History</h2>\n        <div className=\"space-x-2\">\n          {query.isLoading ? (\n            <span className=\"loading loading-spinner\"></span>\n          ) : (\n            <Button variant=\"outline\" onClick={() => query.refetch()}>\n              <RefreshCw size={16} />\n            </Button>\n          )}\n        </div>\n      </div>\n      {query.isError && <pre className=\"alert alert-error\">Error: {query.error?.message.toString()}</pre>}\n      {query.isSuccess && (\n        <div>\n          {query.data.length === 0 ? (\n            <div>No journals found.</div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Title</TableHead>\n                  <TableHead>Content</TableHead>\n                  <TableHead>Operation</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {items?.map((item) => (\n                  <TableRow key={item.title}>\n                    <TableCell className=\"font-mono\">{item.title}</TableCell>\n                    <TableCell>{item.content}</TableCell>\n                    <TableCell>\n                      <button\n                        className=\"bg-yellow-500 text-white px-2 py-1 mr-2\"\n                        onClick={() => console.log(`Edit journal: ${item.title}`)}\n                      >\n                        Update\n                      </button>\n                      <button\n                        className=\"bg-red-500 text-white px-2 py-1\"\n                        onClick={() => console.log(`Delete journal: ${item.title}`)}\n                      >\n                        Delete\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {(query.data?.length ?? 0) > 5 && (\n                  <TableRow>\n                    <TableCell colSpan={4} className=\"text-center\">\n                      <Button variant=\"outline\" onClick={() => setShowAll(!showAll)}>\n                        {showAll ? 'Show Less' : 'Show All'}\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAGO,SAAS,YAAY,EAAE,OAAO,EAAwB;IAC3D,MAAM,QAAQ,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE;QAAE;IAAQ;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACpB,IAAI,SAAS,OAAO,MAAM,IAAI;QAC9B,OAAO,MAAM,IAAI,EAAE,MAAM,GAAG;IAC9B,GAAG;QAAC,MAAM,IAAI;QAAE;KAAQ;IAExB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8OAAC;wBAAI,WAAU;kCACZ,MAAM,SAAS,iBACd,8OAAC;4BAAK,WAAU;;;;;iDAEhB,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,SAAS,IAAM,MAAM,OAAO;sCACpD,cAAA,8OAAC,gNAAA,CAAA,YAAS;gCAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;YAKxB,MAAM,OAAO,kBAAI,8OAAC;gBAAI,WAAU;;oBAAoB;oBAAQ,MAAM,KAAK,EAAE,QAAQ;;;;;;;YACjF,MAAM,SAAS,kBACd,8OAAC;0BACE,MAAM,IAAI,CAAC,MAAM,KAAK,kBACrB,8OAAC;8BAAI;;;;;yCAEL,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;kDACP,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;;;;;;;;;;;;sCAGf,8OAAC,iIAAA,CAAA,YAAS;;gCACP,OAAO,IAAI,CAAC,qBACX,8OAAC,iIAAA,CAAA,WAAQ;;0DACP,8OAAC,iIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa,KAAK,KAAK;;;;;;0DAC5C,8OAAC,iIAAA,CAAA,YAAS;0DAAE,KAAK,OAAO;;;;;;0DACxB,8OAAC,iIAAA,CAAA,YAAS;;kEACR,8OAAC;wDACC,WAAU;wDACV,SAAS,IAAM,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,KAAK,KAAK,EAAE;kEACzD;;;;;;kEAGD,8OAAC;wDACC,WAAU;wDACV,SAAS,IAAM,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,KAAK,KAAK,EAAE;kEAC3D;;;;;;;;;;;;;uCAbU,KAAK,KAAK;;;;;gCAmB1B,CAAC,MAAM,IAAI,EAAE,UAAU,CAAC,IAAI,mBAC3B,8OAAC,iIAAA,CAAA,WAAQ;8CACP,cAAA,8OAAC,iIAAA,CAAA,YAAS;wCAAC,SAAS;wCAAG,WAAU;kDAC/B,cAAA,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,SAAS,IAAM,WAAW,CAAC;sDAClD,UAAU,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYjD","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/curd-dapp/app/src/components/journal/journal-feature-detail.tsx"],"sourcesContent":["import { assertIsAddress } from 'gill'\nimport { useMemo, useEffect } from 'react'\nimport { useWalletUi } from '@wallet-ui/react'\nimport { useParams, useRouter } from 'next/navigation'\nimport { JournalList } from './journal-ui'\n\nexport default function JournalFeatureDetail() {\n  const { account } = useWalletUi()\n  const router = useRouter()\n  useEffect(() => {\n    if (!account) {\n      router.replace('/account')\n    }\n  }, [account, router])\n\n  const params = useParams()\n  const address = useMemo(() => {\n    if (!params.address || typeof params.address !== 'string') {\n      return\n    }\n    assertIsAddress(params.address)\n    return params.address\n  }, [params])\n\n  if (!address) {\n    return <div>Error loading account</div>\n  }\n\n  return (\n    <div>\n      <JournalList address={address} />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEe,SAAS;IACtB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD;IAC9B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,SAAS;YACZ,OAAO,OAAO,CAAC;QACjB;IACF,GAAG;QAAC;QAAS;KAAO;IAEpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACtB,IAAI,CAAC,OAAO,OAAO,IAAI,OAAO,OAAO,OAAO,KAAK,UAAU;YACzD;QACF;QACA,CAAA,GAAA,kMAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,OAAO;QAC9B,OAAO,OAAO,OAAO;IACvB,GAAG;QAAC;KAAO;IAEX,IAAI,CAAC,SAAS;QACZ,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;kBACC,cAAA,8OAAC,8IAAA,CAAA,cAAW;YAAC,SAAS;;;;;;;;;;;AAG5B","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunqq/Work/solana/qq-solana-dapp/curd-dapp/app/src/app/journal/%5Baddress%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport JournalFeatureDetail from '@/components/journal/journal-feature-detail'\n\nexport default function Page() {\n  return <JournalFeatureDetail />\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,6JAAA,CAAA,UAAoB;;;;;AAC9B","debugId":null}}]
}